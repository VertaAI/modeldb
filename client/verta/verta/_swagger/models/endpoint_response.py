# coding: utf-8

"""
    Deployment API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EndpointResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'date_created': 'datetime',
        'date_updated': 'datetime',
        'owner_id': 'str',
        'workspace_id': 'int',
        'creator_request': 'EndpointCreate',
        'full_url': 'str'
    }

    attribute_map = {
        'id': 'id',
        'date_created': 'date_created',
        'date_updated': 'date_updated',
        'owner_id': 'owner_id',
        'workspace_id': 'workspace_id',
        'creator_request': 'creator_request',
        'full_url': 'full_url'
    }

    def __init__(self, id=None, date_created=None, date_updated=None, owner_id=None, workspace_id=None, creator_request=None, full_url=None):  # noqa: E501
        """EndpointResponse - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._date_created = None
        self._date_updated = None
        self._owner_id = None
        self._workspace_id = None
        self._creator_request = None
        self._full_url = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if date_created is not None:
            self.date_created = date_created
        if date_updated is not None:
            self.date_updated = date_updated
        if owner_id is not None:
            self.owner_id = owner_id
        if workspace_id is not None:
            self.workspace_id = workspace_id
        if creator_request is not None:
            self.creator_request = creator_request
        if full_url is not None:
            self.full_url = full_url

    @property
    def id(self):
        """Gets the id of this EndpointResponse.  # noqa: E501


        :return: The id of this EndpointResponse.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EndpointResponse.


        :param id: The id of this EndpointResponse.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def date_created(self):
        """Gets the date_created of this EndpointResponse.  # noqa: E501


        :return: The date_created of this EndpointResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this EndpointResponse.


        :param date_created: The date_created of this EndpointResponse.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this EndpointResponse.  # noqa: E501


        :return: The date_updated of this EndpointResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this EndpointResponse.


        :param date_updated: The date_updated of this EndpointResponse.  # noqa: E501
        :type: datetime
        """

        self._date_updated = date_updated

    @property
    def owner_id(self):
        """Gets the owner_id of this EndpointResponse.  # noqa: E501


        :return: The owner_id of this EndpointResponse.  # noqa: E501
        :rtype: str
        """
        return self._owner_id

    @owner_id.setter
    def owner_id(self, owner_id):
        """Sets the owner_id of this EndpointResponse.


        :param owner_id: The owner_id of this EndpointResponse.  # noqa: E501
        :type: str
        """

        self._owner_id = owner_id

    @property
    def workspace_id(self):
        """Gets the workspace_id of this EndpointResponse.  # noqa: E501


        :return: The workspace_id of this EndpointResponse.  # noqa: E501
        :rtype: int
        """
        return self._workspace_id

    @workspace_id.setter
    def workspace_id(self, workspace_id):
        """Sets the workspace_id of this EndpointResponse.


        :param workspace_id: The workspace_id of this EndpointResponse.  # noqa: E501
        :type: int
        """

        self._workspace_id = workspace_id

    @property
    def creator_request(self):
        """Gets the creator_request of this EndpointResponse.  # noqa: E501


        :return: The creator_request of this EndpointResponse.  # noqa: E501
        :rtype: EndpointCreate
        """
        return self._creator_request

    @creator_request.setter
    def creator_request(self, creator_request):
        """Sets the creator_request of this EndpointResponse.


        :param creator_request: The creator_request of this EndpointResponse.  # noqa: E501
        :type: EndpointCreate
        """

        self._creator_request = creator_request

    @property
    def full_url(self):
        """Gets the full_url of this EndpointResponse.  # noqa: E501


        :return: The full_url of this EndpointResponse.  # noqa: E501
        :rtype: str
        """
        return self._full_url

    @full_url.setter
    def full_url(self, full_url):
        """Sets the full_url of this EndpointResponse.


        :param full_url: The full_url of this EndpointResponse.  # noqa: E501
        :type: str
        """

        self._full_url = full_url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EndpointResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EndpointResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
