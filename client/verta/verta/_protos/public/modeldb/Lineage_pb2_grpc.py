# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ..modeldb import Lineage_pb2 as modeldb_dot_Lineage__pb2


class LineageServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.addLineage = channel.unary_unary(
                '/ai.verta.modeldb.LineageService/addLineage',
                request_serializer=modeldb_dot_Lineage__pb2.AddLineage.SerializeToString,
                response_deserializer=modeldb_dot_Lineage__pb2.AddLineage.Response.FromString,
                )
        self.deleteLineage = channel.unary_unary(
                '/ai.verta.modeldb.LineageService/deleteLineage',
                request_serializer=modeldb_dot_Lineage__pb2.DeleteLineage.SerializeToString,
                response_deserializer=modeldb_dot_Lineage__pb2.DeleteLineage.Response.FromString,
                )
        self.findAllInputs = channel.unary_unary(
                '/ai.verta.modeldb.LineageService/findAllInputs',
                request_serializer=modeldb_dot_Lineage__pb2.FindAllInputs.SerializeToString,
                response_deserializer=modeldb_dot_Lineage__pb2.FindAllInputs.Response.FromString,
                )
        self.findAllOutputs = channel.unary_unary(
                '/ai.verta.modeldb.LineageService/findAllOutputs',
                request_serializer=modeldb_dot_Lineage__pb2.FindAllOutputs.SerializeToString,
                response_deserializer=modeldb_dot_Lineage__pb2.FindAllOutputs.Response.FromString,
                )
        self.findAllInputsOutputs = channel.unary_unary(
                '/ai.verta.modeldb.LineageService/findAllInputsOutputs',
                request_serializer=modeldb_dot_Lineage__pb2.FindAllInputsOutputs.SerializeToString,
                response_deserializer=modeldb_dot_Lineage__pb2.FindAllInputsOutputs.Response.FromString,
                )


class LineageServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def addLineage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteLineage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findAllInputs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findAllOutputs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findAllInputsOutputs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LineageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'addLineage': grpc.unary_unary_rpc_method_handler(
                    servicer.addLineage,
                    request_deserializer=modeldb_dot_Lineage__pb2.AddLineage.FromString,
                    response_serializer=modeldb_dot_Lineage__pb2.AddLineage.Response.SerializeToString,
            ),
            'deleteLineage': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteLineage,
                    request_deserializer=modeldb_dot_Lineage__pb2.DeleteLineage.FromString,
                    response_serializer=modeldb_dot_Lineage__pb2.DeleteLineage.Response.SerializeToString,
            ),
            'findAllInputs': grpc.unary_unary_rpc_method_handler(
                    servicer.findAllInputs,
                    request_deserializer=modeldb_dot_Lineage__pb2.FindAllInputs.FromString,
                    response_serializer=modeldb_dot_Lineage__pb2.FindAllInputs.Response.SerializeToString,
            ),
            'findAllOutputs': grpc.unary_unary_rpc_method_handler(
                    servicer.findAllOutputs,
                    request_deserializer=modeldb_dot_Lineage__pb2.FindAllOutputs.FromString,
                    response_serializer=modeldb_dot_Lineage__pb2.FindAllOutputs.Response.SerializeToString,
            ),
            'findAllInputsOutputs': grpc.unary_unary_rpc_method_handler(
                    servicer.findAllInputsOutputs,
                    request_deserializer=modeldb_dot_Lineage__pb2.FindAllInputsOutputs.FromString,
                    response_serializer=modeldb_dot_Lineage__pb2.FindAllInputsOutputs.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ai.verta.modeldb.LineageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LineageService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def addLineage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.modeldb.LineageService/addLineage',
            modeldb_dot_Lineage__pb2.AddLineage.SerializeToString,
            modeldb_dot_Lineage__pb2.AddLineage.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteLineage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.modeldb.LineageService/deleteLineage',
            modeldb_dot_Lineage__pb2.DeleteLineage.SerializeToString,
            modeldb_dot_Lineage__pb2.DeleteLineage.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findAllInputs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.modeldb.LineageService/findAllInputs',
            modeldb_dot_Lineage__pb2.FindAllInputs.SerializeToString,
            modeldb_dot_Lineage__pb2.FindAllInputs.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findAllOutputs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.modeldb.LineageService/findAllOutputs',
            modeldb_dot_Lineage__pb2.FindAllOutputs.SerializeToString,
            modeldb_dot_Lineage__pb2.FindAllOutputs.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findAllInputsOutputs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.modeldb.LineageService/findAllInputsOutputs',
            modeldb_dot_Lineage__pb2.FindAllInputsOutputs.SerializeToString,
            modeldb_dot_Lineage__pb2.FindAllInputsOutputs.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
