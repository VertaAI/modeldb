# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ..modeldb import Job_pb2 as modeldb_dot_Job__pb2


class JobServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createJob = channel.unary_unary(
                '/ai.verta.modeldb.JobService/createJob',
                request_serializer=modeldb_dot_Job__pb2.CreateJob.SerializeToString,
                response_deserializer=modeldb_dot_Job__pb2.CreateJob.Response.FromString,
                )
        self.getJob = channel.unary_unary(
                '/ai.verta.modeldb.JobService/getJob',
                request_serializer=modeldb_dot_Job__pb2.GetJob.SerializeToString,
                response_deserializer=modeldb_dot_Job__pb2.GetJob.Response.FromString,
                )
        self.updateJob = channel.unary_unary(
                '/ai.verta.modeldb.JobService/updateJob',
                request_serializer=modeldb_dot_Job__pb2.UpdateJob.SerializeToString,
                response_deserializer=modeldb_dot_Job__pb2.UpdateJob.Response.FromString,
                )
        self.deleteJob = channel.unary_unary(
                '/ai.verta.modeldb.JobService/deleteJob',
                request_serializer=modeldb_dot_Job__pb2.DeleteJob.SerializeToString,
                response_deserializer=modeldb_dot_Job__pb2.DeleteJob.Response.FromString,
                )


class JobServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createJob': grpc.unary_unary_rpc_method_handler(
                    servicer.createJob,
                    request_deserializer=modeldb_dot_Job__pb2.CreateJob.FromString,
                    response_serializer=modeldb_dot_Job__pb2.CreateJob.Response.SerializeToString,
            ),
            'getJob': grpc.unary_unary_rpc_method_handler(
                    servicer.getJob,
                    request_deserializer=modeldb_dot_Job__pb2.GetJob.FromString,
                    response_serializer=modeldb_dot_Job__pb2.GetJob.Response.SerializeToString,
            ),
            'updateJob': grpc.unary_unary_rpc_method_handler(
                    servicer.updateJob,
                    request_deserializer=modeldb_dot_Job__pb2.UpdateJob.FromString,
                    response_serializer=modeldb_dot_Job__pb2.UpdateJob.Response.SerializeToString,
            ),
            'deleteJob': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteJob,
                    request_deserializer=modeldb_dot_Job__pb2.DeleteJob.FromString,
                    response_serializer=modeldb_dot_Job__pb2.DeleteJob.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ai.verta.modeldb.JobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class JobService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.modeldb.JobService/createJob',
            modeldb_dot_Job__pb2.CreateJob.SerializeToString,
            modeldb_dot_Job__pb2.CreateJob.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.modeldb.JobService/getJob',
            modeldb_dot_Job__pb2.GetJob.SerializeToString,
            modeldb_dot_Job__pb2.GetJob.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.modeldb.JobService/updateJob',
            modeldb_dot_Job__pb2.UpdateJob.SerializeToString,
            modeldb_dot_Job__pb2.UpdateJob.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.modeldb.JobService/deleteJob',
            modeldb_dot_Job__pb2.DeleteJob.SerializeToString,
            modeldb_dot_Job__pb2.DeleteJob.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
