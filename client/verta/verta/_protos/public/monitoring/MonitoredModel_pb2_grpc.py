# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ..monitoring import MonitoredEntity_pb2 as monitoring_dot_MonitoredEntity__pb2
from ..monitoring import MonitoredModel_pb2 as monitoring_dot_MonitoredModel__pb2


class MonitoredModelServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createMonitoredModel = channel.unary_unary(
                '/ai.verta.monitoring.MonitoredModelService/createMonitoredModel',
                request_serializer=monitoring_dot_MonitoredModel__pb2.CreateMonitoredModel.SerializeToString,
                response_deserializer=monitoring_dot_MonitoredModel__pb2.MonitoredModel.FromString,
                )
        self.updateMonitoredModel = channel.unary_unary(
                '/ai.verta.monitoring.MonitoredModelService/updateMonitoredModel',
                request_serializer=monitoring_dot_MonitoredModel__pb2.UpdateMonitoredModel.SerializeToString,
                response_deserializer=monitoring_dot_MonitoredModel__pb2.MonitoredModel.FromString,
                )
        self.findMonitoredModel = channel.unary_unary(
                '/ai.verta.monitoring.MonitoredModelService/findMonitoredModel',
                request_serializer=monitoring_dot_MonitoredModel__pb2.FindMonitoredModels.SerializeToString,
                response_deserializer=monitoring_dot_MonitoredModel__pb2.FindMonitoredModels.Response.FromString,
                )
        self.deleteMonitoredModel = channel.unary_unary(
                '/ai.verta.monitoring.MonitoredModelService/deleteMonitoredModel',
                request_serializer=monitoring_dot_MonitoredModel__pb2.DeleteMonitoredModel.SerializeToString,
                response_deserializer=monitoring_dot_MonitoredEntity__pb2.Empty.FromString,
                )


class MonitoredModelServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createMonitoredModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateMonitoredModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findMonitoredModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteMonitoredModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MonitoredModelServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createMonitoredModel': grpc.unary_unary_rpc_method_handler(
                    servicer.createMonitoredModel,
                    request_deserializer=monitoring_dot_MonitoredModel__pb2.CreateMonitoredModel.FromString,
                    response_serializer=monitoring_dot_MonitoredModel__pb2.MonitoredModel.SerializeToString,
            ),
            'updateMonitoredModel': grpc.unary_unary_rpc_method_handler(
                    servicer.updateMonitoredModel,
                    request_deserializer=monitoring_dot_MonitoredModel__pb2.UpdateMonitoredModel.FromString,
                    response_serializer=monitoring_dot_MonitoredModel__pb2.MonitoredModel.SerializeToString,
            ),
            'findMonitoredModel': grpc.unary_unary_rpc_method_handler(
                    servicer.findMonitoredModel,
                    request_deserializer=monitoring_dot_MonitoredModel__pb2.FindMonitoredModels.FromString,
                    response_serializer=monitoring_dot_MonitoredModel__pb2.FindMonitoredModels.Response.SerializeToString,
            ),
            'deleteMonitoredModel': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteMonitoredModel,
                    request_deserializer=monitoring_dot_MonitoredModel__pb2.DeleteMonitoredModel.FromString,
                    response_serializer=monitoring_dot_MonitoredEntity__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ai.verta.monitoring.MonitoredModelService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MonitoredModelService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createMonitoredModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.monitoring.MonitoredModelService/createMonitoredModel',
            monitoring_dot_MonitoredModel__pb2.CreateMonitoredModel.SerializeToString,
            monitoring_dot_MonitoredModel__pb2.MonitoredModel.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateMonitoredModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.monitoring.MonitoredModelService/updateMonitoredModel',
            monitoring_dot_MonitoredModel__pb2.UpdateMonitoredModel.SerializeToString,
            monitoring_dot_MonitoredModel__pb2.MonitoredModel.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findMonitoredModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.monitoring.MonitoredModelService/findMonitoredModel',
            monitoring_dot_MonitoredModel__pb2.FindMonitoredModels.SerializeToString,
            monitoring_dot_MonitoredModel__pb2.FindMonitoredModels.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteMonitoredModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.monitoring.MonitoredModelService/deleteMonitoredModel',
            monitoring_dot_MonitoredModel__pb2.DeleteMonitoredModel.SerializeToString,
            monitoring_dot_MonitoredEntity__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
