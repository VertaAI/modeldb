# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ..monitoring import Alert_pb2 as monitoring_dot_Alert__pb2
from ..monitoring import MonitoredEntity_pb2 as monitoring_dot_MonitoredEntity__pb2


class AlertServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createNotificationChannel = channel.unary_unary(
                '/ai.verta.monitoring.AlertService/createNotificationChannel',
                request_serializer=monitoring_dot_Alert__pb2.CreateNotificationChannelRequest.SerializeToString,
                response_deserializer=monitoring_dot_Alert__pb2.NotificationChannel.FromString,
                )
        self.updateNotificationChannel = channel.unary_unary(
                '/ai.verta.monitoring.AlertService/updateNotificationChannel',
                request_serializer=monitoring_dot_Alert__pb2.UpdateNotificationChannelRequest.SerializeToString,
                response_deserializer=monitoring_dot_Alert__pb2.NotificationChannel.FromString,
                )
        self.findNotificationChannel = channel.unary_unary(
                '/ai.verta.monitoring.AlertService/findNotificationChannel',
                request_serializer=monitoring_dot_Alert__pb2.FindNotificationChannelRequest.SerializeToString,
                response_deserializer=monitoring_dot_Alert__pb2.FindNotificationChannelRequest.Response.FromString,
                )
        self.deleteNotificationChannel = channel.unary_unary(
                '/ai.verta.monitoring.AlertService/deleteNotificationChannel',
                request_serializer=monitoring_dot_Alert__pb2.DeleteNotificationChannelRequest.SerializeToString,
                response_deserializer=monitoring_dot_MonitoredEntity__pb2.Empty.FromString,
                )
        self.createAlert = channel.unary_unary(
                '/ai.verta.monitoring.AlertService/createAlert',
                request_serializer=monitoring_dot_Alert__pb2.CreateAlertRequest.SerializeToString,
                response_deserializer=monitoring_dot_Alert__pb2.Alert.FromString,
                )
        self.updateAlert = channel.unary_unary(
                '/ai.verta.monitoring.AlertService/updateAlert',
                request_serializer=monitoring_dot_Alert__pb2.UpdateAlertRequest.SerializeToString,
                response_deserializer=monitoring_dot_Alert__pb2.Alert.FromString,
                )
        self.updateAlertStatus = channel.unary_unary(
                '/ai.verta.monitoring.AlertService/updateAlertStatus',
                request_serializer=monitoring_dot_Alert__pb2.UpdateAlertStatusRequest.SerializeToString,
                response_deserializer=monitoring_dot_MonitoredEntity__pb2.Empty.FromString,
                )
        self.findAlert = channel.unary_unary(
                '/ai.verta.monitoring.AlertService/findAlert',
                request_serializer=monitoring_dot_Alert__pb2.FindAlertRequest.SerializeToString,
                response_deserializer=monitoring_dot_Alert__pb2.FindAlertRequest.Response.FromString,
                )
        self.listAlertHistory = channel.unary_unary(
                '/ai.verta.monitoring.AlertService/listAlertHistory',
                request_serializer=monitoring_dot_Alert__pb2.ListAlertHistoryRequest.SerializeToString,
                response_deserializer=monitoring_dot_Alert__pb2.ListAlertHistoryRequest.Response.FromString,
                )
        self.deleteAlert = channel.unary_unary(
                '/ai.verta.monitoring.AlertService/deleteAlert',
                request_serializer=monitoring_dot_Alert__pb2.DeleteAlertRequest.SerializeToString,
                response_deserializer=monitoring_dot_MonitoredEntity__pb2.Empty.FromString,
                )


class AlertServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createNotificationChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateNotificationChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findNotificationChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteNotificationChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createAlert(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateAlert(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateAlertStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findAlert(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listAlertHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteAlert(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AlertServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createNotificationChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.createNotificationChannel,
                    request_deserializer=monitoring_dot_Alert__pb2.CreateNotificationChannelRequest.FromString,
                    response_serializer=monitoring_dot_Alert__pb2.NotificationChannel.SerializeToString,
            ),
            'updateNotificationChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.updateNotificationChannel,
                    request_deserializer=monitoring_dot_Alert__pb2.UpdateNotificationChannelRequest.FromString,
                    response_serializer=monitoring_dot_Alert__pb2.NotificationChannel.SerializeToString,
            ),
            'findNotificationChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.findNotificationChannel,
                    request_deserializer=monitoring_dot_Alert__pb2.FindNotificationChannelRequest.FromString,
                    response_serializer=monitoring_dot_Alert__pb2.FindNotificationChannelRequest.Response.SerializeToString,
            ),
            'deleteNotificationChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteNotificationChannel,
                    request_deserializer=monitoring_dot_Alert__pb2.DeleteNotificationChannelRequest.FromString,
                    response_serializer=monitoring_dot_MonitoredEntity__pb2.Empty.SerializeToString,
            ),
            'createAlert': grpc.unary_unary_rpc_method_handler(
                    servicer.createAlert,
                    request_deserializer=monitoring_dot_Alert__pb2.CreateAlertRequest.FromString,
                    response_serializer=monitoring_dot_Alert__pb2.Alert.SerializeToString,
            ),
            'updateAlert': grpc.unary_unary_rpc_method_handler(
                    servicer.updateAlert,
                    request_deserializer=monitoring_dot_Alert__pb2.UpdateAlertRequest.FromString,
                    response_serializer=monitoring_dot_Alert__pb2.Alert.SerializeToString,
            ),
            'updateAlertStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.updateAlertStatus,
                    request_deserializer=monitoring_dot_Alert__pb2.UpdateAlertStatusRequest.FromString,
                    response_serializer=monitoring_dot_MonitoredEntity__pb2.Empty.SerializeToString,
            ),
            'findAlert': grpc.unary_unary_rpc_method_handler(
                    servicer.findAlert,
                    request_deserializer=monitoring_dot_Alert__pb2.FindAlertRequest.FromString,
                    response_serializer=monitoring_dot_Alert__pb2.FindAlertRequest.Response.SerializeToString,
            ),
            'listAlertHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.listAlertHistory,
                    request_deserializer=monitoring_dot_Alert__pb2.ListAlertHistoryRequest.FromString,
                    response_serializer=monitoring_dot_Alert__pb2.ListAlertHistoryRequest.Response.SerializeToString,
            ),
            'deleteAlert': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteAlert,
                    request_deserializer=monitoring_dot_Alert__pb2.DeleteAlertRequest.FromString,
                    response_serializer=monitoring_dot_MonitoredEntity__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ai.verta.monitoring.AlertService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AlertService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createNotificationChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.monitoring.AlertService/createNotificationChannel',
            monitoring_dot_Alert__pb2.CreateNotificationChannelRequest.SerializeToString,
            monitoring_dot_Alert__pb2.NotificationChannel.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateNotificationChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.monitoring.AlertService/updateNotificationChannel',
            monitoring_dot_Alert__pb2.UpdateNotificationChannelRequest.SerializeToString,
            monitoring_dot_Alert__pb2.NotificationChannel.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findNotificationChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.monitoring.AlertService/findNotificationChannel',
            monitoring_dot_Alert__pb2.FindNotificationChannelRequest.SerializeToString,
            monitoring_dot_Alert__pb2.FindNotificationChannelRequest.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteNotificationChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.monitoring.AlertService/deleteNotificationChannel',
            monitoring_dot_Alert__pb2.DeleteNotificationChannelRequest.SerializeToString,
            monitoring_dot_MonitoredEntity__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createAlert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.monitoring.AlertService/createAlert',
            monitoring_dot_Alert__pb2.CreateAlertRequest.SerializeToString,
            monitoring_dot_Alert__pb2.Alert.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateAlert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.monitoring.AlertService/updateAlert',
            monitoring_dot_Alert__pb2.UpdateAlertRequest.SerializeToString,
            monitoring_dot_Alert__pb2.Alert.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateAlertStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.monitoring.AlertService/updateAlertStatus',
            monitoring_dot_Alert__pb2.UpdateAlertStatusRequest.SerializeToString,
            monitoring_dot_MonitoredEntity__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findAlert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.monitoring.AlertService/findAlert',
            monitoring_dot_Alert__pb2.FindAlertRequest.SerializeToString,
            monitoring_dot_Alert__pb2.FindAlertRequest.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listAlertHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.monitoring.AlertService/listAlertHistory',
            monitoring_dot_Alert__pb2.ListAlertHistoryRequest.SerializeToString,
            monitoring_dot_Alert__pb2.ListAlertHistoryRequest.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteAlert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.monitoring.AlertService/deleteAlert',
            monitoring_dot_Alert__pb2.DeleteAlertRequest.SerializeToString,
            monitoring_dot_MonitoredEntity__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
