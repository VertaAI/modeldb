# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from ..monitoring import MonitoredEntity_pb2 as monitoring_dot_MonitoredEntity__pb2


class MonitoredEntityServiceStub(object):
  """Service definitions
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.createMonitoredEntity = channel.unary_unary(
        '/ai.verta.monitoring.MonitoredEntityService/createMonitoredEntity',
        request_serializer=monitoring_dot_MonitoredEntity__pb2.CreateMonitoredEntityRequest.SerializeToString,
        response_deserializer=monitoring_dot_MonitoredEntity__pb2.CreateMonitoredEntityRequest.Response.FromString,
        )
    self.updateMonitoredEntity = channel.unary_unary(
        '/ai.verta.monitoring.MonitoredEntityService/updateMonitoredEntity',
        request_serializer=monitoring_dot_MonitoredEntity__pb2.UpdateMonitoredEntityRequest.SerializeToString,
        response_deserializer=monitoring_dot_MonitoredEntity__pb2.UpdateMonitoredEntityRequest.Response.FromString,
        )
    self.findMonitoredEntity = channel.unary_unary(
        '/ai.verta.monitoring.MonitoredEntityService/findMonitoredEntity',
        request_serializer=monitoring_dot_MonitoredEntity__pb2.FindMonitoredEntityRequest.SerializeToString,
        response_deserializer=monitoring_dot_MonitoredEntity__pb2.FindMonitoredEntityRequest.Response.FromString,
        )
    self.deleteMonitoredEntity = channel.unary_unary(
        '/ai.verta.monitoring.MonitoredEntityService/deleteMonitoredEntity',
        request_serializer=monitoring_dot_MonitoredEntity__pb2.DeleteMonitoredEntityRequest.SerializeToString,
        response_deserializer=monitoring_dot_MonitoredEntity__pb2.DeleteMonitoredEntityRequest.Response.FromString,
        )


class MonitoredEntityServiceServicer(object):
  """Service definitions
  """

  def createMonitoredEntity(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def updateMonitoredEntity(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findMonitoredEntity(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteMonitoredEntity(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MonitoredEntityServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'createMonitoredEntity': grpc.unary_unary_rpc_method_handler(
          servicer.createMonitoredEntity,
          request_deserializer=monitoring_dot_MonitoredEntity__pb2.CreateMonitoredEntityRequest.FromString,
          response_serializer=monitoring_dot_MonitoredEntity__pb2.CreateMonitoredEntityRequest.Response.SerializeToString,
      ),
      'updateMonitoredEntity': grpc.unary_unary_rpc_method_handler(
          servicer.updateMonitoredEntity,
          request_deserializer=monitoring_dot_MonitoredEntity__pb2.UpdateMonitoredEntityRequest.FromString,
          response_serializer=monitoring_dot_MonitoredEntity__pb2.UpdateMonitoredEntityRequest.Response.SerializeToString,
      ),
      'findMonitoredEntity': grpc.unary_unary_rpc_method_handler(
          servicer.findMonitoredEntity,
          request_deserializer=monitoring_dot_MonitoredEntity__pb2.FindMonitoredEntityRequest.FromString,
          response_serializer=monitoring_dot_MonitoredEntity__pb2.FindMonitoredEntityRequest.Response.SerializeToString,
      ),
      'deleteMonitoredEntity': grpc.unary_unary_rpc_method_handler(
          servicer.deleteMonitoredEntity,
          request_deserializer=monitoring_dot_MonitoredEntity__pb2.DeleteMonitoredEntityRequest.FromString,
          response_serializer=monitoring_dot_MonitoredEntity__pb2.DeleteMonitoredEntityRequest.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ai.verta.monitoring.MonitoredEntityService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
