# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ..uac import Authorization_pb2 as uac_dot_Authorization__pb2


class AuthzServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.isAllowed = channel.unary_unary(
                '/ai.verta.uac.AuthzService/isAllowed',
                request_serializer=uac_dot_Authorization__pb2.IsAllowed.SerializeToString,
                response_deserializer=uac_dot_Authorization__pb2.IsAllowed.Response.FromString,
                )
        self.getAllowedEntities = channel.unary_unary(
                '/ai.verta.uac.AuthzService/getAllowedEntities',
                request_serializer=uac_dot_Authorization__pb2.GetAllowedEntities.SerializeToString,
                response_deserializer=uac_dot_Authorization__pb2.GetAllowedEntities.Response.FromString,
                )
        self.getAllowedEntitiesWithActions = channel.unary_unary(
                '/ai.verta.uac.AuthzService/getAllowedEntitiesWithActions',
                request_serializer=uac_dot_Authorization__pb2.GetAllowedEntitiesWithActions.SerializeToString,
                response_deserializer=uac_dot_Authorization__pb2.GetAllowedEntitiesWithActions.Response.FromString,
                )
        self.getAllowedResources = channel.unary_unary(
                '/ai.verta.uac.AuthzService/getAllowedResources',
                request_serializer=uac_dot_Authorization__pb2.GetAllowedResources.SerializeToString,
                response_deserializer=uac_dot_Authorization__pb2.GetAllowedResources.Response.FromString,
                )
        self.getDireclyAllowedResources = channel.unary_unary(
                '/ai.verta.uac.AuthzService/getDireclyAllowedResources',
                request_serializer=uac_dot_Authorization__pb2.GetAllowedResources.SerializeToString,
                response_deserializer=uac_dot_Authorization__pb2.GetAllowedResources.Response.FromString,
                )
        self.isSelfAllowed = channel.unary_unary(
                '/ai.verta.uac.AuthzService/isSelfAllowed',
                request_serializer=uac_dot_Authorization__pb2.IsSelfAllowed.SerializeToString,
                response_deserializer=uac_dot_Authorization__pb2.IsSelfAllowed.Response.FromString,
                )
        self.getSelfAllowedResources = channel.unary_unary(
                '/ai.verta.uac.AuthzService/getSelfAllowedResources',
                request_serializer=uac_dot_Authorization__pb2.GetSelfAllowedResources.SerializeToString,
                response_deserializer=uac_dot_Authorization__pb2.GetSelfAllowedResources.Response.FromString,
                )
        self.getSelfDirectlyAllowedResources = channel.unary_unary(
                '/ai.verta.uac.AuthzService/getSelfDirectlyAllowedResources',
                request_serializer=uac_dot_Authorization__pb2.GetSelfAllowedResources.SerializeToString,
                response_deserializer=uac_dot_Authorization__pb2.GetSelfAllowedResources.Response.FromString,
                )
        self.getSelfAllowedActionsBatch = channel.unary_unary(
                '/ai.verta.uac.AuthzService/getSelfAllowedActionsBatch',
                request_serializer=uac_dot_Authorization__pb2.GetSelfAllowedActionsBatch.SerializeToString,
                response_deserializer=uac_dot_Authorization__pb2.GetSelfAllowedActionsBatch.Response.FromString,
                )


class AuthzServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def isAllowed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAllowedEntities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAllowedEntitiesWithActions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAllowedResources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDireclyAllowedResources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isSelfAllowed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getSelfAllowedResources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getSelfDirectlyAllowedResources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getSelfAllowedActionsBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthzServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'isAllowed': grpc.unary_unary_rpc_method_handler(
                    servicer.isAllowed,
                    request_deserializer=uac_dot_Authorization__pb2.IsAllowed.FromString,
                    response_serializer=uac_dot_Authorization__pb2.IsAllowed.Response.SerializeToString,
            ),
            'getAllowedEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.getAllowedEntities,
                    request_deserializer=uac_dot_Authorization__pb2.GetAllowedEntities.FromString,
                    response_serializer=uac_dot_Authorization__pb2.GetAllowedEntities.Response.SerializeToString,
            ),
            'getAllowedEntitiesWithActions': grpc.unary_unary_rpc_method_handler(
                    servicer.getAllowedEntitiesWithActions,
                    request_deserializer=uac_dot_Authorization__pb2.GetAllowedEntitiesWithActions.FromString,
                    response_serializer=uac_dot_Authorization__pb2.GetAllowedEntitiesWithActions.Response.SerializeToString,
            ),
            'getAllowedResources': grpc.unary_unary_rpc_method_handler(
                    servicer.getAllowedResources,
                    request_deserializer=uac_dot_Authorization__pb2.GetAllowedResources.FromString,
                    response_serializer=uac_dot_Authorization__pb2.GetAllowedResources.Response.SerializeToString,
            ),
            'getDireclyAllowedResources': grpc.unary_unary_rpc_method_handler(
                    servicer.getDireclyAllowedResources,
                    request_deserializer=uac_dot_Authorization__pb2.GetAllowedResources.FromString,
                    response_serializer=uac_dot_Authorization__pb2.GetAllowedResources.Response.SerializeToString,
            ),
            'isSelfAllowed': grpc.unary_unary_rpc_method_handler(
                    servicer.isSelfAllowed,
                    request_deserializer=uac_dot_Authorization__pb2.IsSelfAllowed.FromString,
                    response_serializer=uac_dot_Authorization__pb2.IsSelfAllowed.Response.SerializeToString,
            ),
            'getSelfAllowedResources': grpc.unary_unary_rpc_method_handler(
                    servicer.getSelfAllowedResources,
                    request_deserializer=uac_dot_Authorization__pb2.GetSelfAllowedResources.FromString,
                    response_serializer=uac_dot_Authorization__pb2.GetSelfAllowedResources.Response.SerializeToString,
            ),
            'getSelfDirectlyAllowedResources': grpc.unary_unary_rpc_method_handler(
                    servicer.getSelfDirectlyAllowedResources,
                    request_deserializer=uac_dot_Authorization__pb2.GetSelfAllowedResources.FromString,
                    response_serializer=uac_dot_Authorization__pb2.GetSelfAllowedResources.Response.SerializeToString,
            ),
            'getSelfAllowedActionsBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.getSelfAllowedActionsBatch,
                    request_deserializer=uac_dot_Authorization__pb2.GetSelfAllowedActionsBatch.FromString,
                    response_serializer=uac_dot_Authorization__pb2.GetSelfAllowedActionsBatch.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ai.verta.uac.AuthzService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuthzService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def isAllowed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.AuthzService/isAllowed',
            uac_dot_Authorization__pb2.IsAllowed.SerializeToString,
            uac_dot_Authorization__pb2.IsAllowed.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAllowedEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.AuthzService/getAllowedEntities',
            uac_dot_Authorization__pb2.GetAllowedEntities.SerializeToString,
            uac_dot_Authorization__pb2.GetAllowedEntities.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAllowedEntitiesWithActions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.AuthzService/getAllowedEntitiesWithActions',
            uac_dot_Authorization__pb2.GetAllowedEntitiesWithActions.SerializeToString,
            uac_dot_Authorization__pb2.GetAllowedEntitiesWithActions.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAllowedResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.AuthzService/getAllowedResources',
            uac_dot_Authorization__pb2.GetAllowedResources.SerializeToString,
            uac_dot_Authorization__pb2.GetAllowedResources.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getDireclyAllowedResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.AuthzService/getDireclyAllowedResources',
            uac_dot_Authorization__pb2.GetAllowedResources.SerializeToString,
            uac_dot_Authorization__pb2.GetAllowedResources.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def isSelfAllowed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.AuthzService/isSelfAllowed',
            uac_dot_Authorization__pb2.IsSelfAllowed.SerializeToString,
            uac_dot_Authorization__pb2.IsSelfAllowed.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getSelfAllowedResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.AuthzService/getSelfAllowedResources',
            uac_dot_Authorization__pb2.GetSelfAllowedResources.SerializeToString,
            uac_dot_Authorization__pb2.GetSelfAllowedResources.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getSelfDirectlyAllowedResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.AuthzService/getSelfDirectlyAllowedResources',
            uac_dot_Authorization__pb2.GetSelfAllowedResources.SerializeToString,
            uac_dot_Authorization__pb2.GetSelfAllowedResources.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getSelfAllowedActionsBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.AuthzService/getSelfAllowedActionsBatch',
            uac_dot_Authorization__pb2.GetSelfAllowedActionsBatch.SerializeToString,
            uac_dot_Authorization__pb2.GetSelfAllowedActionsBatch.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
