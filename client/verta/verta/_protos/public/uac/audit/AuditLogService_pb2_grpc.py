# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from ...uac.audit import AuditLogService_pb2 as uac_dot_audit_dot_AuditLogService__pb2


class AuditLogServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.postAuditLogs = channel.unary_unary(
        '/ai.verta.uac.versioning.AuditLogService/postAuditLogs',
        request_serializer=uac_dot_audit_dot_AuditLogService__pb2.AddAuditLogBatch.SerializeToString,
        response_deserializer=uac_dot_audit_dot_AuditLogService__pb2.AddAuditLogBatch.Response.FromString,
        )
    self.findAuditLog = channel.unary_unary(
        '/ai.verta.uac.versioning.AuditLogService/findAuditLog',
        request_serializer=uac_dot_audit_dot_AuditLogService__pb2.FindAuditLog.SerializeToString,
        response_deserializer=uac_dot_audit_dot_AuditLogService__pb2.FindAuditLog.Response.FromString,
        )


class AuditLogServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def postAuditLogs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findAuditLog(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AuditLogServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'postAuditLogs': grpc.unary_unary_rpc_method_handler(
          servicer.postAuditLogs,
          request_deserializer=uac_dot_audit_dot_AuditLogService__pb2.AddAuditLogBatch.FromString,
          response_serializer=uac_dot_audit_dot_AuditLogService__pb2.AddAuditLogBatch.Response.SerializeToString,
      ),
      'findAuditLog': grpc.unary_unary_rpc_method_handler(
          servicer.findAuditLog,
          request_deserializer=uac_dot_audit_dot_AuditLogService__pb2.FindAuditLog.FromString,
          response_serializer=uac_dot_audit_dot_AuditLogService__pb2.FindAuditLog.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ai.verta.uac.versioning.AuditLogService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
