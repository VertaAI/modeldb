# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from ..uac import WorkspaceV2_pb2 as uac_dot_WorkspaceV2__pb2


class WorkspaceServiceV2Stub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.setWorkspace = channel.unary_unary(
        '/ai.verta.uac.WorkspaceServiceV2/setWorkspace',
        request_serializer=uac_dot_WorkspaceV2__pb2.SetWorkspaceV2.SerializeToString,
        response_deserializer=uac_dot_WorkspaceV2__pb2.SetWorkspaceV2.Response.FromString,
        )
    self.getWorkspace = channel.unary_unary(
        '/ai.verta.uac.WorkspaceServiceV2/getWorkspace',
        request_serializer=uac_dot_WorkspaceV2__pb2.GetWorkspaceV2.SerializeToString,
        response_deserializer=uac_dot_WorkspaceV2__pb2.GetWorkspaceV2.Response.FromString,
        )
    self.deleteWorkspace = channel.unary_unary(
        '/ai.verta.uac.WorkspaceServiceV2/deleteWorkspace',
        request_serializer=uac_dot_WorkspaceV2__pb2.DeleteWorkspaceV2.SerializeToString,
        response_deserializer=uac_dot_WorkspaceV2__pb2.DeleteWorkspaceV2.Response.FromString,
        )
    self.searchWorkspaces = channel.unary_unary(
        '/ai.verta.uac.WorkspaceServiceV2/searchWorkspaces',
        request_serializer=uac_dot_WorkspaceV2__pb2.SearchWorkspacesV2.SerializeToString,
        response_deserializer=uac_dot_WorkspaceV2__pb2.SearchWorkspacesV2.Response.FromString,
        )


class WorkspaceServiceV2Servicer(object):
  # missing associated documentation comment in .proto file
  pass

  def setWorkspace(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getWorkspace(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteWorkspace(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def searchWorkspaces(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_WorkspaceServiceV2Servicer_to_server(servicer, server):
  rpc_method_handlers = {
      'setWorkspace': grpc.unary_unary_rpc_method_handler(
          servicer.setWorkspace,
          request_deserializer=uac_dot_WorkspaceV2__pb2.SetWorkspaceV2.FromString,
          response_serializer=uac_dot_WorkspaceV2__pb2.SetWorkspaceV2.Response.SerializeToString,
      ),
      'getWorkspace': grpc.unary_unary_rpc_method_handler(
          servicer.getWorkspace,
          request_deserializer=uac_dot_WorkspaceV2__pb2.GetWorkspaceV2.FromString,
          response_serializer=uac_dot_WorkspaceV2__pb2.GetWorkspaceV2.Response.SerializeToString,
      ),
      'deleteWorkspace': grpc.unary_unary_rpc_method_handler(
          servicer.deleteWorkspace,
          request_deserializer=uac_dot_WorkspaceV2__pb2.DeleteWorkspaceV2.FromString,
          response_serializer=uac_dot_WorkspaceV2__pb2.DeleteWorkspaceV2.Response.SerializeToString,
      ),
      'searchWorkspaces': grpc.unary_unary_rpc_method_handler(
          servicer.searchWorkspaces,
          request_deserializer=uac_dot_WorkspaceV2__pb2.SearchWorkspacesV2.FromString,
          response_serializer=uac_dot_WorkspaceV2__pb2.SearchWorkspacesV2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ai.verta.uac.WorkspaceServiceV2', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
