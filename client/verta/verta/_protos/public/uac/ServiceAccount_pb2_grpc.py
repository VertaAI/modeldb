# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ..uac import ServiceAccount_pb2 as uac_dot_ServiceAccount__pb2
from ..uac import UACService_pb2 as uac_dot_UACService__pb2


class ServiceAccountServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createServiceAccount = channel.unary_unary(
                '/ai.verta.uac.ServiceAccountService/createServiceAccount',
                request_serializer=uac_dot_ServiceAccount__pb2.CreateServiceAccountRequest.SerializeToString,
                response_deserializer=uac_dot_ServiceAccount__pb2.ServiceAccount.FromString,
                )
        self.findServiceAccount = channel.unary_unary(
                '/ai.verta.uac.ServiceAccountService/findServiceAccount',
                request_serializer=uac_dot_ServiceAccount__pb2.FindServiceAccountRequest.SerializeToString,
                response_deserializer=uac_dot_ServiceAccount__pb2.FindServiceAccountRequest.Response.FromString,
                )
        self.deleteServiceAccount = channel.unary_unary(
                '/ai.verta.uac.ServiceAccountService/deleteServiceAccount',
                request_serializer=uac_dot_ServiceAccount__pb2.DeleteServiceAccountRequest.SerializeToString,
                response_deserializer=uac_dot_UACService__pb2.Empty.FromString,
                )
        self.updateServiceAccount = channel.unary_unary(
                '/ai.verta.uac.ServiceAccountService/updateServiceAccount',
                request_serializer=uac_dot_ServiceAccount__pb2.UpdateServiceAccountRequest.SerializeToString,
                response_deserializer=uac_dot_ServiceAccount__pb2.ServiceAccount.FromString,
                )


class ServiceAccountServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createServiceAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findServiceAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteServiceAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateServiceAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServiceAccountServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createServiceAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.createServiceAccount,
                    request_deserializer=uac_dot_ServiceAccount__pb2.CreateServiceAccountRequest.FromString,
                    response_serializer=uac_dot_ServiceAccount__pb2.ServiceAccount.SerializeToString,
            ),
            'findServiceAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.findServiceAccount,
                    request_deserializer=uac_dot_ServiceAccount__pb2.FindServiceAccountRequest.FromString,
                    response_serializer=uac_dot_ServiceAccount__pb2.FindServiceAccountRequest.Response.SerializeToString,
            ),
            'deleteServiceAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteServiceAccount,
                    request_deserializer=uac_dot_ServiceAccount__pb2.DeleteServiceAccountRequest.FromString,
                    response_serializer=uac_dot_UACService__pb2.Empty.SerializeToString,
            ),
            'updateServiceAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.updateServiceAccount,
                    request_deserializer=uac_dot_ServiceAccount__pb2.UpdateServiceAccountRequest.FromString,
                    response_serializer=uac_dot_ServiceAccount__pb2.ServiceAccount.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ai.verta.uac.ServiceAccountService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServiceAccountService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createServiceAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.ServiceAccountService/createServiceAccount',
            uac_dot_ServiceAccount__pb2.CreateServiceAccountRequest.SerializeToString,
            uac_dot_ServiceAccount__pb2.ServiceAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findServiceAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.ServiceAccountService/findServiceAccount',
            uac_dot_ServiceAccount__pb2.FindServiceAccountRequest.SerializeToString,
            uac_dot_ServiceAccount__pb2.FindServiceAccountRequest.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteServiceAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.ServiceAccountService/deleteServiceAccount',
            uac_dot_ServiceAccount__pb2.DeleteServiceAccountRequest.SerializeToString,
            uac_dot_UACService__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateServiceAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.ServiceAccountService/updateServiceAccount',
            uac_dot_ServiceAccount__pb2.UpdateServiceAccountRequest.SerializeToString,
            uac_dot_ServiceAccount__pb2.ServiceAccount.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
