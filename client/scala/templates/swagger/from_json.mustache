{{#any}}String{{/any}}{{#generic}}GenericObject.fromJson{{/generic}}{{#double}}JsonConverter.fromJsonDouble{{/double}}{{#integer}}JsonConverter.fromJsonInteger{{/integer}}{{#string}}JsonConverter.fromJsonString{{/string}}{{#boolean}}JsonConverter.fromJsonBoolean{{/boolean}}{{#custom}}{{name}}.fromJson{{/custom}}{{#is_list}}(x: JValue) => x match {case JArray(elements) => elements.map({{#list_type}}{{> from_json}}{{/list_type}}); case _ => throw new IllegalArgumentException(s"unknown type ${x.getClass.toString}")}{{/is_list}}{{#is_map}}(x: JValue) => x match {case JObject(fields) => fields.map(kv => (kv.name, {{#map_val_type}}{{> from_json}}{{/map_val_type}}(kv.value))).toMap; case _ => throw new IllegalArgumentException(s"unknown type ${x.getClass.toString}")}{{/is_map}}