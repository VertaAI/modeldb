syntax = "proto3";

package ai.verta.monitoring;
option go_package = "github.com/VertaAI/modeldb/protos/gen/go/protos/public/monitoring";

option java_multiple_files = true;

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

import "monitoring/Summary.proto";

// Request to fetch the existing labels for a given subset of summary samples
message FindSampleLabelsRequest {
    FilterQuerySummarySample filter = 1; // Optional

    // Pagination
    int32 page_number = 2;
    int32 page_limit = 3;

    message Response {
        repeated string labels = 1;
        int32 total_records = 2;
    }
}

// Request to fetch the existing label values for a given subset of summary samples
message FindSampleLabelValuesRequest {
    FilterQuerySummarySample filter = 1; // Optional
    repeated string labels = 2;

    // Pagination
    int32 page_number = 3;
    int32 page_limit = 4;

    message Response {
        map<string, FindSampleLabelValuesItem> labels = 1;
        int32 total_records = 2;
    }
}

message FindSampleLabelValuesItem {
    repeated string values = 1;
}

service LabelService {
    rpc findLabels(FindSampleLabelsRequest) returns (FindSampleLabelsRequest.Response) {
        option (google.api.http) = {
            post: "/api/v1/monitoring/labels/findLabels"
            body: "*"
        };
    };

    rpc findLabelValues(FindSampleLabelValuesRequest) returns (FindSampleLabelValuesRequest.Response) {
        option (google.api.http) = {
            post: "/api/v1/monitoring/labels/findLabelValues"
            body: "*"
        };
    };
}
