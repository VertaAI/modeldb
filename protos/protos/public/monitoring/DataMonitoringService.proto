syntax = "proto3";

package ai.verta.monitoring;
option go_package = "github.com/VertaAI/modeldb/protos/gen/go/protos/public/monitoring";

option java_multiple_files = true;

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

// Data source

message DataSource {
  uint64 id = 1;
  string name = 2;
  string data_source_reference = 3;
  uint64 monitored_entity_id = 4;
  uint64 timestamp_millis = 5;
}

message CreateDataSourceRequest {
  string data_source_reference = 1;
  string name = 2;
  uint64 monitored_entity_id = 3;

  message Response {
    DataSource data_source = 1;
  }
}

message GetDataSourceRequest {
  uint64 id = 1;

  message Response {
    DataSource data_source = 1;
  }
}

message FindDataSourcesRequest {
  uint64 monitored_entity_id = 1;

  message Response {
    repeated DataSource dataSources = 1;
  }
}

message ListDataSourcesRequest {
  message Response {
    repeated DataSource dataSource = 1;
  }
}

message DeleteDataSourceRequest {
  uint64 id = 1;

  message Response {
  }
}


// Profiler

message Profiler {
  uint64 id = 1;
  string name = 2;
  string profiler_reference = 3;
}

message CreateProfilerRequest {
  string name = 1;
  string profiler_reference = 2;

  message Response {
    Profiler profiler = 1;
  }
}

message GetProfilerRequest {
  uint64 id = 1;

  message Response {
    Profiler profiler = 1;
  }
}

message UpdateProfilerRequest {
  uint64 id = 1;
  string name = 2;
  string profiler_reference = 3;

  message Response {
    Profiler profiler = 1;
  }
}

message ListProfilersRequest {

  message Response {
    repeated Profiler profilers = 1;
  }
}

message DeleteProfilerRequest {
  uint64 id = 1;

  message Response {
  }
}

// Mirror deployment API build response
message BuildStatusEnum {
  enum BuildStatus {
    UNDEFINED = 0;
    BUILDING = 1;
    DELETING = 2;
    ERROR = 3;
    FINISHED = 4;
  }
}

// Mirror deployment API stage status
message DeployStatusEnum {
  enum DeployStatus {
    UNDEFINED = 0;
    INACTIVE = 1;
    ACTIVE = 2;
    UPDATING = 3;
    CREATING = 4;
    ERROR = 5;
  }
}

message ProfilerStatus {
  uint32 profiler_id = 1;
  uint32 monitored_entity_id = 2;
  BuildStatusEnum.BuildStatus build_status = 3;
  DeployStatusEnum.DeployStatus deploy_status = 4;
}

message GetProfilerStatusRequest {
  uint32 profiler_id = 1;
  uint32 monitored_entity_id = 2;

  message Response {
    ProfilerStatus status = 1;
  }
}

message FindProfilersForMonitoredEntityRequest {
  uint32 monitored_entity_id = 1;

  message Response {
    repeated ProfilerStatus statuses = 1;
  }
}

message KeyValue {
    string key = 1;
    google.protobuf.Value value = 2;

    /*
    *   As per documentation of proto buffer 3.
    *   For enums, the default value is the first defined enum value, which must be 0.
    */
    ValueTypeEnum.ValueType value_type = 3;
}

message ValueTypeEnum {
    enum ValueType {
        STRING = 0;
        NUMBER = 1;
        LIST = 2;
        BLOB = 3;
    }
}

message EnableProfilerRequest {
  uint32 profiler_id = 1;
  uint32 monitored_entity_id = 2;
  repeated KeyValue environment = 3;

  message Response {
    ProfilerStatus status = 1;
  }
}

message DisableProfilerRequest {
  uint32 profiler_id = 1;
  uint32 monitored_entity_id = 2;

  message Response {
    ProfilerStatus status = 1;
  }
}

// // Summary

// message Summary {
//   uint64 id = 1;
//   string name = 2;
//   uint64 data_source_id = 3;
//   uint64 monitored_entity_id = 5;
//   uint64 profiler_id = 9;
//   string blob = 4;
//   uint64 created_at_millis = 6;
//   uint64 time_window_start_at_millis = 7;
//   uint64 time_window_end_at_millis = 8;
// }

// message CreateSummaryRequest {
//   uint64 monitored_entity_id = 1;
//   uint64 data_source_id = 2;
//   uint64 profiler_id = 5;
//   string name = 3;
//   string blob = 4;
//   uint64 time_window_start_at_millis = 6;
//   uint64 time_window_end_at_millis = 7;

//   message Response {
//     Summary summary = 1;
//   }
// }

// message GetSummaryRequest {
//   uint64 id = 1;

//   message Response {
//     Summary summary = 1;
//   }
// }

// // Find the Summary that spans the given timestamp
// message FindSummaryRequest {
//   uint64 monitored_entity_id = 1;
//   uint64 data_source_id = 2;
//   string summary_name = 3;
//   uint64 timestamp_millis = 4;

//   message Response {
//     Summary summary = 1;
//   }
// }

// // Find all Summaries in thee given time window
// message FindSummariesRequest {
//   uint64 monitored_entity_id = 1;
//   uint64 data_source_id = 2;
//   string summary_name = 3;
//   uint64 time_window_start_timestamp_millis = 4;
//   uint64 time_window_end_timestamp_millis = 5;

//   message Response {
//     repeated Summary summaries = 1;
//   }
// }

// message ListSummariesRequest {
//   message Response {
//     repeated Summary summaries = 1;
//   }
// }

// message DeleteSummaryRequest {
//   uint64 id = 1;

//   message Response {
//   }
// }

// Monitored entity

message MonitoredEntity {
  uint64 id = 1;
  string name = 2;
  repeated uint64 data_source_ids = 3;
  repeated uint64 summary_ids = 4;
}

message CreateMonitoredEntityRequest {
  string name = 1;
  repeated uint64 data_source_ids = 2;
  repeated uint64 summary_ids = 3;

  message Response {
    MonitoredEntity monitored_entity = 1;
  }
}

message GetMonitoredEntityRequest {
  uint64 id = 1;

  message Response {
    MonitoredEntity monitored_entity = 1;
  }
}

message GetMonitoredEntityByNameRequest {
  string name = 1;

  message Response {
    MonitoredEntity monitored_entity = 1;
  }
}

message UpdateMonitoredEntityRequest {
  uint64 id = 1;
  string name = 2;
  repeated uint64 data_source_ids_to_remove = 4;
  repeated uint64 summary_ids_to_remove = 6;

  message Response {
    MonitoredEntity monitored_entity = 1;
  }
}

message ListMonitoredEntitiesRequest {
  message Response {
    repeated MonitoredEntity monitored_entities = 1;
  }
}

message DeleteMonitoredEntityRequest {
  uint64 id = 1;

  message Response {
  }
}

// // Alert Definition

// message SeverityEnum {
//   enum Severity {
//     UNDEFINED = 0;
//     LOW = 1;
//     MEDIUM = 2;
//     HIGH = 3;
//   }
// }

// // TODO: pull in all fields from https://vertaai.atlassian.net/browse/VR-9906

// message AlertDefinition {
//   uint64 id = 1;
//   string name = 2;
//   uint64 monitored_entity_id = 3;
//   uint64 reference_data_source_id = 4;
//   uint64 source_profiler_id = 5;
//   uint64 created_at_millis = 6;
//   uint64 updated_at_millis = 7;
//   float threshold = 8;
//   SeverityEnum.Severity severity = 9;
//   string webhook = 10;
// }

// message GetAlertDefinitionRequest {
//   uint64 id = 1;

//   message Response {
//     AlertDefinition alert_definition = 1;
//   }
// }

// message CreateAlertDefinitionRequest {
//   string name = 1;
//   uint64 monitored_entity_id = 2;
//   uint64 reference_data_source_id = 3;
//   uint64 source_profiler_id = 4;
//   float threshold = 5;
//   SeverityEnum.Severity severity = 6;
//   string webhook =7;

//   message Response {
//     AlertDefinition alert_definition = 1;
//   }
// }

// message UpdateAlertDefinitionRequest {
//   uint64 id = 1;
//   string name = 2;
//   uint64 reference_data_source_id = 3;
//   uint64 source_profiler_id = 4;
//   float threshold = 5;
//   SeverityEnum.Severity severity = 6;
//   string webhook = 7;

//   message Response {
//     AlertDefinition alert_definition = 1;
//   }
// }

// message ListAlertDefinitionsRequest {
//   uint64 monitored_entity_id = 1;
//   message Response {
//     repeated AlertDefinition alert_definition = 1;
//   }
// }

// message DeleteAlertDefinitionRequest {
//   uint64 id = 1;

//   message Response {
//   }
// }

// // Alert

// message Alert {
//   uint64 id = 1;
//   string name = 2;
//   uint64 alert_definition_id = 3;
//   uint64 created_at_millis = 4;
//   uint64 updated_at_millis = 5;
//   uint64 triggered_at_millis = 6;
//   uint64 acked_at_millis = 7;
//   uint64 closed_at_millis = 8;
// }

// message GetAlertRequest {
//   uint64 id = 1;

//   message Response {
//     Alert alert = 1;
//   }
// }

// message CreateAlertRequest {
//   string name = 1;
//   uint64 alert_definition_id = 2;
//   uint64 triggered_at_millis = 3;
//   uint64 acked_at_millis = 4;
//   uint64 closed_at_millis = 5;

//   message Response {
//     Alert alert = 1;
//   }
// }

// message UpdateAlertRequest {
//   uint64 id = 1;
//   string name = 2;
//   uint64 triggered_at_millis = 3;
//   uint64 acked_at_millis = 4;
//   uint64 closed_at_millis = 5;

//   message Response {
//     Alert alert = 1;
//   }
// }

// message ListAlertsRequest {
//   uint64 alert_definition_id = 1;

//   message Response {
//     repeated Alert alert = 1;
//   }
// }

// message DeleteAlertRequest {
//   uint64 id = 1;

//   message Response {
//   }
// }

// Service definitions
service DataMonitoringService {
  rpc getMonitoredEntity(GetMonitoredEntityRequest) returns (GetMonitoredEntityRequest.Response) {
    option (google.api.http) = {
      get: "/v1/monitored_entity/getMonitoredEntity"
    };
  };

  rpc getMonitoredEntityByName(GetMonitoredEntityByNameRequest) returns (GetMonitoredEntityByNameRequest.Response) {
    option (google.api.http) = {
      get: "/v1/monitored_entity/getMonitoredEntityByName"
    };
  };

  rpc createMonitoredEntity(CreateMonitoredEntityRequest) returns (CreateMonitoredEntityRequest.Response) {
    option (google.api.http) = {
      post: "/v1/monitored_entity/createMonitoredEntity"
      body: "*"
    };
  };

  rpc updateMonitoredEntity(UpdateMonitoredEntityRequest) returns (UpdateMonitoredEntityRequest.Response) {
    option (google.api.http) = {
      patch: "/v1/monitored_entity/updateMonitoredEntity"
      body: "*"
    };
  };

  rpc listMonitoredEntities(ListMonitoredEntitiesRequest) returns (ListMonitoredEntitiesRequest.Response) {
    option (google.api.http) = {
      get: "/v1/monitored_entity/listMonitoredEntities"
    };
  };

  rpc deleteMonitoredEntity(DeleteMonitoredEntityRequest) returns (DeleteMonitoredEntityRequest.Response) {
    option (google.api.http) = {
      delete: "/v1/monitored_entity/deleteMonitoredEntity"
      body: "*"
    };
  };

  // rpc getSummary(GetSummaryRequest) returns (GetSummaryRequest.Response) {
  //   option (google.api.http) = {
  //     get: "/v1/monitored_entity/getSummary"
  //   };
  // };

  // rpc findSummary(FindSummaryRequest) returns (FindSummaryRequest.Response) {
  //   option (google.api.http) = {
  //     get: "/v1/monitored_entity/findSummary"
  //   };
  // };

  // rpc findSummaries(FindSummariesRequest) returns (FindSummariesRequest.Response) {
  //   option (google.api.http) = {
  //     get: "/v1/monitored_entity/findSummaries"
  //   };
  // };

  // rpc createSummary(CreateSummaryRequest) returns (CreateSummaryRequest.Response) {
  //   option (google.api.http) = {
  //     post: "/v1/monitored_entity/createSummary"
  //     body: "*"
  //   };
  // };

  // rpc listSummaries(ListSummariesRequest) returns (ListSummariesRequest.Response) {
  //   option (google.api.http) = {
  //     get: "/v1/monitored_entity/listSummaries"
  //   };
  // };

  // rpc deleteSummary(DeleteSummaryRequest) returns (DeleteSummaryRequest.Response) {
  //   option (google.api.http) = {
  //     delete: "/v1/monitored_entity/deleteSummary"
  //     body: "*"
  //   };
  // };

  rpc getDataSource(GetDataSourceRequest) returns (GetDataSourceRequest.Response) {
    option (google.api.http) = {
      get: "/v1/monitored_entity/getDataSource"
    };
  };

  rpc findDataSources(FindDataSourcesRequest) returns (FindDataSourcesRequest.Response) {
    option (google.api.http) = {
      get: "/v1/monitored_entity/findDataSources"
    };
  };

  rpc createDataSource(CreateDataSourceRequest) returns (CreateDataSourceRequest.Response) {
    option (google.api.http) = {
      post: "/v1/monitored_entity/createDataSource"
      body: "*"
    };
  };

  rpc listDataSources(ListDataSourcesRequest) returns (ListDataSourcesRequest.Response) {
    option (google.api.http) = {
      get: "/v1/monitored_entity/listDataSources"
    };
  };

  rpc deleteDataSource(DeleteDataSourceRequest) returns (DeleteDataSourceRequest.Response) {
    option (google.api.http) = {
      delete: "/v1/monitored_entity/deleteDataSource"
      body: "*"
    };
  };

  rpc getProfiler(GetProfilerRequest) returns (GetProfilerRequest.Response) {
    option (google.api.http) = {
      get: "/v1/monitored_entity/getProfiler"
    };
  };

  rpc createProfiler(CreateProfilerRequest) returns (CreateProfilerRequest.Response) {
    option (google.api.http) = {
      post: "/v1/monitored_entity/createProfiler"
      body: "*"
    };
  };

  rpc updateProfiler(UpdateProfilerRequest) returns (UpdateProfilerRequest.Response) {
    option (google.api.http) = {
      patch: "/v1/monitored_entity/updateProfiler"
      body: "*"
    };
  };

  rpc listProfilers(ListProfilersRequest) returns (ListProfilersRequest.Response) {
    option (google.api.http) = {
      get: "/v1/monitored_entity/listProfilers"
    };
  };

  rpc deleteProfiler(DeleteProfilerRequest) returns (DeleteProfilerRequest.Response) {
    option (google.api.http) = {
      delete: "/v1/monitored_entity/deleteProfile"
      body: "*"
    };
  };

  rpc getProfilerStatus(GetProfilerStatusRequest) returns (GetProfilerStatusRequest.Response) {
    option (google.api.http) = {
      get: "/v1/monitored_entity/getProfilerStatus"
    };
  };

  rpc findProfilersForMonitoredEntity(FindProfilersForMonitoredEntityRequest) returns (FindProfilersForMonitoredEntityRequest.Response) {
    option (google.api.http) = {
      post: "/v1/monitored_entity/findProfilersForMonitoredEntity"
      body: "*"
    };
  };

  rpc enableProfiler(EnableProfilerRequest) returns (EnableProfilerRequest.Response) {
    option (google.api.http) = {
      post: "/v1/monitored_entity/enableProfiler"
      body: "*"
    };
  };

  rpc disableProfiler(DisableProfilerRequest) returns (DisableProfilerRequest.Response) {
    option (google.api.http) = {
      post: "/v1/monitored_entity/disableProfiler"
      body: "*"
    };
  };

  // rpc getAlert(GetAlertRequest) returns (GetAlertRequest.Response) {
  //   option (google.api.http) = {
  //     get: "/v1/monitored_entity/getAlert"
  //   };
  // };

  // rpc createAlert(CreateAlertRequest) returns (CreateAlertRequest.Response) {
  //   option (google.api.http) = {
  //     post: "/v1/monitored_entity/createAlert"
  //     body: "*"
  //   };
  // };

  // rpc updateAlert(UpdateAlertRequest) returns (UpdateAlertRequest.Response) {
  //   option (google.api.http) = {
  //     patch: "/v1/monitored_entity/updateAlert"
  //     body: "*"
  //   };
  // };

  // rpc listAlerts(ListAlertsRequest) returns (ListAlertsRequest.Response) {
  //   option (google.api.http) = {
  //     get: "/v1/monitored_entity/listAlerts"
  //   };
  // };

  // rpc deleteAlert(DeleteAlertRequest) returns (DeleteAlertRequest.Response) {
  //   option (google.api.http) = {
  //     delete: "/v1/monitored_entity/deleteAlert"
  //     body: "*"
  //   };
  // };

  // rpc getAlertDefinition(GetAlertDefinitionRequest) returns (GetAlertDefinitionRequest.Response) {
  //   option (google.api.http) = {
  //     get: "/v1/monitored_entity/getAlertDefinition"
  //   };
  // };

  // rpc createAlertDefinition(CreateAlertDefinitionRequest) returns (CreateAlertDefinitionRequest.Response) {
  //   option (google.api.http) = {
  //     post: "/v1/monitored_entity/createAlertDefinition"
  //     body: "*"
  //   };
  // };

  // rpc updateAlertDefinition(UpdateAlertDefinitionRequest) returns (UpdateAlertDefinitionRequest.Response) {
  //   option (google.api.http) = {
  //     patch: "/v1/monitored_entity/updateAlertDefinition"
  //     body: "*"
  //   };
  // };

  // rpc listAlertDefinitions(ListAlertDefinitionsRequest) returns (ListAlertDefinitionsRequest.Response) {
  //   option (google.api.http) = {
  //     get: "/v1/monitored_entity/listAlertDefinitions"
  //   };
  // };

  // rpc deleteAlertDefinition(DeleteAlertDefinitionRequest) returns (DeleteAlertDefinitionRequest.Response) {
  //   option (google.api.http) = {
  //     delete: "/v1/monitored_entity/deleteAlertDefinition"
  //     body: "*"
  //   };
  // };
}
