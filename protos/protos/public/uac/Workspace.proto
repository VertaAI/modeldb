syntax = "proto3";

package ai.verta.uac;
option go_package = "github.com/VertaAI/modeldb/protos/gen/go/protos/public/uac";

option java_multiple_files = true;
import "google/api/annotations.proto";
import "common/CommonService.proto";
import "uac/UACService.proto";

message GetWorkspaceById {
    uint64 id = 1;
}

message GetWorkspaceByName {
    string name = 1;
}

message GetWorkspaceByLegacyId {
    string id = 1;
    common.WorkspaceTypeEnum.WorkspaceType workspace_type = 2;
}

message Workspace {
    uint64 id = 1;
    oneof internal_id {
        string user_id = 2;
        string org_id = 3;
    }
    oneof name {
      string username = 4;
      string org_name = 5;
    }

    repeated WorkspaceContainerRegistryConfiguration container_registries = 6;
}

message WorkspaceContainerRegistryConfiguration {
    uint64 id = 1;
    string base = 2; // Unique per entry
    string username = 3;
    string secret_key = 4; // Should be hidden from non-admins
}

message GetVisibleWorkspaces {
}

message Workspaces {
    repeated Workspace workspace = 1;
}

service WorkspaceService {
    rpc getWorkspaceById (GetWorkspaceById) returns (Workspace){
        option (google.api.http) = {
            get: "/v1/workspace/getWorkspaceById"
        };
    };

    rpc getWorkspaceByName (GetWorkspaceByName) returns (Workspace){
        option (google.api.http) = {
            get: "/v1/workspace/getWorkspaceByName"
        };
    };

    rpc getWorkspaceByLegacyId (GetWorkspaceByLegacyId) returns (Workspace){
        option (google.api.http) = {
            get: "/v1/workspace/getWorkspaceByLegacyId"
        };
    };

    rpc getVisibleWorkspaces (GetVisibleWorkspaces) returns (Workspaces){
        option (google.api.http) = {
            get: "/v1/workspace/getVisibleWorkspaces"
        };
    };

    rpc createOrUpdateContainerRegistryConfiguration (WorkspaceContainerRegistryConfiguration) returns (WorkspaceContainerRegistryConfiguration) {
        option (google.api.http) = {
            post : "/v1/workspace/createOrUpdateContainerRegistryConfiguration"
            body : "*"
        };
    };

    rpc deleteContainerRegistryConfiguration (WorkspaceContainerRegistryConfiguration) returns (Empty) {
        option (google.api.http) = {
            post : "/v1/workspace/deleteContainerRegistryConfiguration"
            body : "*"
        };
    };
}
