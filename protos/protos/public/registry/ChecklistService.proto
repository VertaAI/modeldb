syntax = "proto3";

package ai.verta.registry;
option go_package = "github.com/VertaAI/modeldb/protos/gen/go/protos/public/registry";

option java_multiple_files = true;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "common/CommonService.proto";
import "registry/RegistryService.proto";

message GetChecklistItemValueRequest {
  ChecklistItemValueIdentification id = 1;

  message Response { ChecklistItemValue checklist_item_value = 1; }
}

message SetChecklistItemValueRequest {
  ChecklistItemValueIdentification id = 1;
  ChecklistItemValue checklist_item_value = 2;
  google.protobuf.FieldMask update_mask = 3;

  message Response { ChecklistItemValue checklist_item_value = 1; }
}

message DeleteChecklistItemValueRequest {
  ChecklistItemValueIdentification id = 1;

  message Response {}
}

service ChecklistService {
  // Initial functions to list all, create, retrieve, update and delete checklist_item_values

  rpc FindChecklistItemValues(FindChecklistItemValueRequest) returns (FindChecklistItemValueRequest.Response) {
    option (google.api.http) = {
      post: "/v1/registry/checklist_item_values/find"
      body: "*"
      additional_bindings {
        post: "/v1/registry/model_versions/{id.model_version_id}/checklist_item_values/find"
        body: "*"
      }
    };
  };

  rpc GetChecklistItemValue(GetChecklistItemValueRequest) returns (GetChecklistItemValueRequest.Response) {
    option (google.api.http) = {
      get: "/v1/registry/checklist_item_values/{id.checklist_item_value_id}"
      additional_bindings {
        get: "/v1/registry/model_versions/{id.model_version_id.model_version_id}/checklist_item_values/{id.checklist_item_value_id}"
      }
      additional_bindings {
        get: "/v1/registry/registered_models/{id.model_version_id.model_id.registered_model_id}/model_versions/{id.model_version_id.model_version_id}/checklist_item_values/{id.checklist_item_value_id}"
      }
      additional_bindings {
        get: "/v1/registry/workspaces/{id.model_version_id.model_id.named_id.workspace_name}/registered_models/{id.model_version_id.model_id.registered_model_id}/model_versions/{id.model_version_id.model_version_id}/checklist_item_values/{id.checklist_item_value_id}"
      }
    };
  };

  rpc CreateChecklistItemValue(SetChecklistItemValueRequest) returns (SetChecklistItemValueRequest.Response) {
    option (google.api.http) = {
      post: "/v1/registry/checklist_item_values"
      body: "*"
      additional_bindings {
        post: "/v1/registry/model_versions/{id.model_version_id.model_version_id}/checklist_item_values"
        body: "*"
      }
      additional_bindings {
        post: "/v1/registry/registered_models/{id.model_version_id.model_id.registered_model_id}/model_versions/{id.model_version_id.model_version_id}/checklist_item_values"
        body: "*"
      }
      additional_bindings {
        post: "/v1/registry/workspaces/{id.model_version_id.model_id.named_id.workspace_name}/registered_models/{id.model_version_id.model_id.registered_model_id}/model_versions/{id.model_version_id.model_version_id}/checklist_item_values"
        body: "*"
      }
    };
  }

  rpc UpdateChecklistItemValue(SetChecklistItemValueRequest) returns (SetChecklistItemValueRequest.Response) {
    option (google.api.http) = {
      put: "/v1/registry/checklist_item_values/{id.checklist_item_value_id}"
      body: "*"
      additional_bindings {
        put: "/v1/registry/model_versions/{id.model_version_id.model_version_id}/checklist_item_values/{id.checklist_item_value_id}"
        body: "*"
      }
      additional_bindings {
        put: "/v1/registry/registered_models/{id.model_version_id.model_id.registered_model_id}/model_versions/{id.model_version_id.model_version_id}/checklist_item_values/{id.checklist_item_value_id}"
        body: "*"
      }
      additional_bindings {
        put: "/v1/registry/workspaces/{id.model_version_id.model_id.named_id.workspace_name}/registered_models/{id.model_version_id.model_id.registered_model_id}/model_versions/{id.model_version_id.model_version_id}/checklist_item_values/{id.checklist_item_value_id}"
        body: "*"
      }
    };
  }

  rpc DeleteChecklistItemValue(DeleteChecklistItemValueRequest) returns (DeleteChecklistItemValueRequest.Response) {
    option (google.api.http) = {
      delete: "/v1/registry/checklist_item_values/{id.checklist_item_value_id}"
      additional_bindings {
        delete: "/v1/registry/model_versions/{id.model_version_id.model_version_id}/checklist_item_values/{id.checklist_item_value_id}"
      }
      additional_bindings {
        delete: "/v1/registry/registered_models/{id.model_version_id.model_id.registered_model_id}/model_versions/{id.model_version_id.model_version_id}/checklist_item_values/{id.checklist_item_value_id}"
      }
      additional_bindings {
        delete: "/v1/registry/workspaces/{id.model_version_id.model_id.named_id.workspace_name}/registered_models/{id.model_version_id.model_id.registered_model_id}/model_versions/{id.model_version_id.model_version_id}/checklist_item_values/{id.checklist_item_value_id}"
      }
    };
  };
}
