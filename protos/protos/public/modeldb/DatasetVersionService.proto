syntax = "proto3";

package ai.verta.modeldb;
option go_package = "github.com/VertaAI/modeldb/protos/gen/go/protos/public/modeldb";

option java_multiple_files = true;

import "protos/public/common/CommonService.proto";
import "protos/public/modeldb/CommonService.proto";
import "protos/public/modeldb/DatasetService.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";



message DatasetVersion {
    string id = 1;//For backend reference
    string parent_id = 2;
    string dataset_id = 3;
    uint64 time_logged = 4;
    string description = 5;
    repeated string tags = 6;
    DatasetVisibilityEnum.DatasetVisibility dataset_version_visibility = 7;
    DatasetTypeEnum.DatasetType dataset_type = 8;// this acts as a quick check on which type of DataSetInfo to look at for more details.
    repeated common.KeyValue attributes = 9;
    string owner = 10;
    uint64 version = 11;
    oneof dataset_version_info {
        RawDatasetVersionInfo raw_dataset_version_info = 12;
        PathDatasetVersionInfo path_dataset_version_info = 13;
        QueryDatasetVersionInfo query_dataset_version_info = 14;
    }
    uint64 time_updated = 15;
}

message QueryDatasetVersionInfo {
    string query = 1;
    string query_template = 2;
    repeated QueryParameter query_parameters = 3;
    string data_source_uri = 4;
    uint64 execution_timestamp = 5;
    uint64 num_records = 6;
}

message QueryParameter {
    string parameter_name = 1;
    common.ValueTypeEnum.ValueType parameter_type = 2;
    google.protobuf.Value value = 3;
}

message RawDatasetVersionInfo {
    uint64 size = 1;
    repeated string features = 2;
    uint64 num_records = 3;
    string object_path = 4;
    string checksum = 5;
}

message PathLocationTypeEnum {
    enum PathLocationType {
        LOCAL_FILE_SYSTEM = 0;// default
        NETWORK_FILE_SYSTEM = 1;
        HADOOP_FILE_SYSTEM = 2;
        S3_FILE_SYSTEM = 3;
    }
}

message PathDatasetVersionInfo {
    PathLocationTypeEnum.PathLocationType location_type = 1;
    uint64 size = 2;
    repeated DatasetPartInfo dataset_part_infos = 3;
    string base_path = 4;
}

message DatasetPartInfo {
    string path = 1;
    uint64 size = 2;
    string checksum = 3;
    uint64 last_modified_at_source =4;
}

message CreateDatasetVersion {
    string dataset_id = 1;
    string parent_id = 2;
    string description = 4;
    repeated string tags = 5;
    DatasetVisibilityEnum.DatasetVisibility dataset_version_visibility = 6;
    DatasetTypeEnum.DatasetType dataset_type = 7;// this acts as a quick check on which type of DataSetInfo to look at for more details.
    repeated common.KeyValue attributes = 8;
    uint64 version = 9;
    oneof dataset_version_info {
        RawDatasetVersionInfo raw_dataset_version_info = 10;
        PathDatasetVersionInfo path_dataset_version_info = 11;
        QueryDatasetVersionInfo query_dataset_version_info = 12;
    }
    uint64 time_created = 13;
    message Response {
        DatasetVersion dataset_version = 1;
    }
}

message GetAllDatasetVersionsByDatasetId {
    string dataset_id = 1;

    //For pagination
    int32 page_number = 6;
    int32 page_limit = 7;
    bool ascending = 9;
    string sort_key = 10;
    message Response {
        repeated DatasetVersion dataset_versions = 1;
        uint64 total_records = 2;
    }
}

message DeleteDatasetVersion {
    string id = 1;

    message Response {
        bool status = 1;
    }
}

message DeleteDatasetVersions {
    repeated string ids = 1;

    message Response {
        bool status = 1;
    }
}

message GetLatestDatasetVersionByDatasetId {
    string dataset_id = 1;
    bool ascending = 9;
    string sort_key = 10;
    message Response {
        DatasetVersion dataset_version = 1;
    }
}

message GetDatasetVersionById{
    string id = 1;

    message Response {
        DatasetVersion dataset_version = 1;
    }
}

message FindDatasetVersions {
    string dataset_id = 1;
    repeated string dataset_version_ids = 2;
    repeated KeyValueQuery predicates = 3;
    bool ids_only = 4; // whether to return full experiment runs or ids only

    //For pagination
    int32 page_number = 5;
    int32 page_limit = 6;
    bool ascending = 7;
    string sort_key = 8;

    message Response {
        repeated DatasetVersion dataset_versions = 1;
        int64 total_records = 2;
    }
}

message UpdateDatasetVersionDescription {
    string id = 1;
    string description = 2;

    message Response {
        DatasetVersion dataset_version = 1;
    }
}

message AddDatasetVersionTags {
    string id = 1;
    repeated string tags = 2;

    message Response {
        DatasetVersion dataset_version = 1;
    }
}

message DeleteDatasetVersionTags {
    string id = 1;
    repeated string tags = 2;
    bool delete_all = 3;

    message Response {
        DatasetVersion dataset_version = 1;
    }
}

message AddDatasetVersionAttributes {
    string id = 1;
    repeated common.KeyValue attributes = 2;

    message Response {
        DatasetVersion dataset_version = 1;
    }
}

message UpdateDatasetVersionAttributes {
    string id = 1;
    common.KeyValue attribute = 2;

    message Response {
        DatasetVersion dataset_version = 1;
    }
}

message GetDatasetVersionAttributes {
    string id = 1;

    message Response {
        repeated common.KeyValue attributes = 1;
    }
}

message DeleteDatasetVersionAttributes {
    string id = 1;
    repeated string attribute_keys = 2;
    bool delete_all = 3;

    message Response {
        DatasetVersion dataset_version = 1;
    }
}

message SetDatasetVersionVisibilty {
    string id = 1;
    DatasetVisibilityEnum.DatasetVisibility dataset_version_visibility = 2;

    message Response {
        DatasetVersion dataset_version = 1;
    }
}

service DatasetVersionService {

    rpc createDatasetVersion (CreateDatasetVersion) returns (CreateDatasetVersion.Response) {
        option (google.api.http) = {
            post: "/v1/dataset-version/createDatasetVersion"
            body: "*"
        };
    };

    rpc getAllDatasetVersionsByDatasetId (GetAllDatasetVersionsByDatasetId) returns (GetAllDatasetVersionsByDatasetId.Response) {
        option (google.api.http) ={
            get: "/v1/dataset-version/getAllDatasetVersionsByDatasetId"
        };
    };

    rpc deleteDatasetVersion (DeleteDatasetVersion) returns (DeleteDatasetVersion.Response) {
        option (google.api.http) = {
            delete: "/v1/dataset-version/deleteDatasetVersion"
            body: "*"
        };
    };

    rpc deleteDatasetVersions (DeleteDatasetVersions) returns (DeleteDatasetVersions.Response) {
        option (google.api.http) = {
            delete: "/v1/dataset-version/deleteDatasetVersions"
            body: "*"
        };
    };

    rpc getLatestDatasetVersionByDatasetId (GetLatestDatasetVersionByDatasetId) returns (GetLatestDatasetVersionByDatasetId.Response) {
        option (google.api.http) = {
            get : "/v1/dataset-version/getLatestDatasetVersionByDatasetId"
        };
    };

    rpc getDatasetVersionById (GetDatasetVersionById) returns (GetDatasetVersionById.Response) {
        option (google.api.http) ={
            get: "/v1/dataset-version/getDatasetVersionById"
        };
    };

    // queries
    rpc findDatasetVersions(FindDatasetVersions) returns (FindDatasetVersions.Response){
        option (google.api.http) = {
            post: "/v1/dataset-version/findDatasetVersions"
            body: "*"
        };
    };

    rpc updateDatasetVersionDescription (UpdateDatasetVersionDescription) returns (UpdateDatasetVersionDescription.Response) {
        option (google.api.http) = {
            post: "/v1/dataset-version/updateDatasetVersionDescription"
            body: "*"
        };
    };

    rpc addDatasetVersionTags(AddDatasetVersionTags) returns (AddDatasetVersionTags.Response) {
        option (google.api.http) = {
            post: "/v1/dataset-version/addDatasetVersionTags"
            body: "*"
        };
    };

    rpc getDatasetVersionTags(GetTags) returns (GetTags.Response) {
        option (google.api.http) = {
            get: "/v1/dataset-version/getDatasetVersionTags"
        };
    };

    rpc deleteDatasetVersionTags(DeleteDatasetVersionTags) returns (DeleteDatasetVersionTags.Response) {
        option (google.api.http) = {
            delete: "/v1/dataset-version/deleteDatasetVersionTags"
            body: "*"
        };
    };

    rpc addDatasetVersionAttributes(AddDatasetVersionAttributes) returns (AddDatasetVersionAttributes.Response) {
        option (google.api.http) = {
            post: "/v1/dataset-version/addDatasetVersionAttributes"
            body: "*"
        };
    };

    rpc updateDatasetVersionAttributes(UpdateDatasetVersionAttributes) returns (UpdateDatasetVersionAttributes.Response) {
        option (google.api.http) = {
            post: "/v1/dataset-version/updateDatasetVersionAttributes"
            body: "*"
        };
    };

    rpc getDatasetVersionAttributes(GetAttributes) returns (GetAttributes.Response) {
        option (google.api.http) = {
            get: "/v1/dataset-version/getDatasetVersionAttributes"
        };
    };

    rpc deleteDatasetVersionAttributes(DeleteDatasetVersionAttributes) returns (DeleteDatasetVersionAttributes.Response) {
        option (google.api.http) = {
            delete: "/v1/dataset-version/deleteDatasetVersionAttributes"
        };
    };

    rpc setDatasetVersionVisibility(SetDatasetVersionVisibilty) returns (SetDatasetVersionVisibilty.Response) {
        option (google.api.http) = {
            post: "/v1/dataset-version/setDatasetVersionVisibility"
            body: "*"
        };
    };
//    TODO
// {get,set,delete} X {description,tags,visibility,attribute} X {dataset, datasetVersion}
}
