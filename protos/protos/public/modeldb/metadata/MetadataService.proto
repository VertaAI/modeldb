syntax = "proto3";

package ai.verta.modeldb.metadata;
option go_package = "github.com/VertaAI/modeldb/protos/gen/go/protos/public/modeldb/metadata";

option java_multiple_files = true;

import "google/api/annotations.proto";

message IDTypeEnum {
    enum IDType {
        UNKNOWN = 0; // Type 0 should always cause an error
        VERSIONING_REPOSITORY = 1;
        VERSIONING_COMMIT = 2;
    }
}

message IdentificationType {
    IDTypeEnum.IDType id_type = 1;
    oneof id {
        uint64 int_id = 2;
        string string_id = 3;
    }
}

message GetLabelsRequest {
    // If only id_type is provided, gather from all of such sources
    IdentificationType id = 1;

    message Response {
        repeated string labels = 1;
    }
}

message AddLabelsRequest {
    IdentificationType id = 1;
    repeated string labels = 2;

    message Response {
        bool status = 1;
    }
}

message DeleteLabelsRequest {
    IdentificationType id = 1;
    repeated string labels = 2;

    message Response {
        bool status = 1;
    }
}

service MetadataService {
    rpc GetLabels(GetLabelsRequest) returns (GetLabelsRequest.Response) {
        option (google.api.http) = {
            get: "/v1/metadata/labels"
        };
    };

    rpc AddLabels(AddLabelsRequest) returns (AddLabelsRequest.Response) {
        option (google.api.http) = {
            put: "/v1/metadata/labels"
            body: "*"
        };
    };

    rpc DeleteLabels(DeleteLabelsRequest) returns (DeleteLabelsRequest.Response) {
        option (google.api.http) = {
            delete: "/v1/metadata/labels"
            body: "*"
        };
    };
}
