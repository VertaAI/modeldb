{
  "swagger": "2.0",
  "info": {
    "title": "protos/public/modeldb/Comment.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/comment/addExperimentRunComment": {
      "post": {
        "operationId": "addExperimentRunComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAddCommentResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbAddComment"
            }
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    },
    "/comment/deleteExperimentRunComment": {
      "delete": {
        "operationId": "deleteExperimentRunComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbDeleteCommentResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    },
    "/comment/getExperimentRunComments": {
      "get": {
        "operationId": "getExperimentRunComments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetCommentsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    },
    "/comment/updateExperimentRunComment": {
      "post": {
        "operationId": "updateExperimentRunComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbUpdateCommentResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbUpdateComment"
            }
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    }
  },
  "definitions": {
    "IdServiceProviderEnumIdServiceProvider": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "GITHUB",
        "BITBUCKET",
        "GOOGLE",
        "VERTA"
      ],
      "default": "UNKNOWN"
    },
    "modeldbAddComment": {
      "type": "object",
      "properties": {
        "entity_id": {
          "type": "string"
        },
        "date_time": {
          "type": "string",
          "format": "uint64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "modeldbAddCommentResponse": {
      "type": "object",
      "properties": {
        "comment": {
          "$ref": "#/definitions/modeldbComment"
        }
      }
    },
    "modeldbComment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "date_time": {
          "type": "string",
          "format": "uint64"
        },
        "message": {
          "type": "string"
        },
        "user_info": {
          "$ref": "#/definitions/uacUserInfo"
        },
        "verta_id": {
          "type": "string"
        }
      }
    },
    "modeldbDeleteCommentResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbGetCommentsResponse": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbComment"
          }
        }
      }
    },
    "modeldbUpdateComment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "entity_id": {
          "type": "string"
        },
        "date_time": {
          "type": "string",
          "format": "uint64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "modeldbUpdateCommentResponse": {
      "type": "object",
      "properties": {
        "comment": {
          "$ref": "#/definitions/modeldbComment"
        }
      }
    },
    "uacFlagEnum": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "TRUE",
        "FALSE"
      ],
      "default": "UNDEFINED"
    },
    "uacUserInfo": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id_service_provider": {
          "$ref": "#/definitions/IdServiceProviderEnumIdServiceProvider"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "image_url": {
          "type": "string"
        },
        "dev_key": {
          "type": "string"
        },
        "verta_info": {
          "$ref": "#/definitions/uacVertaUserInfo"
        }
      }
    },
    "uacVertaUserInfo": {
      "type": "object",
      "properties": {
        "individual_user": {
          "type": "boolean",
          "format": "boolean"
        },
        "username": {
          "type": "string"
        },
        "refresh_timestamp": {
          "type": "string",
          "format": "uint64"
        },
        "last_login_timestamp": {
          "type": "string",
          "format": "uint64"
        },
        "user_id": {
          "type": "string"
        },
        "publicProfile": {
          "$ref": "#/definitions/uacFlagEnum"
        }
      }
    }
  },
  "basePath": "/v1"
}
