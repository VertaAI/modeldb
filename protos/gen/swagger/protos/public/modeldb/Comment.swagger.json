{
  "/wagger": "2.0",
  "/nfo": {
    "/itle": "modeldb/Comment.proto",
    "/ersion": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/comment/addExperimentRunComment": {
      "post": {
        "operationId": "CommentService_addExperimentRunComment",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbAddCommentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbAddComment"
            }
          }
        ],
        "/ags": [
          "CommentService"
        ]
      }
    },
    "/v1/comment/deleteExperimentRunComment": {
      "delete": {
        "operationId": "CommentService_deleteExperimentRunComment",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteCommentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "/ntity_id",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "CommentService"
        ]
      }
    },
    "/v1/comment/getExperimentRunComments": {
      "/et": {
        "operationId": "CommentService_getExperimentRunComments",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetCommentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/ntity_id",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "CommentService"
        ]
      }
    },
    "/v1/comment/updateExperimentRunComment": {
      "post": {
        "operationId": "CommentService_updateExperimentRunComment",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateCommentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateComment"
            }
          }
        ],
        "/ags": [
          "CommentService"
        ]
      }
    }
  },
  "definitions": {
    "IdServiceProviderEnumIdServiceProvider": {
      "/ype": "string",
      "/num": [
        "UNKNOWN",
        "GITHUB",
        "BITBUCKET",
        "GOOGLE",
        "VERTA",
        "SAML",
        "AD_OAUTH2",
        "LDAP",
        "OKTA_SCIM",
        "AD_SCIM",
        "SCIM"
      ],
      "default": "UNKNOWN"
    },
    "modeldbAddComment": {
      "/ype": "object",
      "properties": {
        "/ntity_id": {
          "/ype": "string"
        },
        "date_time": {
          "/ype": "string",
          "format": "uint64"
        },
        "message": {
          "/ype": "string"
        }
      }
    },
    "modeldbAddCommentResponse": {
      "/ype": "object",
      "properties": {
        "comment": {
          "$ref": "#/definitions/modeldbComment"
        }
      }
    },
    "modeldbComment": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "user_id": {
          "/ype": "string"
        },
        "date_time": {
          "/ype": "string",
          "format": "uint64"
        },
        "message": {
          "/ype": "string"
        },
        "user_info": {
          "$ref": "#/definitions/uacUserInfo"
        },
        "/erta_id": {
          "/ype": "string"
        }
      }
    },
    "modeldbDeleteCommentResponse": {
      "/ype": "object",
      "properties": {
        "/tatus": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbGetCommentsResponse": {
      "/ype": "object",
      "properties": {
        "comments": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbComment"
          }
        }
      }
    },
    "modeldbUpdateComment": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/ntity_id": {
          "/ype": "string"
        },
        "date_time": {
          "/ype": "string",
          "format": "uint64"
        },
        "message": {
          "/ype": "string"
        }
      }
    },
    "modeldbUpdateCommentResponse": {
      "/ype": "object",
      "properties": {
        "comment": {
          "$ref": "#/definitions/modeldbComment"
        }
      }
    },
    "protobufAny": {
      "/ype": "object",
      "properties": {
        "/ype_url": {
          "/ype": "string"
        },
        "/alue": {
          "/ype": "string",
          "format": "byte"
        }
      }
    },
    "/untimeError": {
      "/ype": "object",
      "properties": {
        "/rror": {
          "/ype": "string"
        },
        "code": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "message": {
          "/ype": "string"
        },
        "details": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "uacFlagEnum": {
      "/ype": "string",
      "/num": [
        "UNDEFINED",
        "TRUE",
        "FALSE"
      ],
      "default": "UNDEFINED"
    },
    "uacUserInfo": {
      "/ype": "object",
      "properties": {
        "user_id": {
          "/ype": "string"
        },
        "full_name": {
          "/ype": "string"
        },
        "first_name": {
          "/ype": "string"
        },
        "last_name": {
          "/ype": "string"
        },
        "/mail": {
          "/ype": "string"
        },
        "/d_service_provider": {
          "$ref": "#/definitions/IdServiceProviderEnumIdServiceProvider"
        },
        "/oles": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "/mage_url": {
          "/ype": "string"
        },
        "dev_key": {
          "/ype": "string"
        },
        "/erta_info": {
          "$ref": "#/definitions/uacVertaUserInfo"
        },
        "/econdary_dev_key": {
          "/ype": "string"
        },
        "disabled": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "uacVertaUserInfo": {
      "/ype": "object",
      "properties": {
        "/ndividual_user": {
          "/ype": "boolean",
          "format": "boolean"
        },
        "username": {
          "/ype": "string"
        },
        "/efresh_timestamp": {
          "/ype": "string",
          "format": "uint64"
        },
        "last_login_timestamp": {
          "/ype": "string",
          "format": "uint64"
        },
        "user_id": {
          "/ype": "string"
        },
        "publicProfile": {
          "$ref": "#/definitions/uacFlagEnum"
        },
        "workspace_id": {
          "/ype": "string"
        },
        "default_workspace_id": {
          "/ype": "string",
          "format": "uint64",
          "/itle": "Workspace that the user has selected as their default. Initializes to the user's personal workspace\nWhen the user is added to their _first_ org, the default workspace automatically switches to that if it was the default value\nThis should be empty if the user is not the current user"
        },
        "description": {
          "/ype": "string"
        }
      }
    }
  },
  "basePath": "/v1"
}
