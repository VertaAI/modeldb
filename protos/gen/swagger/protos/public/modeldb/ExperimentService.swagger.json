{
  "/wagger": "2.0",
  "/nfo": {
    "/itle": "modeldb/ExperimentService.proto",
    "/ersion": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/experiment/addAttribute": {
      "post": {
        "operationId": "ExperimentService_addAttribute",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbAddAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbAddAttributes"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/addExperimentAttributes": {
      "post": {
        "operationId": "ExperimentService_addExperimentAttributes",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbAddExperimentAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbAddExperimentAttributes"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/addExperimentTag": {
      "post": {
        "operationId": "ExperimentService_addExperimentTag",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbAddExperimentTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbAddExperimentTag"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/addExperimentTags": {
      "post": {
        "operationId": "ExperimentService_addExperimentTags",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbAddExperimentTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbAddExperimentTags"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/createExperiment": {
      "post": {
        "operationId": "ExperimentService_createExperiment",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbCreateExperimentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbCreateExperiment"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/deleteArtifact": {
      "delete": {
        "operationId": "ExperimentService_deleteArtifact",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentArtifactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentArtifact"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/deleteExperiment": {
      "delete": {
        "operationId": "ExperimentService_deleteExperiment",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperiment"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/deleteExperimentAttributes": {
      "delete": {
        "operationId": "ExperimentService_deleteExperimentAttributes",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "attribute_keys",
            "/n": "query",
            "/equired": false,
            "/ype": "array",
            "/tems": {
              "/ype": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "delete_all",
            "/n": "query",
            "/equired": false,
            "/ype": "boolean",
            "format": "boolean"
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/deleteExperimentTag": {
      "delete": {
        "operationId": "ExperimentService_deleteExperimentTag",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentTag"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/deleteExperimentTags": {
      "delete": {
        "operationId": "ExperimentService_deleteExperimentTags",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentTags"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/deleteExperiments": {
      "delete": {
        "operationId": "ExperimentService_deleteExperiments",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperiments"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/findExperiments": {
      "post": {
        "/ummary": "queries",
        "operationId": "ExperimentService_findExperiments",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbFindExperimentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbFindExperiments"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/getArtifacts": {
      "/et": {
        "operationId": "ExperimentService_getArtifacts",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "key",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/getExperimentAttributes": {
      "/et": {
        "operationId": "ExperimentService_getExperimentAttributes",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "attribute_keys",
            "/n": "query",
            "/equired": false,
            "/ype": "array",
            "/tems": {
              "/ype": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "/et_all",
            "/n": "query",
            "/equired": false,
            "/ype": "boolean",
            "format": "boolean"
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/getExperimentById": {
      "/et": {
        "operationId": "ExperimentService_getExperimentById",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetExperimentByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/getExperimentByName": {
      "/et": {
        "operationId": "ExperimentService_getExperimentByName",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetExperimentByNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "project_id",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/getExperimentCodeVersion": {
      "/et": {
        "operationId": "ExperimentService_getExperimentCodeVersion",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetExperimentCodeVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/getExperimentTags": {
      "/et": {
        "operationId": "ExperimentService_getExperimentTags",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/getExperimentsInProject": {
      "/et": {
        "operationId": "ExperimentService_getExperimentsInProject",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetExperimentsInProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "page_number",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "page_limit",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "ascending",
            "/n": "query",
            "/equired": false,
            "/ype": "boolean",
            "format": "boolean"
          },
          {
            "name": "/ort_key",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/getUrlForArtifact": {
      "post": {
        "/ummary": "artifacts",
        "operationId": "ExperimentService_getUrlForArtifact",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetUrlForArtifactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbGetUrlForArtifact"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/logArtifacts": {
      "post": {
        "/ummary": "artifacts",
        "operationId": "ExperimentService_logArtifacts",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogExperimentArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogExperimentArtifacts"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/logExperimentCodeVersion": {
      "post": {
        "/ummary": "code version",
        "operationId": "ExperimentService_logExperimentCodeVersion",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogExperimentCodeVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogExperimentCodeVersion"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/updateExperimentDescription": {
      "post": {
        "operationId": "ExperimentService_updateExperimentDescription",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateExperimentDescriptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateExperimentDescription"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/updateExperimentName": {
      "post": {
        "operationId": "ExperimentService_updateExperimentName",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateExperimentNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateExperimentName"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    },
    "/v1/experiment/updateExperimentNameOrDescription": {
      "post": {
        "operationId": "ExperimentService_updateExperimentNameOrDescription",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateExperimentNameOrDescriptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateExperimentNameOrDescription"
            }
          }
        ],
        "/ags": [
          "ExperimentService"
        ]
      }
    }
  },
  "definitions": {
    "ArtifactTypeEnumArtifactType": {
      "/ype": "string",
      "/num": [
        "IMAGE",
        "MODEL",
        "TENSORBOARD",
        "DATA",
        "BLOB",
        "STRING",
        "CODE",
        "CONTAINER"
      ],
      "default": "IMAGE"
    },
    "OperatorEnumOperator": {
      "/ype": "string",
      "/num": [
        "EQ",
        "NE",
        "GT",
        "GTE",
        "LT",
        "LTE",
        "CONTAIN",
        "NOT_CONTAIN",
        "IN",
        "NOT_IN"
      ],
      "default": "EQ"
    },
    "TernaryEnumTernary": {
      "/ype": "string",
      "/num": [
        "UNKNOWN",
        "TRUE",
        "FALSE"
      ],
      "default": "UNKNOWN"
    },
    "ValueTypeEnumValueType": {
      "/ype": "string",
      "/num": [
        "STRING",
        "NUMBER",
        "LIST",
        "BLOB"
      ],
      "default": "STRING"
    },
    "commonArtifact": {
      "/ype": "object",
      "properties": {
        "key": {
          "/ype": "string"
        },
        "path": {
          "/ype": "string"
        },
        "path_only": {
          "/ype": "boolean",
          "format": "boolean"
        },
        "artifact_type": {
          "$ref": "#/definitions/ArtifactTypeEnumArtifactType"
        },
        "linked_artifact_id": {
          "/ype": "string"
        },
        "filename_extension": {
          "/ype": "string"
        },
        "/erialization": {
          "/ype": "string"
        },
        "artifact_subtype": {
          "/ype": "string"
        },
        "upload_completed": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "commonCodeVersion": {
      "/ype": "object",
      "properties": {
        "/it_snapshot": {
          "$ref": "#/definitions/commonGitSnapshot"
        },
        "code_archive": {
          "$ref": "#/definitions/commonArtifact"
        },
        "date_logged": {
          "/ype": "string",
          "format": "uint64"
        }
      },
      "/itle": "code version"
    },
    "commonGitSnapshot": {
      "/ype": "object",
      "properties": {
        "filepaths": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "/epo": {
          "/ype": "string"
        },
        "hash": {
          "/ype": "string"
        },
        "/s_dirty": {
          "$ref": "#/definitions/TernaryEnumTernary"
        }
      }
    },
    "commonGroupId": {
      "/ype": "object",
      "properties": {
        "org_id": {
          "/ype": "string"
        },
        "/roup_id": {
          "/ype": "string"
        }
      }
    },
    "commonKeyValue": {
      "/ype": "object",
      "properties": {
        "key": {
          "/ype": "string"
        },
        "/alue": {
          "/ype": "object"
        },
        "/alue_type": {
          "$ref": "#/definitions/ValueTypeEnumValueType",
          "description": "As per documentation of proto buffer 3.\n  For enums, the default value is the first defined enum value, which must be 0."
        }
      }
    },
    "commonKeyValueQuery": {
      "/ype": "object",
      "properties": {
        "key": {
          "/ype": "string"
        },
        "/alue": {
          "/ype": "object"
        },
        "/alue_type": {
          "$ref": "#/definitions/ValueTypeEnumValueType"
        },
        "operator": {
          "$ref": "#/definitions/OperatorEnumOperator"
        }
      }
    },
    "modeldbAddAttributes": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "attribute": {
          "$ref": "#/definitions/commonKeyValue"
        }
      },
      "/itle": "TODO: make this update attribute"
    },
    "modeldbAddAttributesResponse": {
      "/ype": "object",
      "properties": {
        "/tatus": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbAddExperimentAttributes": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      }
    },
    "modeldbAddExperimentAttributesResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment": {
          "$ref": "#/definitions/modeldbExperiment"
        }
      }
    },
    "modeldbAddExperimentTag": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/ag": {
          "/ype": "string"
        }
      }
    },
    "modeldbAddExperimentTagResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment": {
          "$ref": "#/definitions/modeldbExperiment"
        }
      }
    },
    "modeldbAddExperimentTags": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        }
      }
    },
    "modeldbAddExperimentTagsResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment": {
          "$ref": "#/definitions/modeldbExperiment"
        }
      }
    },
    "modeldbCreateExperiment": {
      "/ype": "object",
      "properties": {
        "project_id": {
          "/ype": "string"
        },
        "name": {
          "/ype": "string"
        },
        "description": {
          "/ype": "string"
        },
        "date_created": {
          "/ype": "string",
          "format": "/nt64"
        },
        "date_updated": {
          "/ype": "string",
          "format": "/nt64"
        },
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "artifacts": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        }
      }
    },
    "modeldbCreateExperimentResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment": {
          "$ref": "#/definitions/modeldbExperiment"
        }
      }
    },
    "modeldbDeleteExperiment": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        }
      }
    },
    "modeldbDeleteExperimentArtifact": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "key": {
          "/ype": "string"
        }
      }
    },
    "modeldbDeleteExperimentArtifactResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment": {
          "$ref": "#/definitions/modeldbExperiment"
        }
      }
    },
    "modeldbDeleteExperimentAttributesResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment": {
          "$ref": "#/definitions/modeldbExperiment"
        }
      }
    },
    "modeldbDeleteExperimentResponse": {
      "/ype": "object",
      "properties": {
        "/tatus": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbDeleteExperimentTag": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/ag": {
          "/ype": "string"
        }
      }
    },
    "modeldbDeleteExperimentTagResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment": {
          "$ref": "#/definitions/modeldbExperiment"
        }
      }
    },
    "modeldbDeleteExperimentTags": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "delete_all": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbDeleteExperimentTagsResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment": {
          "$ref": "#/definitions/modeldbExperiment"
        }
      }
    },
    "modeldbDeleteExperiments": {
      "/ype": "object",
      "properties": {
        "/ds": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        }
      }
    },
    "modeldbDeleteExperimentsResponse": {
      "/ype": "object",
      "properties": {
        "/tatus": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbExperiment": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "project_id": {
          "/ype": "string"
        },
        "name": {
          "/ype": "string"
        },
        "description": {
          "/ype": "string"
        },
        "date_created": {
          "/ype": "string",
          "format": "/nt64"
        },
        "date_updated": {
          "/ype": "string",
          "format": "/nt64"
        },
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "owner": {
          "/ype": "string"
        },
        "owner_id": {
          "/ype": "string",
          "format": "uint64"
        },
        "/roup_owner_id": {
          "$ref": "#/definitions/commonGroupId"
        },
        "code_version_snapshot": {
          "$ref": "#/definitions/commonCodeVersion"
        },
        "artifacts": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "/ersion_number": {
          "/ype": "string",
          "format": "uint64",
          "/itle": "Doc for version_number https://github.com/VertaAI/docs/pull/53"
        }
      }
    },
    "modeldbFindExperiments": {
      "/ype": "object",
      "properties": {
        "project_id": {
          "/ype": "string"
        },
        "/xperiment_ids": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "predicates": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValueQuery"
          }
        },
        "/ds_only": {
          "/ype": "boolean",
          "format": "boolean"
        },
        "page_number": {
          "/ype": "integer",
          "format": "/nt32",
          "/itle": "For pagination"
        },
        "page_limit": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "ascending": {
          "/ype": "boolean",
          "format": "boolean"
        },
        "/ort_key": {
          "/ype": "string"
        },
        "workspace_name": {
          "/ype": "string"
        }
      }
    },
    "modeldbFindExperimentsResponse": {
      "/ype": "object",
      "properties": {
        "/xperiments": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbExperiment"
          }
        },
        "/otal_records": {
          "/ype": "string",
          "format": "/nt64"
        }
      }
    },
    "modeldbGetArtifactsResponse": {
      "/ype": "object",
      "properties": {
        "artifacts": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        }
      }
    },
    "modeldbGetAttributesResponse": {
      "/ype": "object",
      "properties": {
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      }
    },
    "modeldbGetExperimentByIdResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment": {
          "$ref": "#/definitions/modeldbExperiment"
        }
      }
    },
    "modeldbGetExperimentByNameResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment": {
          "$ref": "#/definitions/modeldbExperiment"
        }
      }
    },
    "modeldbGetExperimentCodeVersionResponse": {
      "/ype": "object",
      "properties": {
        "code_version": {
          "$ref": "#/definitions/commonCodeVersion"
        }
      }
    },
    "modeldbGetExperimentsInProjectResponse": {
      "/ype": "object",
      "properties": {
        "/xperiments": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbExperiment"
          }
        },
        "/otal_records": {
          "/ype": "string",
          "format": "/nt64"
        }
      }
    },
    "modeldbGetTagsResponse": {
      "/ype": "object",
      "properties": {
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        }
      }
    },
    "modeldbGetUrlForArtifact": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "key": {
          "/ype": "string"
        },
        "method": {
          "/ype": "string"
        },
        "artifact_type": {
          "$ref": "#/definitions/ArtifactTypeEnumArtifactType"
        },
        "part_number": {
          "/ype": "string",
          "format": "uint64"
        }
      }
    },
    "modeldbGetUrlForArtifactResponse": {
      "/ype": "object",
      "properties": {
        "url": {
          "/ype": "string"
        },
        "fields": {
          "/ype": "object",
          "additionalProperties": {
            "/ype": "string"
          }
        },
        "multipart_upload_ok": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbLogExperimentArtifacts": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "artifacts": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        }
      },
      "/itle": "artifacts"
    },
    "modeldbLogExperimentArtifactsResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment": {
          "$ref": "#/definitions/modeldbExperiment"
        }
      }
    },
    "modeldbLogExperimentCodeVersion": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "code_version": {
          "$ref": "#/definitions/commonCodeVersion"
        }
      },
      "/itle": "code version"
    },
    "modeldbLogExperimentCodeVersionResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment": {
          "$ref": "#/definitions/modeldbExperiment"
        }
      }
    },
    "modeldbUpdateExperimentDescription": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "description": {
          "/ype": "string"
        }
      }
    },
    "modeldbUpdateExperimentDescriptionResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment": {
          "$ref": "#/definitions/modeldbExperiment"
        }
      }
    },
    "modeldbUpdateExperimentName": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "name": {
          "/ype": "string"
        }
      }
    },
    "modeldbUpdateExperimentNameOrDescription": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "name": {
          "/ype": "string"
        },
        "description": {
          "/ype": "string"
        }
      }
    },
    "modeldbUpdateExperimentNameOrDescriptionResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment": {
          "$ref": "#/definitions/modeldbExperiment"
        }
      }
    },
    "modeldbUpdateExperimentNameResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment": {
          "$ref": "#/definitions/modeldbExperiment"
        }
      }
    },
    "protobufAny": {
      "/ype": "object",
      "properties": {
        "/ype_url": {
          "/ype": "string"
        },
        "/alue": {
          "/ype": "string",
          "format": "byte"
        }
      }
    },
    "protobufNullValue": {
      "/ype": "string",
      "/num": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "/untimeError": {
      "/ype": "object",
      "properties": {
        "/rror": {
          "/ype": "string"
        },
        "code": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "message": {
          "/ype": "string"
        },
        "details": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "basePath": "/v1"
}
