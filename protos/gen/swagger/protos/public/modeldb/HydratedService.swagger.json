{
  "swagger": "2.0",
  "info": {
    "title": "modeldb/HydratedService.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/hydratedData/findHydratedDatasetVersions": {
      "post": {
        "summary": "queries",
        "operationId": "HydratedService_findHydratedDatasetVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAdvancedQueryDatasetVersionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbFindDatasetVersions"
            }
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/findHydratedDatasets": {
      "post": {
        "summary": "queries",
        "operationId": "HydratedService_findHydratedDatasets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAdvancedQueryDatasetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbFindDatasets"
            }
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/findHydratedDatasetsByOrganization": {
      "post": {
        "summary": "queries",
        "operationId": "HydratedService_findHydratedDatasetsByOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAdvancedQueryDatasetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbFindHydratedDatasetsByOrganization"
            }
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/findHydratedDatasetsByTeam": {
      "post": {
        "summary": "queries",
        "operationId": "HydratedService_findHydratedDatasetsByTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAdvancedQueryDatasetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbFindHydratedDatasetsByTeam"
            }
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/findHydratedExperimentRuns": {
      "post": {
        "summary": "queries",
        "operationId": "HydratedService_findHydratedExperimentRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAdvancedQueryExperimentRunsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbFindExperimentRuns"
            }
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/findHydratedExperiments": {
      "post": {
        "summary": "queries",
        "operationId": "HydratedService_findHydratedExperiments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAdvancedQueryExperimentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbFindExperiments"
            }
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/findHydratedProjects": {
      "post": {
        "summary": "queries",
        "operationId": "HydratedService_findHydratedProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAdvancedQueryProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbFindProjects"
            }
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/findHydratedProjectsByOrganization": {
      "post": {
        "summary": "queries",
        "operationId": "HydratedService_findHydratedProjectsByOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAdvancedQueryProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbFindHydratedProjectsByOrganization"
            }
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/findHydratedProjectsByTeam": {
      "post": {
        "summary": "queries",
        "operationId": "HydratedService_findHydratedProjectsByTeam",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAdvancedQueryProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbFindHydratedProjectsByTeam"
            }
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/findHydratedProjectsByUser": {
      "post": {
        "summary": "queries",
        "operationId": "HydratedService_findHydratedProjectsByUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAdvancedQueryProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbFindHydratedProjectsByUser"
            }
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/findHydratedPublicDatasets": {
      "post": {
        "summary": "queries",
        "operationId": "HydratedService_findHydratedPublicDatasets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAdvancedQueryDatasetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbFindDatasets"
            }
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/findHydratedPublicProjects": {
      "post": {
        "summary": "queries",
        "operationId": "HydratedService_findHydratedPublicProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAdvancedQueryProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbFindProjects"
            }
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/getHydratedDatasetByName": {
      "get": {
        "operationId": "HydratedService_getHydratedDatasetByName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetHydratedDatasetByNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/getHydratedDatasetsByProjectId": {
      "get": {
        "operationId": "HydratedService_getHydratedDatasetsByProjectId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetHydratedDatasetsByProjectIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/getHydratedExperimentRunById": {
      "get": {
        "operationId": "HydratedService_getHydratedExperimentRunById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetHydratedExperimentRunByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/getHydratedExperimentRunsInProject": {
      "get": {
        "operationId": "HydratedService_getHydratedExperimentRunsInProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetHydratedExperimentRunsByProjectIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/getHydratedExperimentsByProjectId": {
      "get": {
        "operationId": "HydratedService_getHydratedExperimentsByProjectId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetHydratedExperimentsByProjectIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/getHydratedProjectById": {
      "get": {
        "operationId": "HydratedService_getHydratedProjectById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetHydratedProjectByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/getHydratedProjects": {
      "get": {
        "operationId": "HydratedService_getHydratedProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetHydratedProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/getHydratedPublicProjects": {
      "get": {
        "operationId": "HydratedService_getHydratedPublicProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetHydratedProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/getTopHydratedExperimentRuns": {
      "get": {
        "operationId": "HydratedService_getTopHydratedExperimentRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAdvancedQueryExperimentRunsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "experiment_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "experiment_run_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "top_k",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ids_only",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    },
    "/hydratedData/sortHydratedExperimentRuns": {
      "get": {
        "operationId": "HydratedService_sortHydratedExperimentRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAdvancedQueryExperimentRunsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "experiment_run_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "ids_only",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "HydratedService"
        ]
      }
    }
  },
  "definitions": {
    "ArtifactTypeEnumArtifactType": {
      "type": "string",
      "enum": [
        "IMAGE",
        "MODEL",
        "TENSORBOARD",
        "DATA",
        "BLOB",
        "STRING",
        "CODE",
        "CONTAINER"
      ],
      "default": "IMAGE"
    },
    "CollaboratorTypeEnumCollaboratorType": {
      "type": "string",
      "enum": [
        "READ_ONLY",
        "READ_WRITE"
      ],
      "default": "READ_ONLY"
    },
    "DatasetTypeEnumDatasetType": {
      "type": "string",
      "enum": [
        "RAW",
        "PATH",
        "QUERY"
      ],
      "default": "RAW"
    },
    "DatasetVisibilityEnumDatasetVisibility": {
      "type": "string",
      "enum": [
        "PRIVATE",
        "PUBLIC",
        "ORG_SCOPED_PUBLIC"
      ],
      "default": "PRIVATE"
    },
    "EntitiesEnumEntitiesTypes": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ORGANIZATION",
        "TEAM",
        "USER"
      ],
      "default": "UNKNOWN"
    },
    "IdServiceProviderEnumIdServiceProvider": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "GITHUB",
        "BITBUCKET",
        "GOOGLE",
        "VERTA",
        "SAML"
      ],
      "default": "UNKNOWN"
    },
    "ModelDBActionEnumModelDBServiceActions": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ALL",
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "DEPLOY",
        "PUBLIC_READ"
      ],
      "default": "UNKNOWN"
    },
    "OperatorEnumOperator": {
      "type": "string",
      "enum": [
        "EQ",
        "NE",
        "GT",
        "GTE",
        "LT",
        "LTE",
        "CONTAIN",
        "NOT_CONTAIN",
        "IN"
      ],
      "default": "EQ"
    },
    "PathLocationTypeEnumPathLocationType": {
      "type": "string",
      "enum": [
        "LOCAL_FILE_SYSTEM",
        "NETWORK_FILE_SYSTEM",
        "HADOOP_FILE_SYSTEM",
        "S3_FILE_SYSTEM"
      ],
      "default": "LOCAL_FILE_SYSTEM"
    },
    "ServiceEnumService": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ALL",
        "MODELDB_SERVICE"
      ],
      "default": "UNKNOWN"
    },
    "TernaryEnumTernary": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "TRUE",
        "FALSE"
      ],
      "default": "UNKNOWN"
    },
    "ValueTypeEnumValueType": {
      "type": "string",
      "enum": [
        "STRING",
        "NUMBER",
        "LIST",
        "BLOB"
      ],
      "default": "STRING"
    },
    "WorkspaceTypeEnumWorkspaceType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ORGANIZATION",
        "USER"
      ],
      "default": "UNKNOWN"
    },
    "commonArtifact": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "path_only": {
          "type": "boolean",
          "format": "boolean"
        },
        "artifact_type": {
          "$ref": "#/definitions/ArtifactTypeEnumArtifactType"
        },
        "linked_artifact_id": {
          "type": "string"
        },
        "filename_extension": {
          "type": "string"
        }
      }
    },
    "commonKeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "object"
        },
        "value_type": {
          "$ref": "#/definitions/ValueTypeEnumValueType",
          "description": "As per documentation of proto buffer 3.\n  For enums, the default value is the first defined enum value, which must be 0."
        }
      }
    },
    "commonKeyValueQuery": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "object"
        },
        "value_type": {
          "$ref": "#/definitions/ValueTypeEnumValueType"
        },
        "operator": {
          "$ref": "#/definitions/OperatorEnumOperator"
        }
      }
    },
    "modeldbAdvancedQueryDatasetVersionsResponse": {
      "type": "object",
      "properties": {
        "hydrated_dataset_versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbHydratedDatasetVersion"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modeldbAdvancedQueryDatasetsResponse": {
      "type": "object",
      "properties": {
        "hydrated_datasets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbHydratedDataset"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modeldbAdvancedQueryExperimentRunsResponse": {
      "type": "object",
      "properties": {
        "hydrated_experiment_runs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbHydratedExperimentRun"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modeldbAdvancedQueryExperimentsResponse": {
      "type": "object",
      "properties": {
        "hydrated_experiments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbHydratedExperiment"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modeldbAdvancedQueryProjectsResponse": {
      "type": "object",
      "properties": {
        "hydrated_projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbHydratedProject"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modeldbCodeVersion": {
      "type": "object",
      "properties": {
        "git_snapshot": {
          "$ref": "#/definitions/modeldbGitSnapshot"
        },
        "code_archive": {
          "$ref": "#/definitions/commonArtifact"
        },
        "date_logged": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "code version"
    },
    "modeldbCollaboratorUserInfo": {
      "type": "object",
      "properties": {
        "collaborator_user_info": {
          "$ref": "#/definitions/uacUserInfo"
        },
        "collaborator_organization": {
          "$ref": "#/definitions/uacOrganization"
        },
        "collaborator_team": {
          "$ref": "#/definitions/uacTeam"
        },
        "collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "entity_type": {
          "$ref": "#/definitions/EntitiesEnumEntitiesTypes"
        }
      }
    },
    "modeldbComment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "date_time": {
          "type": "string",
          "format": "uint64"
        },
        "message": {
          "type": "string"
        },
        "user_info": {
          "$ref": "#/definitions/uacUserInfo"
        },
        "verta_id": {
          "type": "string"
        }
      }
    },
    "modeldbDataset": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataset_visibility": {
          "$ref": "#/definitions/DatasetVisibilityEnumDatasetVisibility"
        },
        "dataset_type": {
          "$ref": "#/definitions/DatasetTypeEnumDatasetType"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "time_created": {
          "type": "string",
          "format": "uint64"
        },
        "time_updated": {
          "type": "string",
          "format": "uint64"
        },
        "workspace_id": {
          "type": "string"
        },
        "workspace_type": {
          "$ref": "#/definitions/WorkspaceTypeEnumWorkspaceType"
        }
      }
    },
    "modeldbDatasetPartInfo": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "uint64"
        },
        "checksum": {
          "type": "string"
        },
        "last_modified_at_source": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "modeldbDatasetVersion": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "parent_id": {
          "type": "string"
        },
        "dataset_id": {
          "type": "string"
        },
        "time_logged": {
          "type": "string",
          "format": "uint64"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataset_version_visibility": {
          "$ref": "#/definitions/DatasetVisibilityEnumDatasetVisibility"
        },
        "dataset_type": {
          "$ref": "#/definitions/DatasetTypeEnumDatasetType"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "owner": {
          "type": "string"
        },
        "version": {
          "type": "string",
          "format": "uint64"
        },
        "raw_dataset_version_info": {
          "$ref": "#/definitions/modeldbRawDatasetVersionInfo"
        },
        "path_dataset_version_info": {
          "$ref": "#/definitions/modeldbPathDatasetVersionInfo"
        },
        "query_dataset_version_info": {
          "$ref": "#/definitions/modeldbQueryDatasetVersionInfo"
        },
        "time_updated": {
          "type": "string",
          "format": "uint64"
        },
        "dataset_blob": {
          "$ref": "#/definitions/versioningDatasetBlob"
        }
      }
    },
    "modeldbExperiment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "project_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "date_created": {
          "type": "string",
          "format": "int64"
        },
        "date_updated": {
          "type": "string",
          "format": "int64"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "owner": {
          "type": "string"
        },
        "code_version_snapshot": {
          "$ref": "#/definitions/modeldbCodeVersion"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonArtifact"
          }
        }
      }
    },
    "modeldbExperimentRun": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "project_id": {
          "type": "string"
        },
        "experiment_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "date_created": {
          "type": "string",
          "format": "int64"
        },
        "date_updated": {
          "type": "string",
          "format": "int64"
        },
        "start_time": {
          "type": "string",
          "format": "int64"
        },
        "end_time": {
          "type": "string",
          "format": "int64"
        },
        "code_version": {
          "type": "string"
        },
        "code_version_snapshot": {
          "$ref": "#/definitions/modeldbCodeVersion"
        },
        "parent_id": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "hyperparameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "datasets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "observations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbObservation"
          }
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbFeature"
          }
        },
        "job_id": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "versioned_inputs": {
          "$ref": "#/definitions/modeldbVersioningEntry"
        },
        "code_version_from_blob": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/modeldbCodeVersion"
          }
        }
      },
      "title": "ExperimentRun Entity"
    },
    "modeldbFeature": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "modeldbFindDatasetVersions": {
      "type": "object",
      "properties": {
        "dataset_id": {
          "type": "string"
        },
        "dataset_version_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "predicates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValueQuery"
          }
        },
        "ids_only": {
          "type": "boolean",
          "format": "boolean"
        },
        "page_number": {
          "type": "integer",
          "format": "int32",
          "title": "For pagination"
        },
        "page_limit": {
          "type": "integer",
          "format": "int32"
        },
        "ascending": {
          "type": "boolean",
          "format": "boolean"
        },
        "sort_key": {
          "type": "string"
        },
        "workspace_name": {
          "type": "string"
        }
      }
    },
    "modeldbFindDatasets": {
      "type": "object",
      "properties": {
        "dataset_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "predicates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValueQuery"
          }
        },
        "ids_only": {
          "type": "boolean",
          "format": "boolean"
        },
        "workspace_name": {
          "type": "string"
        },
        "page_number": {
          "type": "integer",
          "format": "int32",
          "title": "For pagination"
        },
        "page_limit": {
          "type": "integer",
          "format": "int32"
        },
        "ascending": {
          "type": "boolean",
          "format": "boolean"
        },
        "sort_key": {
          "type": "string"
        }
      }
    },
    "modeldbFindExperimentRuns": {
      "type": "object",
      "properties": {
        "project_id": {
          "type": "string"
        },
        "experiment_id": {
          "type": "string"
        },
        "experiment_run_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "predicates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValueQuery"
          }
        },
        "ids_only": {
          "type": "boolean",
          "format": "boolean"
        },
        "page_number": {
          "type": "integer",
          "format": "int32",
          "title": "For pagination"
        },
        "page_limit": {
          "type": "integer",
          "format": "int32"
        },
        "ascending": {
          "type": "boolean",
          "format": "boolean"
        },
        "sort_key": {
          "type": "string"
        },
        "workspace_name": {
          "type": "string"
        }
      }
    },
    "modeldbFindExperiments": {
      "type": "object",
      "properties": {
        "project_id": {
          "type": "string"
        },
        "experiment_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "predicates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValueQuery"
          }
        },
        "ids_only": {
          "type": "boolean",
          "format": "boolean"
        },
        "page_number": {
          "type": "integer",
          "format": "int32",
          "title": "For pagination"
        },
        "page_limit": {
          "type": "integer",
          "format": "int32"
        },
        "ascending": {
          "type": "boolean",
          "format": "boolean"
        },
        "sort_key": {
          "type": "string"
        },
        "workspace_name": {
          "type": "string"
        }
      }
    },
    "modeldbFindHydratedDatasetsByOrganization": {
      "type": "object",
      "properties": {
        "find_datasets": {
          "$ref": "#/definitions/modeldbFindDatasets"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "modeldbFindHydratedDatasetsByTeam": {
      "type": "object",
      "properties": {
        "find_datasets": {
          "$ref": "#/definitions/modeldbFindDatasets"
        },
        "org_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "modeldbFindHydratedProjectsByOrganization": {
      "type": "object",
      "properties": {
        "find_projects": {
          "$ref": "#/definitions/modeldbFindProjects"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "modeldbFindHydratedProjectsByTeam": {
      "type": "object",
      "properties": {
        "find_projects": {
          "$ref": "#/definitions/modeldbFindProjects"
        },
        "org_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "modeldbFindHydratedProjectsByUser": {
      "type": "object",
      "properties": {
        "find_projects": {
          "$ref": "#/definitions/modeldbFindProjects"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "verta_id": {
          "type": "string"
        }
      }
    },
    "modeldbFindProjects": {
      "type": "object",
      "properties": {
        "project_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "predicates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValueQuery"
          }
        },
        "ids_only": {
          "type": "boolean",
          "format": "boolean"
        },
        "workspace_name": {
          "type": "string"
        },
        "page_number": {
          "type": "integer",
          "format": "int32",
          "title": "For pagination"
        },
        "page_limit": {
          "type": "integer",
          "format": "int32"
        },
        "ascending": {
          "type": "boolean",
          "format": "boolean"
        },
        "sort_key": {
          "type": "string"
        }
      }
    },
    "modeldbGetHydratedDatasetByNameResponse": {
      "type": "object",
      "properties": {
        "hydrated_dataset_by_user": {
          "$ref": "#/definitions/modeldbHydratedDataset"
        },
        "shared_hydrated_datasets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbHydratedDataset"
          }
        }
      }
    },
    "modeldbGetHydratedDatasetsByProjectIdResponse": {
      "type": "object",
      "properties": {
        "hydrated_datasets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbHydratedDataset"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modeldbGetHydratedExperimentRunByIdResponse": {
      "type": "object",
      "properties": {
        "hydrated_experiment_run": {
          "$ref": "#/definitions/modeldbHydratedExperimentRun"
        }
      }
    },
    "modeldbGetHydratedExperimentRunsByProjectIdResponse": {
      "type": "object",
      "properties": {
        "hydrated_experiment_runs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbHydratedExperimentRun"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modeldbGetHydratedExperimentsByProjectIdResponse": {
      "type": "object",
      "properties": {
        "hydrated_experiments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbHydratedExperiment"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modeldbGetHydratedProjectByIdResponse": {
      "type": "object",
      "properties": {
        "hydrated_project": {
          "$ref": "#/definitions/modeldbHydratedProject"
        }
      }
    },
    "modeldbGetHydratedProjectsResponse": {
      "type": "object",
      "properties": {
        "hydrated_projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbHydratedProject"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modeldbGitSnapshot": {
      "type": "object",
      "properties": {
        "filepaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "repo": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        },
        "is_dirty": {
          "$ref": "#/definitions/TernaryEnumTernary"
        }
      }
    },
    "modeldbHydratedDataset": {
      "type": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/modeldbDataset"
        },
        "collaborator_user_infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbCollaboratorUserInfo"
          }
        },
        "owner_user_info": {
          "$ref": "#/definitions/uacUserInfo"
        },
        "allowed_actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uacAction"
          }
        }
      }
    },
    "modeldbHydratedDatasetVersion": {
      "type": "object",
      "properties": {
        "dataset_version": {
          "$ref": "#/definitions/modeldbDatasetVersion"
        },
        "owner_user_info": {
          "$ref": "#/definitions/uacUserInfo"
        },
        "allowed_actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uacAction"
          }
        }
      }
    },
    "modeldbHydratedExperiment": {
      "type": "object",
      "properties": {
        "experiment": {
          "$ref": "#/definitions/modeldbExperiment"
        },
        "owner_user_info": {
          "$ref": "#/definitions/uacUserInfo"
        },
        "allowed_actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uacAction"
          }
        }
      }
    },
    "modeldbHydratedExperimentRun": {
      "type": "object",
      "properties": {
        "experiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbComment"
          }
        },
        "owner_user_info": {
          "$ref": "#/definitions/uacUserInfo"
        },
        "experiment": {
          "$ref": "#/definitions/modeldbExperiment"
        },
        "allowed_actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uacAction"
          }
        }
      }
    },
    "modeldbHydratedProject": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        },
        "collaborator_user_infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbCollaboratorUserInfo"
          }
        },
        "owner_user_info": {
          "$ref": "#/definitions/uacUserInfo"
        },
        "allowed_actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uacAction"
          }
        }
      }
    },
    "modeldbObservation": {
      "type": "object",
      "properties": {
        "attribute": {
          "$ref": "#/definitions/commonKeyValue"
        },
        "artifact": {
          "$ref": "#/definitions/commonArtifact"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        },
        "epoch_number": {
          "type": "object"
        }
      },
      "title": "observations with the same key are not overwritten, the are appended to a list"
    },
    "modeldbPathDatasetVersionInfo": {
      "type": "object",
      "properties": {
        "location_type": {
          "$ref": "#/definitions/PathLocationTypeEnumPathLocationType"
        },
        "size": {
          "type": "string",
          "format": "uint64"
        },
        "dataset_part_infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbDatasetPartInfo"
          }
        },
        "base_path": {
          "type": "string"
        }
      }
    },
    "modeldbProject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "date_created": {
          "type": "string",
          "format": "uint64"
        },
        "date_updated": {
          "type": "string",
          "format": "uint64"
        },
        "short_name": {
          "type": "string"
        },
        "readme_text": {
          "type": "string"
        },
        "project_visibility": {
          "$ref": "#/definitions/modeldbProjectVisibility"
        },
        "workspace_id": {
          "type": "string"
        },
        "workspace_type": {
          "$ref": "#/definitions/WorkspaceTypeEnumWorkspaceType"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "owner": {
          "type": "string"
        },
        "code_version_snapshot": {
          "$ref": "#/definitions/modeldbCodeVersion"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonArtifact"
          }
        }
      }
    },
    "modeldbProjectVisibility": {
      "type": "string",
      "enum": [
        "PRIVATE",
        "PUBLIC",
        "ORG_SCOPED_PUBLIC"
      ],
      "default": "PRIVATE"
    },
    "modeldbQueryDatasetVersionInfo": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "query_template": {
          "type": "string"
        },
        "query_parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbQueryParameter"
          }
        },
        "data_source_uri": {
          "type": "string"
        },
        "execution_timestamp": {
          "type": "string",
          "format": "uint64"
        },
        "num_records": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "modeldbQueryParameter": {
      "type": "object",
      "properties": {
        "parameter_name": {
          "type": "string"
        },
        "parameter_type": {
          "$ref": "#/definitions/ValueTypeEnumValueType"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "modeldbRawDatasetVersionInfo": {
      "type": "object",
      "properties": {
        "size": {
          "type": "string",
          "format": "uint64"
        },
        "features": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "num_records": {
          "type": "string",
          "format": "uint64"
        },
        "object_path": {
          "type": "string"
        },
        "checksum": {
          "type": "string"
        }
      }
    },
    "modeldbVersioningEntry": {
      "type": "object",
      "properties": {
        "repository_id": {
          "type": "string",
          "format": "uint64"
        },
        "commit": {
          "type": "string"
        },
        "key_location_map": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/vertamodeldbLocation"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "uacAction": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/ServiceEnumService"
        },
        "modeldb_service_action": {
          "$ref": "#/definitions/ModelDBActionEnumModelDBServiceActions"
        }
      },
      "title": "An action describes a specific operation that can be performed on a service"
    },
    "uacFlagEnum": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "TRUE",
        "FALSE"
      ],
      "default": "UNDEFINED"
    },
    "uacOrganization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "owner_id": {
          "type": "string"
        },
        "created_timestamp": {
          "type": "string",
          "format": "int64"
        },
        "updated_timestamp": {
          "type": "string",
          "format": "int64"
        },
        "global_collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "global_can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "default_repo_collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "default_endpoint_collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "default_dataset_collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "default_registered_model_collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "workspace_id": {
          "type": "string"
        },
        "registered_model_can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        }
      }
    },
    "uacTeam": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "org_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "owner_id": {
          "type": "string"
        },
        "created_timestamp": {
          "type": "string",
          "format": "int64"
        },
        "updated_timestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "uacUserInfo": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id_service_provider": {
          "$ref": "#/definitions/IdServiceProviderEnumIdServiceProvider"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "image_url": {
          "type": "string"
        },
        "dev_key": {
          "type": "string"
        },
        "verta_info": {
          "$ref": "#/definitions/uacVertaUserInfo"
        }
      }
    },
    "uacVertaUserInfo": {
      "type": "object",
      "properties": {
        "individual_user": {
          "type": "boolean",
          "format": "boolean"
        },
        "username": {
          "type": "string"
        },
        "refresh_timestamp": {
          "type": "string",
          "format": "uint64"
        },
        "last_login_timestamp": {
          "type": "string",
          "format": "uint64"
        },
        "user_id": {
          "type": "string"
        },
        "publicProfile": {
          "$ref": "#/definitions/uacFlagEnum"
        },
        "workspace_id": {
          "type": "string"
        }
      }
    },
    "versioningDatasetBlob": {
      "type": "object",
      "properties": {
        "s3": {
          "$ref": "#/definitions/versioningS3DatasetBlob"
        },
        "path": {
          "$ref": "#/definitions/versioningPathDatasetBlob"
        },
        "query": {
          "$ref": "#/definitions/versioningQueryDatasetBlob"
        }
      }
    },
    "versioningPathDatasetBlob": {
      "type": "object",
      "properties": {
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningPathDatasetComponentBlob"
          }
        }
      }
    },
    "versioningPathDatasetComponentBlob": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "uint64"
        },
        "last_modified_at_source": {
          "type": "string",
          "format": "uint64"
        },
        "sha256": {
          "type": "string"
        },
        "md5": {
          "type": "string"
        },
        "internal_versioned_path": {
          "type": "string"
        },
        "base_path": {
          "type": "string"
        }
      }
    },
    "versioningQueryDatasetBlob": {
      "type": "object",
      "properties": {
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningQueryDatasetComponentBlob"
          }
        }
      }
    },
    "versioningQueryDatasetComponentBlob": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "data_source_uri": {
          "type": "string",
          "title": "string query_template = 2;\nrepeated QueryParameter query_parameters = 3;"
        },
        "execution_timestamp": {
          "type": "string",
          "format": "uint64"
        },
        "num_records": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "versioningS3DatasetBlob": {
      "type": "object",
      "properties": {
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningS3DatasetComponentBlob"
          }
        }
      }
    },
    "versioningS3DatasetComponentBlob": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/versioningPathDatasetComponentBlob"
        },
        "s3_version_id": {
          "type": "string"
        }
      }
    },
    "vertamodeldbLocation": {
      "type": "object",
      "properties": {
        "location": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "basePath": "/v1"
}
