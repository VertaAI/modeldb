{
  "/wagger": "2.0",
  "/nfo": {
    "/itle": "modeldb/ProjectService.proto",
    "/ersion": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/project/addProjectAttributes": {
      "post": {
        "operationId": "ProjectService_addProjectAttributes",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbAddProjectAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbAddProjectAttributes"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/addProjectTag": {
      "post": {
        "operationId": "ProjectService_addProjectTag",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbAddProjectTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbAddProjectTag"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/addProjectTags": {
      "post": {
        "operationId": "ProjectService_addProjectTags",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbAddProjectTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbAddProjectTags"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/createProject": {
      "post": {
        "operationId": "ProjectService_createProject",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbCreateProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbCreateProject"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/deepCopyProject": {
      "post": {
        "operationId": "ProjectService_deepCopyProject",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeepCopyProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeepCopyProject"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/deleteArtifact": {
      "delete": {
        "operationId": "ProjectService_deleteArtifact",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteProjectArtifactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteProjectArtifact"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/deleteProject": {
      "delete": {
        "operationId": "ProjectService_deleteProject",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteProject"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/deleteProjectAttributes": {
      "delete": {
        "operationId": "ProjectService_deleteProjectAttributes",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteProjectAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteProjectAttributes"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/deleteProjectTag": {
      "delete": {
        "operationId": "ProjectService_deleteProjectTag",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteProjectTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteProjectTag"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/deleteProjectTags": {
      "delete": {
        "operationId": "ProjectService_deleteProjectTags",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteProjectTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteProjectTags"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/deleteProjects": {
      "delete": {
        "operationId": "ProjectService_deleteProjects",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteProjects"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/findProjects": {
      "post": {
        "/ummary": "queries",
        "operationId": "ProjectService_findProjects",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbFindProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbFindProjects"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/getArtifacts": {
      "/et": {
        "operationId": "ProjectService_getArtifacts",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "key",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/getProjectAttributes": {
      "/et": {
        "operationId": "ProjectService_getProjectAttributes",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "attribute_keys",
            "/n": "query",
            "/equired": false,
            "/ype": "array",
            "/tems": {
              "/ype": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "/et_all",
            "/n": "query",
            "/equired": false,
            "/ype": "boolean",
            "format": "boolean"
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/getProjectById": {
      "/et": {
        "operationId": "ProjectService_getProjectById",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetProjectByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/getProjectByName": {
      "/et": {
        "operationId": "ProjectService_getProjectByName",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetProjectByNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "workspace_name",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/getProjectCodeVersion": {
      "/et": {
        "operationId": "ProjectService_getProjectCodeVersion",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetProjectCodeVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/getProjectDatasetCount": {
      "/et": {
        "operationId": "ProjectService_getProjectDatasetCount",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetProjectDatasetCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/getProjectReadme": {
      "/et": {
        "operationId": "ProjectService_getProjectReadme",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetProjectReadmeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/getProjectShortName": {
      "/et": {
        "operationId": "ProjectService_getProjectShortName",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetProjectShortNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/getProjectTags": {
      "/et": {
        "operationId": "ProjectService_getProjectTags",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/getProjects": {
      "/et": {
        "operationId": "ProjectService_getProjects",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "page_number",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "page_limit",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "ascending",
            "/n": "query",
            "/equired": false,
            "/ype": "boolean",
            "format": "boolean"
          },
          {
            "name": "/ort_key",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "workspace_name",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/getSummary": {
      "/et": {
        "operationId": "ProjectService_getSummary",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/ntityId",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/getUrlForArtifact": {
      "post": {
        "/ummary": "artifacts",
        "operationId": "ProjectService_getUrlForArtifact",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetUrlForArtifactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbGetUrlForArtifact"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/logArtifacts": {
      "post": {
        "/ummary": "artifacts",
        "operationId": "ProjectService_logArtifacts",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogProjectArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogProjectArtifacts"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/logProjectCodeVersion": {
      "post": {
        "/ummary": "code version",
        "operationId": "ProjectService_logProjectCodeVersion",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogProjectCodeVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogProjectCodeVersion"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/setProjectReadme": {
      "post": {
        "operationId": "ProjectService_setProjectReadme",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbSetProjectReadmeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbSetProjectReadme"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/setProjectShortName": {
      "post": {
        "operationId": "ProjectService_setProjectShortName",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbSetProjectShortNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbSetProjectShortName"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/updateProjectAttributes": {
      "post": {
        "operationId": "ProjectService_updateProjectAttributes",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateProjectAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateProjectAttributes"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/updateProjectDescription": {
      "post": {
        "operationId": "ProjectService_updateProjectDescription",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateProjectDescriptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateProjectDescription"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/updateProjectName": {
      "post": {
        "operationId": "ProjectService_updateProjectName",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateProjectNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateProjectName"
            }
          }
        ],
        "/ags": [
          "ProjectService"
        ]
      }
    },
    "/v1/project/verifyConnection": {
      "/et": {
        "operationId": "ProjectService_verifyConnection",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbVerifyConnectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "/ags": [
          "ProjectService"
        ]
      }
    }
  },
  "definitions": {
    "ArtifactTypeEnumArtifactType": {
      "/ype": "string",
      "/num": [
        "IMAGE",
        "MODEL",
        "TENSORBOARD",
        "DATA",
        "BLOB",
        "STRING",
        "CODE",
        "CONTAINER"
      ],
      "default": "IMAGE"
    },
    "CollaboratorTypeEnumCollaboratorType": {
      "/ype": "string",
      "/num": [
        "READ_ONLY",
        "READ_WRITE"
      ],
      "default": "READ_ONLY"
    },
    "OperatorEnumOperator": {
      "/ype": "string",
      "/num": [
        "EQ",
        "NE",
        "GT",
        "GTE",
        "LT",
        "LTE",
        "CONTAIN",
        "NOT_CONTAIN",
        "IN",
        "NOT_IN"
      ],
      "default": "EQ"
    },
    "TernaryEnumTernary": {
      "/ype": "string",
      "/num": [
        "UNKNOWN",
        "TRUE",
        "FALSE"
      ],
      "default": "UNKNOWN"
    },
    "ValueTypeEnumValueType": {
      "/ype": "string",
      "/num": [
        "STRING",
        "NUMBER",
        "LIST",
        "BLOB"
      ],
      "default": "STRING"
    },
    "WorkspaceTypeEnumWorkspaceType": {
      "/ype": "string",
      "/num": [
        "UNKNOWN",
        "ORGANIZATION",
        "USER"
      ],
      "default": "UNKNOWN"
    },
    "commonArtifact": {
      "/ype": "object",
      "properties": {
        "key": {
          "/ype": "string"
        },
        "path": {
          "/ype": "string"
        },
        "path_only": {
          "/ype": "boolean",
          "format": "boolean"
        },
        "artifact_type": {
          "$ref": "#/definitions/ArtifactTypeEnumArtifactType"
        },
        "linked_artifact_id": {
          "/ype": "string"
        },
        "filename_extension": {
          "/ype": "string"
        },
        "/erialization": {
          "/ype": "string"
        },
        "artifact_subtype": {
          "/ype": "string"
        },
        "upload_completed": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "commonCodeVersion": {
      "/ype": "object",
      "properties": {
        "/it_snapshot": {
          "$ref": "#/definitions/commonGitSnapshot"
        },
        "code_archive": {
          "$ref": "#/definitions/commonArtifact"
        },
        "date_logged": {
          "/ype": "string",
          "format": "uint64"
        }
      },
      "/itle": "code version"
    },
    "commonGitSnapshot": {
      "/ype": "object",
      "properties": {
        "filepaths": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "/epo": {
          "/ype": "string"
        },
        "hash": {
          "/ype": "string"
        },
        "/s_dirty": {
          "$ref": "#/definitions/TernaryEnumTernary"
        }
      }
    },
    "commonGroupId": {
      "/ype": "object",
      "properties": {
        "org_id": {
          "/ype": "string"
        },
        "/roup_id": {
          "/ype": "string"
        }
      }
    },
    "commonKeyValue": {
      "/ype": "object",
      "properties": {
        "key": {
          "/ype": "string"
        },
        "/alue": {
          "/ype": "object"
        },
        "/alue_type": {
          "$ref": "#/definitions/ValueTypeEnumValueType",
          "description": "As per documentation of proto buffer 3.\n  For enums, the default value is the first defined enum value, which must be 0."
        }
      }
    },
    "commonKeyValueQuery": {
      "/ype": "object",
      "properties": {
        "key": {
          "/ype": "string"
        },
        "/alue": {
          "/ype": "object"
        },
        "/alue_type": {
          "$ref": "#/definitions/ValueTypeEnumValueType"
        },
        "operator": {
          "$ref": "#/definitions/OperatorEnumOperator"
        }
      }
    },
    "modeldbAddProjectAttributes": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      }
    },
    "modeldbAddProjectAttributesResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbAddProjectTag": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/ag": {
          "/ype": "string"
        }
      }
    },
    "modeldbAddProjectTagResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbAddProjectTags": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        }
      }
    },
    "modeldbAddProjectTagsResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbCreateProject": {
      "/ype": "object",
      "properties": {
        "name": {
          "/ype": "string"
        },
        "description": {
          "/ype": "string"
        },
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "/eadme_text": {
          "/ype": "string"
        },
        "project_visibility": {
          "$ref": "#/definitions/modeldbProjectVisibility"
        },
        "artifacts": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "workspace_name": {
          "/ype": "string"
        },
        "date_created": {
          "/ype": "string",
          "format": "/nt64"
        },
        "custom_permission": {
          "$ref": "#/definitions/uacCollaboratorPermissions",
          "/itle": "The next field only makes sense when visibility == ORG_CUSTOM\nThey will be empty otherwise"
        },
        "/isibility": {
          "$ref": "#/definitions/uacResourceVisibility"
        }
      }
    },
    "modeldbCreateProjectResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbDeepCopyProject": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        }
      }
    },
    "modeldbDeepCopyProjectResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbDeleteProject": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        }
      }
    },
    "modeldbDeleteProjectArtifact": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "key": {
          "/ype": "string"
        }
      }
    },
    "modeldbDeleteProjectArtifactResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbDeleteProjectAttributes": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "attribute_keys": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "delete_all": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbDeleteProjectAttributesResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbDeleteProjectResponse": {
      "/ype": "object",
      "properties": {
        "/tatus": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbDeleteProjectTag": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/ag": {
          "/ype": "string"
        }
      }
    },
    "modeldbDeleteProjectTagResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbDeleteProjectTags": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "delete_all": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbDeleteProjectTagsResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbDeleteProjects": {
      "/ype": "object",
      "properties": {
        "/ds": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        }
      }
    },
    "modeldbDeleteProjectsResponse": {
      "/ype": "object",
      "properties": {
        "/tatus": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbFindProjects": {
      "/ype": "object",
      "properties": {
        "project_ids": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "predicates": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValueQuery"
          }
        },
        "/ds_only": {
          "/ype": "boolean",
          "format": "boolean"
        },
        "workspace_name": {
          "/ype": "string"
        },
        "page_number": {
          "/ype": "integer",
          "format": "/nt32",
          "/itle": "For pagination"
        },
        "page_limit": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "ascending": {
          "/ype": "boolean",
          "format": "boolean"
        },
        "/ort_key": {
          "/ype": "string"
        }
      }
    },
    "modeldbFindProjectsResponse": {
      "/ype": "object",
      "properties": {
        "projects": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbProject"
          }
        },
        "/otal_records": {
          "/ype": "string",
          "format": "/nt64"
        }
      }
    },
    "modeldbGetArtifactsResponse": {
      "/ype": "object",
      "properties": {
        "artifacts": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        }
      }
    },
    "modeldbGetAttributesResponse": {
      "/ype": "object",
      "properties": {
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      }
    },
    "modeldbGetProjectByIdResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbGetProjectByNameResponse": {
      "/ype": "object",
      "properties": {
        "project_by_user": {
          "$ref": "#/definitions/modeldbProject"
        },
        "/hared_projects": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbProject"
          }
        }
      }
    },
    "modeldbGetProjectCodeVersionResponse": {
      "/ype": "object",
      "properties": {
        "code_version": {
          "$ref": "#/definitions/commonCodeVersion"
        }
      }
    },
    "modeldbGetProjectDatasetCountResponse": {
      "/ype": "object",
      "properties": {
        "dataset_count": {
          "/ype": "string",
          "format": "/nt64"
        }
      }
    },
    "modeldbGetProjectReadmeResponse": {
      "/ype": "object",
      "properties": {
        "/eadme_text": {
          "/ype": "string"
        }
      }
    },
    "modeldbGetProjectShortNameResponse": {
      "/ype": "object",
      "properties": {
        "/hort_name": {
          "/ype": "string"
        }
      }
    },
    "modeldbGetProjectsResponse": {
      "/ype": "object",
      "properties": {
        "projects": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbProject"
          }
        },
        "/otal_records": {
          "/ype": "string",
          "format": "/nt64"
        }
      }
    },
    "modeldbGetSummaryResponse": {
      "/ype": "object",
      "properties": {
        "name": {
          "/ype": "string"
        },
        "last_updated_time": {
          "/ype": "string",
          "format": "uint64"
        },
        "/otal_experiment": {
          "/ype": "string",
          "format": "/nt64"
        },
        "/otal_experiment_runs": {
          "/ype": "string",
          "format": "/nt64"
        },
        "last_modified_experimentRun_summary": {
          "$ref": "#/definitions/modeldbLastModifiedExperimentRunSummary"
        },
        "metrics": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbMetricsSummary"
          }
        }
      }
    },
    "modeldbGetTagsResponse": {
      "/ype": "object",
      "properties": {
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        }
      }
    },
    "modeldbGetUrlForArtifact": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "key": {
          "/ype": "string"
        },
        "method": {
          "/ype": "string"
        },
        "artifact_type": {
          "$ref": "#/definitions/ArtifactTypeEnumArtifactType"
        },
        "part_number": {
          "/ype": "string",
          "format": "uint64"
        }
      }
    },
    "modeldbGetUrlForArtifactResponse": {
      "/ype": "object",
      "properties": {
        "url": {
          "/ype": "string"
        },
        "fields": {
          "/ype": "object",
          "additionalProperties": {
            "/ype": "string"
          }
        },
        "multipart_upload_ok": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbLastModifiedExperimentRunSummary": {
      "/ype": "object",
      "properties": {
        "name": {
          "/ype": "string"
        },
        "last_updated_time": {
          "/ype": "string",
          "format": "uint64"
        }
      }
    },
    "modeldbLogProjectArtifacts": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "artifacts": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        }
      },
      "/itle": "artifacts"
    },
    "modeldbLogProjectArtifactsResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbLogProjectCodeVersion": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "code_version": {
          "$ref": "#/definitions/commonCodeVersion"
        }
      },
      "/itle": "code version"
    },
    "modeldbLogProjectCodeVersionResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbMetricsSummary": {
      "/ype": "object",
      "properties": {
        "key": {
          "/ype": "string"
        },
        "min_value": {
          "/ype": "number",
          "format": "double"
        },
        "max_value": {
          "/ype": "number",
          "format": "double"
        }
      }
    },
    "modeldbProject": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "name": {
          "/ype": "string"
        },
        "description": {
          "/ype": "string"
        },
        "date_created": {
          "/ype": "string",
          "format": "uint64"
        },
        "date_updated": {
          "/ype": "string",
          "format": "uint64"
        },
        "/hort_name": {
          "/ype": "string"
        },
        "/eadme_text": {
          "/ype": "string"
        },
        "project_visibility": {
          "$ref": "#/definitions/modeldbProjectVisibility"
        },
        "workspace_id": {
          "/ype": "string"
        },
        "workspace_type": {
          "$ref": "#/definitions/WorkspaceTypeEnumWorkspaceType"
        },
        "workspace_service_id": {
          "/ype": "string",
          "format": "uint64"
        },
        "custom_permission": {
          "$ref": "#/definitions/uacCollaboratorPermissions",
          "/itle": "The next field only makes sense when visibility == ORG_CUSTOM\nThey will be empty otherwise"
        },
        "/isibility": {
          "$ref": "#/definitions/uacResourceVisibility"
        },
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "owner": {
          "/ype": "string"
        },
        "owner_id": {
          "/ype": "string",
          "format": "uint64"
        },
        "/roup_owner_id": {
          "$ref": "#/definitions/commonGroupId"
        },
        "code_version_snapshot": {
          "$ref": "#/definitions/commonCodeVersion"
        },
        "artifacts": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "/ersion_number": {
          "/ype": "string",
          "format": "uint64",
          "/itle": "Doc for version_number https://github.com/VertaAI/docs/pull/53"
        }
      }
    },
    "modeldbProjectVisibility": {
      "/ype": "string",
      "/num": [
        "PRIVATE",
        "PUBLIC",
        "ORG_SCOPED_PUBLIC"
      ],
      "default": "PRIVATE"
    },
    "modeldbSetProjectReadme": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/eadme_text": {
          "/ype": "string"
        }
      }
    },
    "modeldbSetProjectReadmeResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbSetProjectShortName": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/hort_name": {
          "/ype": "string"
        }
      }
    },
    "modeldbSetProjectShortNameResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbUpdateProjectAttributes": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "attribute": {
          "$ref": "#/definitions/commonKeyValue"
        }
      }
    },
    "modeldbUpdateProjectAttributesResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbUpdateProjectDescription": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "description": {
          "/ype": "string"
        }
      }
    },
    "modeldbUpdateProjectDescriptionResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbUpdateProjectName": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "name": {
          "/ype": "string"
        }
      }
    },
    "modeldbUpdateProjectNameResponse": {
      "/ype": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/modeldbProject"
        }
      }
    },
    "modeldbVerifyConnectionResponse": {
      "/ype": "object",
      "properties": {
        "/tatus": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "protobufAny": {
      "/ype": "object",
      "properties": {
        "/ype_url": {
          "/ype": "string"
        },
        "/alue": {
          "/ype": "string",
          "format": "byte"
        }
      }
    },
    "protobufNullValue": {
      "/ype": "string",
      "/num": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "/untimeError": {
      "/ype": "object",
      "properties": {
        "/rror": {
          "/ype": "string"
        },
        "code": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "message": {
          "/ype": "string"
        },
        "details": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "uacCollaboratorPermissions": {
      "/ype": "object",
      "properties": {
        "collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "can_predict": {
          "$ref": "#/definitions/TernaryEnumTernary"
        }
      }
    },
    "uacResourceVisibility": {
      "/ype": "string",
      "/num": [
        "UNKNOWN",
        "ORG_DEFAULT",
        "ORG_CUSTOM",
        "PRIVATE",
        "WORKSPACE_DEFAULT"
      ],
      "default": "UNKNOWN"
    }
  },
  "basePath": "/v1"
}
