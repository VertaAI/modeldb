{
  "/wagger": "2.0",
  "/nfo": {
    "/itle": "modeldb/DatasetService.proto",
    "/ersion": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/dataset/addDatasetAttributes": {
      "post": {
        "operationId": "DatasetService_addDatasetAttributes",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbAddDatasetAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbAddDatasetAttributes"
            }
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    },
    "/v1/dataset/addDatasetTags": {
      "post": {
        "operationId": "DatasetService_addDatasetTags",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbAddDatasetTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbAddDatasetTags"
            }
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    },
    "/v1/dataset/createDataset": {
      "post": {
        "operationId": "DatasetService_createDataset",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbCreateDatasetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbCreateDataset"
            }
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    },
    "/v1/dataset/deleteDataset": {
      "delete": {
        "operationId": "DatasetService_deleteDataset",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteDatasetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteDataset"
            }
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    },
    "/v1/dataset/deleteDatasetAttributes": {
      "delete": {
        "operationId": "DatasetService_deleteDatasetAttributes",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteDatasetAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteDatasetAttributes"
            }
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    },
    "/v1/dataset/deleteDatasetTags": {
      "delete": {
        "operationId": "DatasetService_deleteDatasetTags",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteDatasetTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteDatasetTags"
            }
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    },
    "/v1/dataset/deleteDatasets": {
      "delete": {
        "operationId": "DatasetService_deleteDatasets",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteDatasetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteDatasets"
            }
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    },
    "/v1/dataset/findDatasets": {
      "post": {
        "/ummary": "queries",
        "operationId": "DatasetService_findDatasets",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbFindDatasetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbFindDatasets"
            }
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    },
    "/v1/dataset/getAllDatasets": {
      "/et": {
        "operationId": "DatasetService_getAllDatasets",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetAllDatasetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "page_number",
            "description": "For pagination.",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "page_limit",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "ascending",
            "/n": "query",
            "/equired": false,
            "/ype": "boolean",
            "format": "boolean"
          },
          {
            "name": "/ort_key",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "workspace_name",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    },
    "/v1/dataset/getDatasetById": {
      "/et": {
        "operationId": "DatasetService_getDatasetById",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetDatasetByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    },
    "/v1/dataset/getDatasetByName": {
      "/et": {
        "operationId": "DatasetService_getDatasetByName",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetDatasetByNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "workspace_name",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    },
    "/v1/dataset/getDatasetTags": {
      "/et": {
        "operationId": "DatasetService_getDatasetTags",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    },
    "/v1/dataset/getExperimentRunByDataset": {
      "post": {
        "operationId": "DatasetService_getExperimentRunByDataset",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetExperimentRunByDatasetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbGetExperimentRunByDataset"
            }
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    },
    "/v1/dataset/getLastExperimentByDatasetId": {
      "/et": {
        "operationId": "DatasetService_getLastExperimentByDatasetId",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLastExperimentByDatasetIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "dataset_id",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    },
    "/v1/dataset/updateDatasetAttributes": {
      "post": {
        "operationId": "DatasetService_updateDatasetAttributes",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateDatasetAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateDatasetAttributes"
            }
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    },
    "/v1/dataset/updateDatasetDescription": {
      "post": {
        "operationId": "DatasetService_updateDatasetDescription",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateDatasetDescriptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateDatasetDescription"
            }
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    },
    "/v1/dataset/updateDatasetName": {
      "post": {
        "operationId": "DatasetService_updateDatasetName",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateDatasetNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateDatasetName"
            }
          }
        ],
        "/ags": [
          "DatasetService"
        ]
      }
    }
  },
  "definitions": {
    "ArtifactTypeEnumArtifactType": {
      "/ype": "string",
      "/num": [
        "IMAGE",
        "MODEL",
        "TENSORBOARD",
        "DATA",
        "BLOB",
        "STRING",
        "CODE",
        "CONTAINER"
      ],
      "default": "IMAGE"
    },
    "CollaboratorTypeEnumCollaboratorType": {
      "/ype": "string",
      "/num": [
        "READ_ONLY",
        "READ_WRITE"
      ],
      "default": "READ_ONLY"
    },
    "DatasetTypeEnumDatasetType": {
      "/ype": "string",
      "/num": [
        "RAW",
        "PATH",
        "QUERY"
      ],
      "default": "RAW"
    },
    "DatasetVisibilityEnumDatasetVisibility": {
      "/ype": "string",
      "/num": [
        "PRIVATE",
        "PUBLIC",
        "ORG_SCOPED_PUBLIC"
      ],
      "default": "PRIVATE"
    },
    "OperatorEnumOperator": {
      "/ype": "string",
      "/num": [
        "EQ",
        "NE",
        "GT",
        "GTE",
        "LT",
        "LTE",
        "CONTAIN",
        "NOT_CONTAIN",
        "IN",
        "NOT_IN"
      ],
      "default": "EQ"
    },
    "TernaryEnumTernary": {
      "/ype": "string",
      "/num": [
        "UNKNOWN",
        "TRUE",
        "FALSE"
      ],
      "default": "UNKNOWN"
    },
    "ValueTypeEnumValueType": {
      "/ype": "string",
      "/num": [
        "STRING",
        "NUMBER",
        "LIST",
        "BLOB"
      ],
      "default": "STRING"
    },
    "WorkspaceTypeEnumWorkspaceType": {
      "/ype": "string",
      "/num": [
        "UNKNOWN",
        "ORGANIZATION",
        "USER"
      ],
      "default": "UNKNOWN"
    },
    "commonArtifact": {
      "/ype": "object",
      "properties": {
        "key": {
          "/ype": "string"
        },
        "path": {
          "/ype": "string"
        },
        "path_only": {
          "/ype": "boolean",
          "format": "boolean"
        },
        "artifact_type": {
          "$ref": "#/definitions/ArtifactTypeEnumArtifactType"
        },
        "linked_artifact_id": {
          "/ype": "string"
        },
        "filename_extension": {
          "/ype": "string"
        },
        "/erialization": {
          "/ype": "string"
        },
        "artifact_subtype": {
          "/ype": "string"
        },
        "upload_completed": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "commonCodeVersion": {
      "/ype": "object",
      "properties": {
        "/it_snapshot": {
          "$ref": "#/definitions/commonGitSnapshot"
        },
        "code_archive": {
          "$ref": "#/definitions/commonArtifact"
        },
        "date_logged": {
          "/ype": "string",
          "format": "uint64"
        }
      },
      "/itle": "code version"
    },
    "commonGitSnapshot": {
      "/ype": "object",
      "properties": {
        "filepaths": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "/epo": {
          "/ype": "string"
        },
        "hash": {
          "/ype": "string"
        },
        "/s_dirty": {
          "$ref": "#/definitions/TernaryEnumTernary"
        }
      }
    },
    "commonGroupId": {
      "/ype": "object",
      "properties": {
        "org_id": {
          "/ype": "string"
        },
        "/roup_id": {
          "/ype": "string"
        }
      }
    },
    "commonKeyValue": {
      "/ype": "object",
      "properties": {
        "key": {
          "/ype": "string"
        },
        "/alue": {
          "/ype": "object"
        },
        "/alue_type": {
          "$ref": "#/definitions/ValueTypeEnumValueType",
          "description": "As per documentation of proto buffer 3.\n  For enums, the default value is the first defined enum value, which must be 0."
        }
      }
    },
    "commonKeyValueQuery": {
      "/ype": "object",
      "properties": {
        "key": {
          "/ype": "string"
        },
        "/alue": {
          "/ype": "object"
        },
        "/alue_type": {
          "$ref": "#/definitions/ValueTypeEnumValueType"
        },
        "operator": {
          "$ref": "#/definitions/OperatorEnumOperator"
        }
      }
    },
    "modeldbAddDatasetAttributes": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      }
    },
    "modeldbAddDatasetAttributesResponse": {
      "/ype": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/modeldbDataset"
        }
      }
    },
    "modeldbAddDatasetTags": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        }
      }
    },
    "modeldbAddDatasetTagsResponse": {
      "/ype": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/modeldbDataset"
        }
      }
    },
    "modeldbCreateDataset": {
      "/ype": "object",
      "properties": {
        "name": {
          "/ype": "string"
        },
        "description": {
          "/ype": "string"
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "dataset_visibility": {
          "$ref": "#/definitions/DatasetVisibilityEnumDatasetVisibility"
        },
        "dataset_type": {
          "$ref": "#/definitions/DatasetTypeEnumDatasetType"
        },
        "workspace_name": {
          "/ype": "string"
        },
        "/ime_created": {
          "/ype": "string",
          "format": "uint64"
        },
        "custom_permission": {
          "$ref": "#/definitions/uacCollaboratorPermissions",
          "/itle": "The next field only makes sense when visibility == ORG_CUSTOM\nThey will be empty otherwise"
        },
        "/isibility": {
          "$ref": "#/definitions/uacResourceVisibility"
        }
      }
    },
    "modeldbCreateDatasetResponse": {
      "/ype": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/modeldbDataset"
        }
      }
    },
    "modeldbDataset": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "name": {
          "/ype": "string"
        },
        "owner": {
          "/ype": "string"
        },
        "owner_id": {
          "/ype": "string",
          "format": "uint64"
        },
        "/roup_owner_id": {
          "$ref": "#/definitions/commonGroupId"
        },
        "description": {
          "/ype": "string"
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "dataset_visibility": {
          "$ref": "#/definitions/DatasetVisibilityEnumDatasetVisibility"
        },
        "dataset_type": {
          "$ref": "#/definitions/DatasetTypeEnumDatasetType"
        },
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "/ime_created": {
          "/ype": "string",
          "format": "uint64"
        },
        "/ime_updated": {
          "/ype": "string",
          "format": "uint64"
        },
        "workspace_id": {
          "/ype": "string"
        },
        "workspace_type": {
          "$ref": "#/definitions/WorkspaceTypeEnumWorkspaceType"
        },
        "workspace_service_id": {
          "/ype": "string",
          "format": "uint64"
        },
        "custom_permission": {
          "$ref": "#/definitions/uacCollaboratorPermissions",
          "/itle": "The next field only makes sense when visibility == ORG_CUSTOM\nThey will be empty otherwise"
        },
        "/isibility": {
          "$ref": "#/definitions/uacResourceVisibility"
        },
        "/ersion_number": {
          "/ype": "string",
          "format": "uint64",
          "/itle": "Doc for version_number https://github.com/VertaAI/docs/pull/53"
        }
      }
    },
    "modeldbDeleteDataset": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        }
      }
    },
    "modeldbDeleteDatasetAttributes": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "attribute_keys": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "delete_all": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbDeleteDatasetAttributesResponse": {
      "/ype": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/modeldbDataset"
        }
      }
    },
    "modeldbDeleteDatasetResponse": {
      "/ype": "object",
      "properties": {
        "/tatus": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbDeleteDatasetTags": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "delete_all": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbDeleteDatasetTagsResponse": {
      "/ype": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/modeldbDataset"
        }
      }
    },
    "modeldbDeleteDatasets": {
      "/ype": "object",
      "properties": {
        "/ds": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        }
      }
    },
    "modeldbDeleteDatasetsResponse": {
      "/ype": "object",
      "properties": {
        "/tatus": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbExperiment": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "project_id": {
          "/ype": "string"
        },
        "name": {
          "/ype": "string"
        },
        "description": {
          "/ype": "string"
        },
        "date_created": {
          "/ype": "string",
          "format": "/nt64"
        },
        "date_updated": {
          "/ype": "string",
          "format": "/nt64"
        },
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "owner": {
          "/ype": "string"
        },
        "owner_id": {
          "/ype": "string",
          "format": "uint64"
        },
        "/roup_owner_id": {
          "$ref": "#/definitions/commonGroupId"
        },
        "code_version_snapshot": {
          "$ref": "#/definitions/commonCodeVersion"
        },
        "artifacts": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "/ersion_number": {
          "/ype": "string",
          "format": "uint64",
          "/itle": "Doc for version_number https://github.com/VertaAI/docs/pull/53"
        }
      }
    },
    "modeldbExperimentRun": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "project_id": {
          "/ype": "string"
        },
        "/xperiment_id": {
          "/ype": "string"
        },
        "name": {
          "/ype": "string"
        },
        "description": {
          "/ype": "string"
        },
        "date_created": {
          "/ype": "string",
          "format": "/nt64"
        },
        "date_updated": {
          "/ype": "string",
          "format": "/nt64"
        },
        "/tart_time": {
          "/ype": "string",
          "format": "/nt64"
        },
        "/nd_time": {
          "/ype": "string",
          "format": "/nt64"
        },
        "code_version": {
          "/ype": "string"
        },
        "code_version_snapshot": {
          "$ref": "#/definitions/commonCodeVersion"
        },
        "parent_id": {
          "/ype": "string"
        },
        "/nvironment": {
          "$ref": "#/definitions/versioningEnvironmentBlob",
          "/itle": "Requirement"
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "hyperparameters": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "artifacts": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "datasets": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "metrics": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "observations": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbObservation"
          }
        },
        "features": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbFeature"
          }
        },
        "job_id": {
          "/ype": "string"
        },
        "owner": {
          "/ype": "string"
        },
        "owner_id": {
          "/ype": "string",
          "format": "uint64"
        },
        "/roup_owner_id": {
          "$ref": "#/definitions/commonGroupId"
        },
        "/ersioned_inputs": {
          "$ref": "#/definitions/modeldbVersioningEntry"
        },
        "code_version_from_blob": {
          "/ype": "object",
          "additionalProperties": {
            "$ref": "#/definitions/commonCodeVersion"
          }
        },
        "/ersion_number": {
          "/ype": "string",
          "format": "uint64",
          "/itle": "Doc for version_number https://github.com/VertaAI/docs/pull/53"
        }
      },
      "/itle": "ExperimentRun Entity"
    },
    "modeldbFeature": {
      "/ype": "object",
      "properties": {
        "name": {
          "/ype": "string"
        }
      }
    },
    "modeldbFindDatasets": {
      "/ype": "object",
      "properties": {
        "dataset_ids": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "predicates": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValueQuery"
          }
        },
        "/ds_only": {
          "/ype": "boolean",
          "format": "boolean"
        },
        "workspace_name": {
          "/ype": "string"
        },
        "page_number": {
          "/ype": "integer",
          "format": "/nt32",
          "/itle": "For pagination"
        },
        "page_limit": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "ascending": {
          "/ype": "boolean",
          "format": "boolean"
        },
        "/ort_key": {
          "/ype": "string"
        }
      }
    },
    "modeldbFindDatasetsResponse": {
      "/ype": "object",
      "properties": {
        "datasets": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbDataset"
          }
        },
        "/otal_records": {
          "/ype": "string",
          "format": "/nt64"
        }
      }
    },
    "modeldbGetAllDatasetsResponse": {
      "/ype": "object",
      "properties": {
        "datasets": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbDataset"
          }
        },
        "/otal_records": {
          "/ype": "string",
          "format": "uint64"
        }
      }
    },
    "modeldbGetDatasetByIdResponse": {
      "/ype": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/modeldbDataset"
        }
      }
    },
    "modeldbGetDatasetByNameResponse": {
      "/ype": "object",
      "properties": {
        "dataset_by_user": {
          "$ref": "#/definitions/modeldbDataset"
        },
        "/hared_datasets": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbDataset"
          }
        }
      }
    },
    "modeldbGetExperimentRunByDataset": {
      "/ype": "object",
      "properties": {
        "dataset_id": {
          "/ype": "string"
        }
      }
    },
    "modeldbGetExperimentRunByDatasetResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment_runs": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        }
      }
    },
    "modeldbGetTagsResponse": {
      "/ype": "object",
      "properties": {
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        }
      }
    },
    "modeldbLastExperimentByDatasetIdResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment": {
          "$ref": "#/definitions/modeldbExperiment"
        }
      }
    },
    "modeldbObservation": {
      "/ype": "object",
      "properties": {
        "attribute": {
          "$ref": "#/definitions/commonKeyValue"
        },
        "artifact": {
          "$ref": "#/definitions/commonArtifact"
        },
        "/imestamp": {
          "/ype": "string",
          "format": "/nt64"
        },
        "/poch_number": {
          "/ype": "object"
        }
      },
      "/itle": "observations with the same key are not overwritten, the are appended to a list"
    },
    "modeldbUpdateDatasetAttributes": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "attribute": {
          "$ref": "#/definitions/commonKeyValue"
        }
      }
    },
    "modeldbUpdateDatasetAttributesResponse": {
      "/ype": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/modeldbDataset"
        }
      }
    },
    "modeldbUpdateDatasetDescription": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "description": {
          "/ype": "string"
        }
      }
    },
    "modeldbUpdateDatasetDescriptionResponse": {
      "/ype": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/modeldbDataset"
        }
      }
    },
    "modeldbUpdateDatasetName": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "name": {
          "/ype": "string"
        }
      }
    },
    "modeldbUpdateDatasetNameResponse": {
      "/ype": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/modeldbDataset"
        }
      }
    },
    "modeldbVersioningEntry": {
      "/ype": "object",
      "properties": {
        "/epository_id": {
          "/ype": "string",
          "format": "uint64"
        },
        "commit": {
          "/ype": "string"
        },
        "key_location_map": {
          "/ype": "object",
          "additionalProperties": {
            "$ref": "#/definitions/vertamodeldbLocation"
          }
        }
      }
    },
    "protobufAny": {
      "/ype": "object",
      "properties": {
        "/ype_url": {
          "/ype": "string"
        },
        "/alue": {
          "/ype": "string",
          "format": "byte"
        }
      }
    },
    "protobufNullValue": {
      "/ype": "string",
      "/num": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "/untimeError": {
      "/ype": "object",
      "properties": {
        "/rror": {
          "/ype": "string"
        },
        "code": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "message": {
          "/ype": "string"
        },
        "details": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "uacCollaboratorPermissions": {
      "/ype": "object",
      "properties": {
        "collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "can_predict": {
          "$ref": "#/definitions/TernaryEnumTernary"
        }
      }
    },
    "uacResourceVisibility": {
      "/ype": "string",
      "/num": [
        "UNKNOWN",
        "ORG_DEFAULT",
        "ORG_CUSTOM",
        "PRIVATE",
        "WORKSPACE_DEFAULT"
      ],
      "default": "UNKNOWN"
    },
    "/ersioningAptEnvironmentBlob": {
      "/ype": "object",
      "properties": {
        "packages": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        }
      }
    },
    "/ersioningDockerEnvironmentBlob": {
      "/ype": "object",
      "properties": {
        "/epository": {
          "/ype": "string"
        },
        "/ag": {
          "/ype": "string"
        },
        "/ha": {
          "/ype": "string"
        }
      }
    },
    "/ersioningEnvironmentBlob": {
      "/ype": "object",
      "properties": {
        "python": {
          "$ref": "#/definitions/versioningPythonEnvironmentBlob"
        },
        "docker": {
          "$ref": "#/definitions/versioningDockerEnvironmentBlob"
        },
        "/nvironment_variables": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/versioningEnvironmentVariablesBlob"
          }
        },
        "command_line": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "apt": {
          "$ref": "#/definitions/versioningAptEnvironmentBlob"
        }
      }
    },
    "/ersioningEnvironmentVariablesBlob": {
      "/ype": "object",
      "properties": {
        "name": {
          "/ype": "string"
        },
        "/alue": {
          "/ype": "string"
        }
      }
    },
    "/ersioningPythonEnvironmentBlob": {
      "/ype": "object",
      "properties": {
        "/ersion": {
          "$ref": "#/definitions/versioningVersionEnvironmentBlob"
        },
        "/equirements": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/versioningPythonRequirementEnvironmentBlob"
          }
        },
        "constraints": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/versioningPythonRequirementEnvironmentBlob"
          }
        },
        "/aw_requirements": {
          "/ype": "string",
          "description": "These fields are only present if the parsed versions above are empty. That is, you cannot have both `requirements` and `raw_requirements` for example."
        },
        "/aw_constraints": {
          "/ype": "string"
        }
      }
    },
    "/ersioningPythonRequirementEnvironmentBlob": {
      "/ype": "object",
      "properties": {
        "library": {
          "/ype": "string"
        },
        "constraint": {
          "/ype": "string"
        },
        "/ersion": {
          "$ref": "#/definitions/versioningVersionEnvironmentBlob"
        }
      }
    },
    "/ersioningVersionEnvironmentBlob": {
      "/ype": "object",
      "properties": {
        "major": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "minor": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "patch": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "/uffix": {
          "/ype": "string"
        }
      }
    },
    "/ertamodeldbLocation": {
      "/ype": "object",
      "properties": {
        "location": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        }
      }
    }
  },
  "basePath": "/v1"
}
