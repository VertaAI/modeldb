{
  "/wagger": "2.0",
  "/nfo": {
    "/itle": "modeldb/ExperimentRunService.proto",
    "/ersion": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/experiment-run/addExperimentRunAttributes": {
      "post": {
        "operationId": "ExperimentRunService_addExperimentRunAttributes",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbAddExperimentRunAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbAddExperimentRunAttributes"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/addExperimentRunTag": {
      "post": {
        "/ummary": "tag",
        "operationId": "ExperimentRunService_addExperimentRunTag",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbAddExperimentRunTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbAddExperimentRunTag"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/addExperimentRunTags": {
      "post": {
        "/ummary": "tags",
        "operationId": "ExperimentRunService_addExperimentRunTags",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbAddExperimentRunTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbAddExperimentRunTags"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/cloneExperimentRun": {
      "post": {
        "operationId": "ExperimentRunService_cloneExperimentRun",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbCloneExperimentRunResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbCloneExperimentRun"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/commitArtifactPart": {
      "post": {
        "operationId": "ExperimentRunService_commitArtifactPart",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbCommitArtifactPartResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbCommitArtifactPart"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/commitMultipartArtifact": {
      "post": {
        "operationId": "ExperimentRunService_commitMultipartArtifact",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbCommitMultipartArtifactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbCommitMultipartArtifact"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/createExperimentRun": {
      "post": {
        "operationId": "ExperimentRunService_createExperimentRun",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbCreateExperimentRunResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbCreateExperimentRun"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/deleteArtifact": {
      "delete": {
        "operationId": "ExperimentRunService_deleteArtifact",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteArtifactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteArtifact"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/deleteExperimentRun": {
      "delete": {
        "operationId": "ExperimentRunService_deleteExperimentRun",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRunResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRun"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/deleteExperimentRunAttributes": {
      "delete": {
        "operationId": "ExperimentRunService_deleteExperimentRunAttributes",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRunAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRunAttributes"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/deleteExperimentRunTag": {
      "delete": {
        "operationId": "ExperimentRunService_deleteExperimentRunTag",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRunTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRunTag"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/deleteExperimentRunTags": {
      "delete": {
        "operationId": "ExperimentRunService_deleteExperimentRunTags",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRunTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRunTags"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/deleteExperimentRuns": {
      "delete": {
        "operationId": "ExperimentRunService_deleteExperimentRuns",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRunsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRuns"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/deleteHyperparameters": {
      "delete": {
        "operationId": "ExperimentRunService_deleteHyperparameters",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteHyperparametersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteHyperparameters"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/deleteMetrics": {
      "delete": {
        "operationId": "ExperimentRunService_deleteMetrics",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteMetrics"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/deleteObservations": {
      "delete": {
        "operationId": "ExperimentRunService_deleteObservations",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteObservationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbDeleteObservations"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/findExperimentRuns": {
      "post": {
        "/ummary": "queries",
        "operationId": "ExperimentRunService_findExperimentRuns",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbFindExperimentRunsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbFindExperimentRuns"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getArtifacts": {
      "/et": {
        "operationId": "ExperimentRunService_getArtifacts",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "key",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getAttributes": {
      "/et": {
        "operationId": "ExperimentRunService_getExperimentRunAttributes",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "attribute_keys",
            "/n": "query",
            "/equired": false,
            "/ype": "array",
            "/tems": {
              "/ype": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "/et_all",
            "/n": "query",
            "/equired": false,
            "/ype": "boolean",
            "format": "boolean"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getChildrenExperimentRuns": {
      "/et": {
        "operationId": "ExperimentRunService_getChildrenExperimentRuns",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetChildrenExperimentRunsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/xperiment_run_id",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "page_number",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "page_limit",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "ascending",
            "/n": "query",
            "/equired": false,
            "/ype": "boolean",
            "format": "boolean"
          },
          {
            "name": "/ort_key",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getCommittedArtifactParts": {
      "/et": {
        "operationId": "ExperimentRunService_getCommittedArtifactParts",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetCommittedArtifactPartsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "key",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getDatasets": {
      "/et": {
        "operationId": "ExperimentRunService_getDatasets",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetDatasetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getExperimentRunById": {
      "/et": {
        "operationId": "ExperimentRunService_getExperimentRunById",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetExperimentRunByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getExperimentRunByName": {
      "/et": {
        "operationId": "ExperimentRunService_getExperimentRunByName",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetExperimentRunByNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "/xperiment_id",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getExperimentRunCodeVersion": {
      "/et": {
        "operationId": "ExperimentRunService_getExperimentRunCodeVersion",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetExperimentRunCodeVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getExperimentRunTags": {
      "/et": {
        "operationId": "ExperimentRunService_getExperimentRunTags",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getExperimentRunsByDatasetVersionId": {
      "/et": {
        "operationId": "ExperimentRunService_getExperimentRunsByDatasetVersionId",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetExperimentRunsByDatasetVersionIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "dataset_version_id",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "page_number",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "page_limit",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "ascending",
            "/n": "query",
            "/equired": false,
            "/ype": "boolean",
            "format": "boolean"
          },
          {
            "name": "/ort_key",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getExperimentRunsInExperiment": {
      "/et": {
        "operationId": "ExperimentRunService_getExperimentRunsInExperiment",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetExperimentRunsInExperimentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/xperiment_id",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "page_number",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "page_limit",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "ascending",
            "/n": "query",
            "/equired": false,
            "/ype": "boolean",
            "format": "boolean"
          },
          {
            "name": "/ort_key",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getExperimentRunsInProject": {
      "/et": {
        "/ummary": "basic queries",
        "operationId": "ExperimentRunService_getExperimentRunsInProject",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetExperimentRunsInProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "page_number",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "page_limit",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "ascending",
            "/n": "query",
            "/equired": false,
            "/ype": "boolean",
            "format": "boolean"
          },
          {
            "name": "/ort_key",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getHyperparameters": {
      "/et": {
        "operationId": "ExperimentRunService_getHyperparameters",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetHyperparametersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getJobId": {
      "/et": {
        "operationId": "ExperimentRunService_getJobId",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetJobIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getMetrics": {
      "/et": {
        "operationId": "ExperimentRunService_getMetrics",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getObservations": {
      "/et": {
        "operationId": "ExperimentRunService_getObservations",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetObservationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "observation_key",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getTopExperimentRuns": {
      "/et": {
        "operationId": "ExperimentRunService_getTopExperimentRuns",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbTopExperimentRunsSelectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "/xperiment_id",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "/xperiment_run_ids",
            "/n": "query",
            "/equired": false,
            "/ype": "array",
            "/tems": {
              "/ype": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "/ort_key",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "ascending",
            "/n": "query",
            "/equired": false,
            "/ype": "boolean",
            "format": "boolean"
          },
          {
            "name": "/op_k",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "/ds_only",
            "/n": "query",
            "/equired": false,
            "/ype": "boolean",
            "format": "boolean"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getUrlForArtifact": {
      "post": {
        "operationId": "ExperimentRunService_getUrlForArtifact",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetUrlForArtifactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbGetUrlForArtifact"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/getVersionedInput": {
      "/et": {
        "operationId": "ExperimentRunService_getVersionedInputs",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbGetVersionedInputResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/logArtifact": {
      "post": {
        "/ummary": "artifact",
        "operationId": "ExperimentRunService_logArtifact",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogArtifactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogArtifact"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/logArtifacts": {
      "post": {
        "/ummary": "artifacts",
        "operationId": "ExperimentRunService_logArtifacts",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogArtifacts"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/logAttribute": {
      "post": {
        "/ummary": "attribute",
        "operationId": "ExperimentRunService_logAttribute",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogAttributeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogAttribute"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/logAttributes": {
      "post": {
        "/ummary": "attributes",
        "operationId": "ExperimentRunService_logAttributes",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogAttributes"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/logDataset": {
      "post": {
        "/ummary": "dataset",
        "operationId": "ExperimentRunService_logDataset",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogDatasetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogDataset"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/logDatasets": {
      "post": {
        "/ummary": "datasets",
        "operationId": "ExperimentRunService_logDatasets",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogDatasetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogDatasets"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/logEnvironment": {
      "post": {
        "operationId": "ExperimentRunService_logEnvironment",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogEnvironmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogEnvironment"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/logExperimentRunCodeVersion": {
      "post": {
        "/ummary": "code version",
        "operationId": "ExperimentRunService_logExperimentRunCodeVersion",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogExperimentRunCodeVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogExperimentRunCodeVersion"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/logHyperparameter": {
      "post": {
        "/ummary": "hyperparameter",
        "operationId": "ExperimentRunService_logHyperparameter",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogHyperparameterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogHyperparameter"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/logHyperparameters": {
      "post": {
        "/ummary": "hyperparameters",
        "operationId": "ExperimentRunService_logHyperparameters",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogHyperparametersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogHyperparameters"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/logJobId": {
      "/et": {
        "/ummary": "jobs",
        "operationId": "ExperimentRunService_logJobId",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogJobIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/d",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "job_id",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/logMetric": {
      "post": {
        "/ummary": "metric",
        "operationId": "ExperimentRunService_logMetric",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogMetricResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogMetric"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/logMetrics": {
      "post": {
        "/ummary": "metrics",
        "operationId": "ExperimentRunService_logMetrics",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogMetrics"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/logObservation": {
      "post": {
        "/ummary": "observation",
        "operationId": "ExperimentRunService_logObservation",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogObservationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogObservation"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/logObservations": {
      "post": {
        "/ummary": "observations",
        "operationId": "ExperimentRunService_logObservations",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogObservationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogObservations"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/logVersionedInput": {
      "post": {
        "operationId": "ExperimentRunService_logVersionedInput",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbLogVersionedInputResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbLogVersionedInput"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/setParentExperimentRunId": {
      "post": {
        "operationId": "ExperimentRunService_setParentExperimentRunId",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbSetParentExperimentRunIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbSetParentExperimentRunId"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/sortExperimentRuns": {
      "/et": {
        "operationId": "ExperimentRunService_sortExperimentRuns",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbSortExperimentRunsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/xperiment_run_ids",
            "/n": "query",
            "/equired": false,
            "/ype": "array",
            "/tems": {
              "/ype": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "/ort_key",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "ascending",
            "/n": "query",
            "/equired": false,
            "/ype": "boolean",
            "format": "boolean"
          },
          {
            "name": "/ds_only",
            "/n": "query",
            "/equired": false,
            "/ype": "boolean",
            "format": "boolean"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/updateExperimentRunDescription": {
      "post": {
        "operationId": "ExperimentRunService_updateExperimentRunDescription",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateExperimentRunDescriptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateExperimentRunDescription"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/experiment-run/updateExperimentRunName": {
      "post": {
        "operationId": "ExperimentRunService_updateExperimentRunName",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateExperimentRunNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/modeldbUpdateExperimentRunName"
            }
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/versioning/repositories/{repository_id.repo_id}/commits/{commit_sha}/path/runs": {
      "/et": {
        "/ummary": "Getting ExperimentRuns linked to a blob",
        "operationId": "ExperimentRunService_ListBlobExperimentRuns2",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbListBlobExperimentRunsRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/epository_id.repo_id",
            "/n": "path",
            "/equired": true,
            "/ype": "string",
            "format": "uint64"
          },
          {
            "name": "commit_sha",
            "/n": "path",
            "/equired": true,
            "/ype": "string"
          },
          {
            "name": "/epository_id.named_id.name",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "/epository_id.named_id.workspace_name",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "pagination.page_number",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "pagination.page_limit",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "location",
            "/n": "query",
            "/equired": false,
            "/ype": "array",
            "/tems": {
              "/ype": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/versioning/repositories/{repository_id.repo_id}/commits/{commit_sha}/runs": {
      "/et": {
        "/ummary": "Getting ExperimentRuns linked to a commit",
        "operationId": "ExperimentRunService_ListCommitExperimentRuns2",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbListCommitExperimentRunsRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/epository_id.repo_id",
            "/n": "path",
            "/equired": true,
            "/ype": "string",
            "format": "uint64"
          },
          {
            "name": "commit_sha",
            "/n": "path",
            "/equired": true,
            "/ype": "string"
          },
          {
            "name": "/epository_id.named_id.name",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "/epository_id.named_id.workspace_name",
            "/n": "query",
            "/equired": false,
            "/ype": "string"
          },
          {
            "name": "pagination.page_number",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "pagination.page_limit",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/versioning/workspaces/{repository_id.named_id.workspace_name}/repositories/{repository_id.named_id.name}/commits/{commit_sha}/path/runs": {
      "/et": {
        "/ummary": "Getting ExperimentRuns linked to a blob",
        "operationId": "ExperimentRunService_ListBlobExperimentRuns",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbListBlobExperimentRunsRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/epository_id.named_id.workspace_name",
            "/n": "path",
            "/equired": true,
            "/ype": "string"
          },
          {
            "name": "/epository_id.named_id.name",
            "/n": "path",
            "/equired": true,
            "/ype": "string"
          },
          {
            "name": "commit_sha",
            "/n": "path",
            "/equired": true,
            "/ype": "string"
          },
          {
            "name": "/epository_id.repo_id",
            "/n": "query",
            "/equired": false,
            "/ype": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.page_number",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "pagination.page_limit",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "location",
            "/n": "query",
            "/equired": false,
            "/ype": "array",
            "/tems": {
              "/ype": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    },
    "/v1/versioning/workspaces/{repository_id.named_id.workspace_name}/repositories/{repository_id.named_id.name}/commits/{commit_sha}/runs": {
      "/et": {
        "/ummary": "Getting ExperimentRuns linked to a commit",
        "operationId": "ExperimentRunService_ListCommitExperimentRuns",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/modeldbListCommitExperimentRunsRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "/epository_id.named_id.workspace_name",
            "/n": "path",
            "/equired": true,
            "/ype": "string"
          },
          {
            "name": "/epository_id.named_id.name",
            "/n": "path",
            "/equired": true,
            "/ype": "string"
          },
          {
            "name": "commit_sha",
            "/n": "path",
            "/equired": true,
            "/ype": "string"
          },
          {
            "name": "/epository_id.repo_id",
            "/n": "query",
            "/equired": false,
            "/ype": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.page_number",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          },
          {
            "name": "pagination.page_limit",
            "/n": "query",
            "/equired": false,
            "/ype": "integer",
            "format": "/nt32"
          }
        ],
        "/ags": [
          "ExperimentRunService"
        ]
      }
    }
  },
  "definitions": {
    "ArtifactTypeEnumArtifactType": {
      "/ype": "string",
      "/num": [
        "IMAGE",
        "MODEL",
        "TENSORBOARD",
        "DATA",
        "BLOB",
        "STRING",
        "CODE",
        "CONTAINER"
      ],
      "default": "IMAGE"
    },
    "OperatorEnumOperator": {
      "/ype": "string",
      "/num": [
        "EQ",
        "NE",
        "GT",
        "GTE",
        "LT",
        "LTE",
        "CONTAIN",
        "NOT_CONTAIN",
        "IN",
        "NOT_IN"
      ],
      "default": "EQ"
    },
    "TernaryEnumTernary": {
      "/ype": "string",
      "/num": [
        "UNKNOWN",
        "TRUE",
        "FALSE"
      ],
      "default": "UNKNOWN"
    },
    "ValueTypeEnumValueType": {
      "/ype": "string",
      "/num": [
        "STRING",
        "NUMBER",
        "LIST",
        "BLOB"
      ],
      "default": "STRING"
    },
    "commonArtifact": {
      "/ype": "object",
      "properties": {
        "key": {
          "/ype": "string"
        },
        "path": {
          "/ype": "string"
        },
        "path_only": {
          "/ype": "boolean",
          "format": "boolean"
        },
        "artifact_type": {
          "$ref": "#/definitions/ArtifactTypeEnumArtifactType"
        },
        "linked_artifact_id": {
          "/ype": "string"
        },
        "filename_extension": {
          "/ype": "string"
        },
        "/erialization": {
          "/ype": "string"
        },
        "artifact_subtype": {
          "/ype": "string"
        },
        "upload_completed": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "commonArtifactPart": {
      "/ype": "object",
      "properties": {
        "part_number": {
          "/ype": "string",
          "format": "uint64"
        },
        "/tag": {
          "/ype": "string"
        }
      }
    },
    "commonCodeVersion": {
      "/ype": "object",
      "properties": {
        "/it_snapshot": {
          "$ref": "#/definitions/commonGitSnapshot"
        },
        "code_archive": {
          "$ref": "#/definitions/commonArtifact"
        },
        "date_logged": {
          "/ype": "string",
          "format": "uint64"
        }
      },
      "/itle": "code version"
    },
    "commonGitSnapshot": {
      "/ype": "object",
      "properties": {
        "filepaths": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "/epo": {
          "/ype": "string"
        },
        "hash": {
          "/ype": "string"
        },
        "/s_dirty": {
          "$ref": "#/definitions/TernaryEnumTernary"
        }
      }
    },
    "commonGroupId": {
      "/ype": "object",
      "properties": {
        "org_id": {
          "/ype": "string"
        },
        "/roup_id": {
          "/ype": "string"
        }
      }
    },
    "commonKeyValue": {
      "/ype": "object",
      "properties": {
        "key": {
          "/ype": "string"
        },
        "/alue": {
          "/ype": "object"
        },
        "/alue_type": {
          "$ref": "#/definitions/ValueTypeEnumValueType",
          "description": "As per documentation of proto buffer 3.\n  For enums, the default value is the first defined enum value, which must be 0."
        }
      }
    },
    "commonKeyValueQuery": {
      "/ype": "object",
      "properties": {
        "key": {
          "/ype": "string"
        },
        "/alue": {
          "/ype": "object"
        },
        "/alue_type": {
          "$ref": "#/definitions/ValueTypeEnumValueType"
        },
        "operator": {
          "$ref": "#/definitions/OperatorEnumOperator"
        }
      }
    },
    "commonPagination": {
      "/ype": "object",
      "properties": {
        "page_number": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "page_limit": {
          "/ype": "integer",
          "format": "/nt32"
        }
      },
      "/itle": "For pagination"
    },
    "modeldbAddExperimentRunAttributes": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      },
      "/itle": "attributes"
    },
    "modeldbAddExperimentRunAttributesResponse": {
      "/ype": "object"
    },
    "modeldbAddExperimentRunTag": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/ag": {
          "/ype": "string"
        }
      },
      "/itle": "tag"
    },
    "modeldbAddExperimentRunTagResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbAddExperimentRunTags": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        }
      },
      "/itle": "tags"
    },
    "modeldbAddExperimentRunTagsResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbCloneExperimentRun": {
      "/ype": "object",
      "properties": {
        "/rc_experiment_run_id": {
          "/ype": "string"
        },
        "dest_experiment_run_name": {
          "/ype": "string"
        },
        "dest_experiment_id": {
          "/ype": "string"
        }
      }
    },
    "modeldbCloneExperimentRunResponse": {
      "/ype": "object",
      "properties": {
        "/un": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbCommitArtifactPart": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "key": {
          "/ype": "string"
        },
        "artifact_part": {
          "$ref": "#/definitions/commonArtifactPart"
        }
      }
    },
    "modeldbCommitArtifactPartResponse": {
      "/ype": "object"
    },
    "modeldbCommitMultipartArtifact": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "key": {
          "/ype": "string"
        }
      }
    },
    "modeldbCommitMultipartArtifactResponse": {
      "/ype": "object"
    },
    "modeldbCreateExperimentRun": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "project_id": {
          "/ype": "string"
        },
        "/xperiment_id": {
          "/ype": "string"
        },
        "name": {
          "/ype": "string"
        },
        "description": {
          "/ype": "string"
        },
        "date_created": {
          "/ype": "string",
          "format": "/nt64"
        },
        "date_updated": {
          "/ype": "string",
          "format": "/nt64"
        },
        "/tart_time": {
          "/ype": "string",
          "format": "/nt64"
        },
        "/nd_time": {
          "/ype": "string",
          "format": "/nt64"
        },
        "code_version": {
          "/ype": "string"
        },
        "code_version_snapshot": {
          "$ref": "#/definitions/commonCodeVersion"
        },
        "parent_id": {
          "/ype": "string"
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "hyperparameters": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "artifacts": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "datasets": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "metrics": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "observations": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbObservation"
          }
        },
        "features": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbFeature"
          }
        },
        "/ersioned_inputs": {
          "$ref": "#/definitions/modeldbVersioningEntry"
        }
      }
    },
    "modeldbCreateExperimentRunResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbDeleteArtifact": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "key": {
          "/ype": "string"
        }
      }
    },
    "modeldbDeleteArtifactResponse": {
      "/ype": "object"
    },
    "modeldbDeleteExperimentRun": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        }
      }
    },
    "modeldbDeleteExperimentRunAttributes": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "attribute_keys": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "delete_all": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbDeleteExperimentRunAttributesResponse": {
      "/ype": "object"
    },
    "modeldbDeleteExperimentRunResponse": {
      "/ype": "object",
      "properties": {
        "/tatus": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbDeleteExperimentRunTag": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/ag": {
          "/ype": "string"
        }
      }
    },
    "modeldbDeleteExperimentRunTagResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbDeleteExperimentRunTags": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "delete_all": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbDeleteExperimentRunTagsResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbDeleteExperimentRuns": {
      "/ype": "object",
      "properties": {
        "/ds": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        }
      }
    },
    "modeldbDeleteExperimentRunsResponse": {
      "/ype": "object",
      "properties": {
        "/tatus": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbDeleteHyperparameters": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "hyperparameter_keys": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          },
          "/itle": "delete HyperParameters corresponding to the keys"
        },
        "delete_all": {
          "/ype": "boolean",
          "format": "boolean",
          "/itle": "if true delete all hyper parameters corresponding to the run, ignoring hyperparameter_keys"
        }
      }
    },
    "modeldbDeleteHyperparametersResponse": {
      "/ype": "object"
    },
    "modeldbDeleteMetrics": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "metric_keys": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          },
          "/itle": "delete metrics corresponding to the keys"
        },
        "delete_all": {
          "/ype": "boolean",
          "format": "boolean",
          "/itle": "if true delete all metrics corresponding to the run, ignoring metric_keys"
        }
      }
    },
    "modeldbDeleteMetricsResponse": {
      "/ype": "object"
    },
    "modeldbDeleteObservations": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "observation_keys": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          },
          "/itle": "delete all observations corresponding to the keys"
        },
        "delete_all": {
          "/ype": "boolean",
          "format": "boolean",
          "/itle": "if true delete all observations corresponding to the run, ignoring observation_keys"
        }
      }
    },
    "modeldbDeleteObservationsResponse": {
      "/ype": "object"
    },
    "modeldbExperimentRun": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "project_id": {
          "/ype": "string"
        },
        "/xperiment_id": {
          "/ype": "string"
        },
        "name": {
          "/ype": "string"
        },
        "description": {
          "/ype": "string"
        },
        "date_created": {
          "/ype": "string",
          "format": "/nt64"
        },
        "date_updated": {
          "/ype": "string",
          "format": "/nt64"
        },
        "/tart_time": {
          "/ype": "string",
          "format": "/nt64"
        },
        "/nd_time": {
          "/ype": "string",
          "format": "/nt64"
        },
        "code_version": {
          "/ype": "string"
        },
        "code_version_snapshot": {
          "$ref": "#/definitions/commonCodeVersion"
        },
        "parent_id": {
          "/ype": "string"
        },
        "/nvironment": {
          "$ref": "#/definitions/versioningEnvironmentBlob",
          "/itle": "Requirement"
        },
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "hyperparameters": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "artifacts": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "datasets": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "metrics": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "observations": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbObservation"
          }
        },
        "features": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbFeature"
          }
        },
        "job_id": {
          "/ype": "string"
        },
        "owner": {
          "/ype": "string"
        },
        "owner_id": {
          "/ype": "string",
          "format": "uint64"
        },
        "/roup_owner_id": {
          "$ref": "#/definitions/commonGroupId"
        },
        "/ersioned_inputs": {
          "$ref": "#/definitions/modeldbVersioningEntry"
        },
        "code_version_from_blob": {
          "/ype": "object",
          "additionalProperties": {
            "$ref": "#/definitions/commonCodeVersion"
          }
        },
        "/ersion_number": {
          "/ype": "string",
          "format": "uint64",
          "/itle": "Doc for version_number https://github.com/VertaAI/docs/pull/53"
        }
      },
      "/itle": "ExperimentRun Entity"
    },
    "modeldbFeature": {
      "/ype": "object",
      "properties": {
        "name": {
          "/ype": "string"
        }
      }
    },
    "modeldbFindExperimentRuns": {
      "/ype": "object",
      "properties": {
        "project_id": {
          "/ype": "string"
        },
        "/xperiment_id": {
          "/ype": "string"
        },
        "/xperiment_run_ids": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "predicates": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValueQuery"
          }
        },
        "/ds_only": {
          "/ype": "boolean",
          "format": "boolean"
        },
        "page_number": {
          "/ype": "integer",
          "format": "/nt32",
          "/itle": "For pagination"
        },
        "page_limit": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "ascending": {
          "/ype": "boolean",
          "format": "boolean"
        },
        "/ort_key": {
          "/ype": "string"
        },
        "workspace_name": {
          "/ype": "string"
        }
      }
    },
    "modeldbFindExperimentRunsResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment_runs": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        },
        "/otal_records": {
          "/ype": "string",
          "format": "/nt64"
        }
      }
    },
    "modeldbGetArtifactsResponse": {
      "/ype": "object",
      "properties": {
        "artifacts": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        }
      }
    },
    "modeldbGetAttributesResponse": {
      "/ype": "object",
      "properties": {
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      }
    },
    "modeldbGetChildrenExperimentRunsResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment_runs": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        },
        "/otal_records": {
          "/ype": "string",
          "format": "/nt64"
        }
      }
    },
    "modeldbGetCommittedArtifactPartsResponse": {
      "/ype": "object",
      "properties": {
        "artifact_parts": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifactPart"
          }
        }
      }
    },
    "modeldbGetDatasetsResponse": {
      "/ype": "object",
      "properties": {
        "datasets": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        }
      }
    },
    "modeldbGetExperimentRunByIdResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbGetExperimentRunByNameResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbGetExperimentRunCodeVersionResponse": {
      "/ype": "object",
      "properties": {
        "code_version": {
          "$ref": "#/definitions/commonCodeVersion"
        }
      }
    },
    "modeldbGetExperimentRunsByDatasetVersionIdResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment_runs": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        },
        "/otal_records": {
          "/ype": "string",
          "format": "uint64"
        }
      }
    },
    "modeldbGetExperimentRunsInExperimentResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment_runs": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        },
        "/otal_records": {
          "/ype": "string",
          "format": "/nt64"
        }
      }
    },
    "modeldbGetExperimentRunsInProjectResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment_runs": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        },
        "/otal_records": {
          "/ype": "string",
          "format": "/nt64"
        }
      }
    },
    "modeldbGetHyperparametersResponse": {
      "/ype": "object",
      "properties": {
        "hyperparameters": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      }
    },
    "modeldbGetJobIdResponse": {
      "/ype": "object",
      "properties": {
        "job_id": {
          "/ype": "string"
        }
      }
    },
    "modeldbGetMetricsResponse": {
      "/ype": "object",
      "properties": {
        "metrics": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      }
    },
    "modeldbGetObservationsResponse": {
      "/ype": "object",
      "properties": {
        "observations": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbObservation"
          }
        }
      }
    },
    "modeldbGetTagsResponse": {
      "/ype": "object",
      "properties": {
        "/ags": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        }
      }
    },
    "modeldbGetUrlForArtifact": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "key": {
          "/ype": "string"
        },
        "method": {
          "/ype": "string"
        },
        "artifact_type": {
          "$ref": "#/definitions/ArtifactTypeEnumArtifactType"
        },
        "part_number": {
          "/ype": "string",
          "format": "uint64"
        }
      }
    },
    "modeldbGetUrlForArtifactResponse": {
      "/ype": "object",
      "properties": {
        "url": {
          "/ype": "string"
        },
        "fields": {
          "/ype": "object",
          "additionalProperties": {
            "/ype": "string"
          }
        },
        "multipart_upload_ok": {
          "/ype": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbGetVersionedInputResponse": {
      "/ype": "object",
      "properties": {
        "/ersioned_inputs": {
          "$ref": "#/definitions/modeldbVersioningEntry"
        }
      }
    },
    "modeldbListBlobExperimentRunsRequestResponse": {
      "/ype": "object",
      "properties": {
        "/uns": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        },
        "/otal_records": {
          "/ype": "string",
          "format": "/nt64"
        }
      }
    },
    "modeldbListCommitExperimentRunsRequestResponse": {
      "/ype": "object",
      "properties": {
        "/uns": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        },
        "/otal_records": {
          "/ype": "string",
          "format": "/nt64"
        }
      }
    },
    "modeldbLogArtifact": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "artifact": {
          "$ref": "#/definitions/commonArtifact"
        }
      },
      "/itle": "artifact"
    },
    "modeldbLogArtifactResponse": {
      "/ype": "object"
    },
    "modeldbLogArtifacts": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "artifacts": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        }
      },
      "/itle": "artifacts"
    },
    "modeldbLogArtifactsResponse": {
      "/ype": "object"
    },
    "modeldbLogAttribute": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "attribute": {
          "$ref": "#/definitions/commonKeyValue"
        }
      },
      "/itle": "attribute"
    },
    "modeldbLogAttributeResponse": {
      "/ype": "object"
    },
    "modeldbLogAttributes": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "attributes": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      },
      "/itle": "attributes"
    },
    "modeldbLogAttributesResponse": {
      "/ype": "object"
    },
    "modeldbLogDataset": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "dataset": {
          "$ref": "#/definitions/commonArtifact"
        },
        "overwrite": {
          "/ype": "boolean",
          "format": "boolean"
        }
      },
      "/itle": "dataset"
    },
    "modeldbLogDatasetResponse": {
      "/ype": "object"
    },
    "modeldbLogDatasets": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "datasets": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "overwrite": {
          "/ype": "boolean",
          "format": "boolean"
        }
      },
      "/itle": "datasets"
    },
    "modeldbLogDatasetsResponse": {
      "/ype": "object"
    },
    "modeldbLogEnvironment": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/nvironment": {
          "$ref": "#/definitions/versioningEnvironmentBlob"
        }
      }
    },
    "modeldbLogEnvironmentResponse": {
      "/ype": "object"
    },
    "modeldbLogExperimentRunCodeVersion": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "code_version": {
          "$ref": "#/definitions/commonCodeVersion"
        },
        "overwrite": {
          "/ype": "boolean",
          "format": "boolean"
        }
      },
      "/itle": "code version"
    },
    "modeldbLogExperimentRunCodeVersionResponse": {
      "/ype": "object"
    },
    "modeldbLogHyperparameter": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "hyperparameter": {
          "$ref": "#/definitions/commonKeyValue"
        }
      },
      "/itle": "hyperparameter"
    },
    "modeldbLogHyperparameterResponse": {
      "/ype": "object"
    },
    "modeldbLogHyperparameters": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "hyperparameters": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      },
      "/itle": "hyperparameters"
    },
    "modeldbLogHyperparametersResponse": {
      "/ype": "object"
    },
    "modeldbLogJobIdResponse": {
      "/ype": "object"
    },
    "modeldbLogMetric": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "metric": {
          "$ref": "#/definitions/commonKeyValue"
        }
      },
      "/itle": "metric"
    },
    "modeldbLogMetricResponse": {
      "/ype": "object"
    },
    "modeldbLogMetrics": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "metrics": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      },
      "/itle": "metrics"
    },
    "modeldbLogMetricsResponse": {
      "/ype": "object"
    },
    "modeldbLogObservation": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "observation": {
          "$ref": "#/definitions/modeldbObservation"
        }
      },
      "/itle": "observation"
    },
    "modeldbLogObservationResponse": {
      "/ype": "object"
    },
    "modeldbLogObservations": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "observations": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbObservation"
          }
        }
      },
      "/itle": "observations"
    },
    "modeldbLogObservationsResponse": {
      "/ype": "object"
    },
    "modeldbLogVersionedInput": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "/ersioned_inputs": {
          "$ref": "#/definitions/modeldbVersioningEntry"
        }
      }
    },
    "modeldbLogVersionedInputResponse": {
      "/ype": "object"
    },
    "modeldbObservation": {
      "/ype": "object",
      "properties": {
        "attribute": {
          "$ref": "#/definitions/commonKeyValue"
        },
        "artifact": {
          "$ref": "#/definitions/commonArtifact"
        },
        "/imestamp": {
          "/ype": "string",
          "format": "/nt64"
        },
        "/poch_number": {
          "/ype": "object"
        }
      },
      "/itle": "observations with the same key are not overwritten, the are appended to a list"
    },
    "modeldbSetParentExperimentRunId": {
      "/ype": "object",
      "properties": {
        "/xperiment_run_id": {
          "/ype": "string"
        },
        "parent_id": {
          "/ype": "string"
        }
      }
    },
    "modeldbSetParentExperimentRunIdResponse": {
      "/ype": "object"
    },
    "modeldbSortExperimentRunsResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment_runs": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        },
        "/otal_records": {
          "/ype": "string",
          "format": "/nt64"
        }
      }
    },
    "modeldbTopExperimentRunsSelectorResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment_runs": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        }
      }
    },
    "modeldbUpdateExperimentRunDescription": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "description": {
          "/ype": "string"
        }
      }
    },
    "modeldbUpdateExperimentRunDescriptionResponse": {
      "/ype": "object",
      "properties": {
        "/xperiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbUpdateExperimentRunName": {
      "/ype": "object",
      "properties": {
        "/d": {
          "/ype": "string"
        },
        "name": {
          "/ype": "string"
        }
      }
    },
    "modeldbUpdateExperimentRunNameResponse": {
      "/ype": "object"
    },
    "modeldbVersioningEntry": {
      "/ype": "object",
      "properties": {
        "/epository_id": {
          "/ype": "string",
          "format": "uint64"
        },
        "commit": {
          "/ype": "string"
        },
        "key_location_map": {
          "/ype": "object",
          "additionalProperties": {
            "$ref": "#/definitions/vertamodeldbLocation"
          }
        }
      }
    },
    "protobufAny": {
      "/ype": "object",
      "properties": {
        "/ype_url": {
          "/ype": "string"
        },
        "/alue": {
          "/ype": "string",
          "format": "byte"
        }
      }
    },
    "protobufNullValue": {
      "/ype": "string",
      "/num": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "/untimeError": {
      "/ype": "object",
      "properties": {
        "/rror": {
          "/ype": "string"
        },
        "code": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "message": {
          "/ype": "string"
        },
        "details": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "/ersioningAptEnvironmentBlob": {
      "/ype": "object",
      "properties": {
        "packages": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        }
      }
    },
    "/ersioningDockerEnvironmentBlob": {
      "/ype": "object",
      "properties": {
        "/epository": {
          "/ype": "string"
        },
        "/ag": {
          "/ype": "string"
        },
        "/ha": {
          "/ype": "string"
        }
      }
    },
    "/ersioningEnvironmentBlob": {
      "/ype": "object",
      "properties": {
        "python": {
          "$ref": "#/definitions/versioningPythonEnvironmentBlob"
        },
        "docker": {
          "$ref": "#/definitions/versioningDockerEnvironmentBlob"
        },
        "/nvironment_variables": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/versioningEnvironmentVariablesBlob"
          }
        },
        "command_line": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        },
        "apt": {
          "$ref": "#/definitions/versioningAptEnvironmentBlob"
        }
      }
    },
    "/ersioningEnvironmentVariablesBlob": {
      "/ype": "object",
      "properties": {
        "name": {
          "/ype": "string"
        },
        "/alue": {
          "/ype": "string"
        }
      }
    },
    "/ersioningPythonEnvironmentBlob": {
      "/ype": "object",
      "properties": {
        "/ersion": {
          "$ref": "#/definitions/versioningVersionEnvironmentBlob"
        },
        "/equirements": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/versioningPythonRequirementEnvironmentBlob"
          }
        },
        "constraints": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/versioningPythonRequirementEnvironmentBlob"
          }
        },
        "/aw_requirements": {
          "/ype": "string",
          "description": "These fields are only present if the parsed versions above are empty. That is, you cannot have both `requirements` and `raw_requirements` for example."
        },
        "/aw_constraints": {
          "/ype": "string"
        }
      }
    },
    "/ersioningPythonRequirementEnvironmentBlob": {
      "/ype": "object",
      "properties": {
        "library": {
          "/ype": "string"
        },
        "constraint": {
          "/ype": "string"
        },
        "/ersion": {
          "$ref": "#/definitions/versioningVersionEnvironmentBlob"
        }
      }
    },
    "/ersioningRepositoryIdentification": {
      "/ype": "object",
      "properties": {
        "named_id": {
          "$ref": "#/definitions/versioningRepositoryNamedIdentification"
        },
        "/epo_id": {
          "/ype": "string",
          "format": "uint64"
        }
      },
      "/itle": "changed from oneof because of that bug: https://github.com/grpc-ecosystem/grpc-gateway/issues/753"
    },
    "/ersioningRepositoryNamedIdentification": {
      "/ype": "object",
      "properties": {
        "name": {
          "/ype": "string"
        },
        "workspace_name": {
          "/ype": "string"
        }
      },
      "/itle": "CRUD for repositories"
    },
    "/ersioningVersionEnvironmentBlob": {
      "/ype": "object",
      "properties": {
        "major": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "minor": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "patch": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "/uffix": {
          "/ype": "string"
        }
      }
    },
    "/ertamodeldbLocation": {
      "/ype": "object",
      "properties": {
        "location": {
          "/ype": "array",
          "/tems": {
            "/ype": "string"
          }
        }
      }
    }
  },
  "basePath": "/v1"
}
