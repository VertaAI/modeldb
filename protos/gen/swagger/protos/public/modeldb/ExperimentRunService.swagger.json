{
  "swagger": "2.0",
  "info": {
    "title": "modeldb/ExperimentRunService.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/experiment-run/addExperimentRunAttributes": {
      "post": {
        "operationId": "ExperimentRunService_addExperimentRunAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAddExperimentRunAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbAddExperimentRunAttributes"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/addExperimentRunTag": {
      "post": {
        "summary": "tag",
        "operationId": "ExperimentRunService_addExperimentRunTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAddExperimentRunTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbAddExperimentRunTag"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/addExperimentRunTags": {
      "post": {
        "summary": "tags",
        "operationId": "ExperimentRunService_addExperimentRunTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbAddExperimentRunTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbAddExperimentRunTags"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/cloneExperimentRun": {
      "post": {
        "operationId": "ExperimentRunService_cloneExperimentRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbCloneExperimentRunResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbCloneExperimentRun"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/commitArtifactPart": {
      "post": {
        "operationId": "ExperimentRunService_commitArtifactPart",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbCommitArtifactPartResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbCommitArtifactPart"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/commitMultipartArtifact": {
      "post": {
        "operationId": "ExperimentRunService_commitMultipartArtifact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbCommitMultipartArtifactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbCommitMultipartArtifact"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/createExperimentRun": {
      "post": {
        "operationId": "ExperimentRunService_createExperimentRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbCreateExperimentRunResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbCreateExperimentRun"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/deleteArtifact": {
      "delete": {
        "operationId": "ExperimentRunService_deleteArtifact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbDeleteArtifactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbDeleteArtifact"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/deleteExperimentRun": {
      "delete": {
        "operationId": "ExperimentRunService_deleteExperimentRun",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRunResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRun"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/deleteExperimentRunAttributes": {
      "delete": {
        "operationId": "ExperimentRunService_deleteExperimentRunAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRunAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRunAttributes"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/deleteExperimentRunTag": {
      "delete": {
        "operationId": "ExperimentRunService_deleteExperimentRunTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRunTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRunTag"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/deleteExperimentRunTags": {
      "delete": {
        "operationId": "ExperimentRunService_deleteExperimentRunTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRunTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRunTags"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/deleteExperimentRuns": {
      "delete": {
        "operationId": "ExperimentRunService_deleteExperimentRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRunsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbDeleteExperimentRuns"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/deleteHyperparameters": {
      "delete": {
        "operationId": "ExperimentRunService_deleteHyperparameters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbDeleteHyperparametersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbDeleteHyperparameters"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/deleteMetrics": {
      "delete": {
        "operationId": "ExperimentRunService_deleteMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbDeleteMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbDeleteMetrics"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/deleteObservations": {
      "delete": {
        "operationId": "ExperimentRunService_deleteObservations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbDeleteObservationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbDeleteObservations"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/findExperimentRuns": {
      "post": {
        "summary": "queries",
        "operationId": "ExperimentRunService_findExperimentRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbFindExperimentRunsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbFindExperimentRuns"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getArtifacts": {
      "get": {
        "operationId": "ExperimentRunService_getArtifacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getAttributes": {
      "get": {
        "operationId": "ExperimentRunService_getExperimentRunAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attribute_keys",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "get_all",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getChildrenExperimentRuns": {
      "get": {
        "operationId": "ExperimentRunService_getChildrenExperimentRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetChildrenExperimentRunsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "experiment_run_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getCommittedArtifactParts": {
      "get": {
        "operationId": "ExperimentRunService_getCommittedArtifactParts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetCommittedArtifactPartsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getDatasets": {
      "get": {
        "operationId": "ExperimentRunService_getDatasets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetDatasetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getExperimentRunById": {
      "get": {
        "operationId": "ExperimentRunService_getExperimentRunById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetExperimentRunByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getExperimentRunByName": {
      "get": {
        "operationId": "ExperimentRunService_getExperimentRunByName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetExperimentRunByNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "experiment_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getExperimentRunCodeVersion": {
      "get": {
        "operationId": "ExperimentRunService_getExperimentRunCodeVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetExperimentRunCodeVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getExperimentRunTags": {
      "get": {
        "operationId": "ExperimentRunService_getExperimentRunTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getExperimentRunsByDatasetVersionId": {
      "get": {
        "operationId": "ExperimentRunService_getExperimentRunsByDatasetVersionId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetExperimentRunsByDatasetVersionIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "dataset_version_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getExperimentRunsInExperiment": {
      "get": {
        "operationId": "ExperimentRunService_getExperimentRunsInExperiment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetExperimentRunsInExperimentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "experiment_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getExperimentRunsInProject": {
      "get": {
        "summary": "basic queries",
        "operationId": "ExperimentRunService_getExperimentRunsInProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetExperimentRunsInProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getHyperparameters": {
      "get": {
        "operationId": "ExperimentRunService_getHyperparameters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetHyperparametersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getJobId": {
      "get": {
        "operationId": "ExperimentRunService_getJobId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetJobIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getMetrics": {
      "get": {
        "operationId": "ExperimentRunService_getMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getObservations": {
      "get": {
        "operationId": "ExperimentRunService_getObservations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetObservationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "observation_key",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getTopExperimentRuns": {
      "get": {
        "operationId": "ExperimentRunService_getTopExperimentRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbTopExperimentRunsSelectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "experiment_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "experiment_run_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "top_k",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ids_only",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getUrlForArtifact": {
      "post": {
        "operationId": "ExperimentRunService_getUrlForArtifact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetUrlForArtifactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbGetUrlForArtifact"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/getVersionedInput": {
      "get": {
        "operationId": "ExperimentRunService_getVersionedInputs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetVersionedInputResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/logArtifact": {
      "post": {
        "summary": "artifact",
        "operationId": "ExperimentRunService_logArtifact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbLogArtifactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbLogArtifact"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/logArtifacts": {
      "post": {
        "summary": "artifacts",
        "operationId": "ExperimentRunService_logArtifacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbLogArtifactsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbLogArtifacts"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/logAttribute": {
      "post": {
        "summary": "attribute",
        "operationId": "ExperimentRunService_logAttribute",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbLogAttributeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbLogAttribute"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/logAttributes": {
      "post": {
        "summary": "attributes",
        "operationId": "ExperimentRunService_logAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbLogAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbLogAttributes"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/logDataset": {
      "post": {
        "summary": "dataset",
        "operationId": "ExperimentRunService_logDataset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbLogDatasetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbLogDataset"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/logDatasets": {
      "post": {
        "summary": "datasets",
        "operationId": "ExperimentRunService_logDatasets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbLogDatasetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbLogDatasets"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/logExperimentRunCodeVersion": {
      "post": {
        "summary": "code version",
        "operationId": "ExperimentRunService_logExperimentRunCodeVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbLogExperimentRunCodeVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbLogExperimentRunCodeVersion"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/logHyperparameter": {
      "post": {
        "summary": "hyperparameter",
        "operationId": "ExperimentRunService_logHyperparameter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbLogHyperparameterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbLogHyperparameter"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/logHyperparameters": {
      "post": {
        "summary": "hyperparameters",
        "operationId": "ExperimentRunService_logHyperparameters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbLogHyperparametersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbLogHyperparameters"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/logJobId": {
      "get": {
        "summary": "jobs",
        "operationId": "ExperimentRunService_logJobId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbLogJobIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "job_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/logMetric": {
      "post": {
        "summary": "metric",
        "operationId": "ExperimentRunService_logMetric",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbLogMetricResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbLogMetric"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/logMetrics": {
      "post": {
        "summary": "metrics",
        "operationId": "ExperimentRunService_logMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbLogMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbLogMetrics"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/logObservation": {
      "post": {
        "summary": "observation",
        "operationId": "ExperimentRunService_logObservation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbLogObservationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbLogObservation"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/logObservations": {
      "post": {
        "summary": "observations",
        "operationId": "ExperimentRunService_logObservations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbLogObservationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbLogObservations"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/logVersionedInput": {
      "post": {
        "operationId": "ExperimentRunService_logVersionedInput",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbLogVersionedInputResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbLogVersionedInput"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/setParentExperimentRunId": {
      "post": {
        "operationId": "ExperimentRunService_setParentExperimentRunId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbSetParentExperimentRunIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbSetParentExperimentRunId"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/sortExperimentRuns": {
      "get": {
        "operationId": "ExperimentRunService_sortExperimentRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbSortExperimentRunsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "experiment_run_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "ids_only",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/updateExperimentRunDescription": {
      "post": {
        "operationId": "ExperimentRunService_updateExperimentRunDescription",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbUpdateExperimentRunDescriptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbUpdateExperimentRunDescription"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/experiment-run/updateExperimentRunName": {
      "post": {
        "operationId": "ExperimentRunService_updateExperimentRunName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbUpdateExperimentRunNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbUpdateExperimentRunName"
            }
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/versioning/repositories/{repository_id.repo_id}/commits/{commit_sha}/path/runs": {
      "get": {
        "summary": "Getting ExperimentRuns linked to a blob",
        "operationId": "ExperimentRunService_ListBlobExperimentRuns2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbListBlobExperimentRunsRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.repo_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "commit_sha",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/versioning/repositories/{repository_id.repo_id}/commits/{commit_sha}/runs": {
      "get": {
        "summary": "Getting ExperimentRuns linked to a commit",
        "operationId": "ExperimentRunService_ListCommitExperimentRuns2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbListCommitExperimentRunsRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.repo_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "commit_sha",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/versioning/workspaces/{repository_id.named_id.workspace_name}/repositories/{repository_id.named_id.name}/commits/{commit_sha}/path/runs": {
      "get": {
        "summary": "Getting ExperimentRuns linked to a blob",
        "operationId": "ExperimentRunService_ListBlobExperimentRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbListBlobExperimentRunsRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "commit_sha",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.repo_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    },
    "/versioning/workspaces/{repository_id.named_id.workspace_name}/repositories/{repository_id.named_id.name}/commits/{commit_sha}/runs": {
      "get": {
        "summary": "Getting ExperimentRuns linked to a commit",
        "operationId": "ExperimentRunService_ListCommitExperimentRuns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbListCommitExperimentRunsRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "commit_sha",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.repo_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ExperimentRunService"
        ]
      }
    }
  },
  "definitions": {
    "ArtifactTypeEnumArtifactType": {
      "type": "string",
      "enum": [
        "IMAGE",
        "MODEL",
        "TENSORBOARD",
        "DATA",
        "BLOB",
        "STRING",
        "CODE",
        "CONTAINER"
      ],
      "default": "IMAGE"
    },
    "OperatorEnumOperator": {
      "type": "string",
      "enum": [
        "EQ",
        "NE",
        "GT",
        "GTE",
        "LT",
        "LTE",
        "CONTAIN",
        "NOT_CONTAIN",
        "IN"
      ],
      "default": "EQ"
    },
    "TernaryEnumTernary": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "TRUE",
        "FALSE"
      ],
      "default": "UNKNOWN"
    },
    "ValueTypeEnumValueType": {
      "type": "string",
      "enum": [
        "STRING",
        "NUMBER",
        "LIST",
        "BLOB"
      ],
      "default": "STRING"
    },
    "commonArtifact": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "path_only": {
          "type": "boolean",
          "format": "boolean"
        },
        "artifact_type": {
          "$ref": "#/definitions/ArtifactTypeEnumArtifactType"
        },
        "linked_artifact_id": {
          "type": "string"
        },
        "filename_extension": {
          "type": "string"
        }
      }
    },
    "commonArtifactPart": {
      "type": "object",
      "properties": {
        "part_number": {
          "type": "string",
          "format": "uint64"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "commonKeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "object"
        },
        "value_type": {
          "$ref": "#/definitions/ValueTypeEnumValueType",
          "description": "As per documentation of proto buffer 3.\n  For enums, the default value is the first defined enum value, which must be 0."
        }
      }
    },
    "commonKeyValueQuery": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "object"
        },
        "value_type": {
          "$ref": "#/definitions/ValueTypeEnumValueType"
        },
        "operator": {
          "$ref": "#/definitions/OperatorEnumOperator"
        }
      }
    },
    "modeldbAddExperimentRunAttributes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      },
      "title": "attributes"
    },
    "modeldbAddExperimentRunAttributesResponse": {
      "type": "object"
    },
    "modeldbAddExperimentRunTag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      },
      "title": "tag"
    },
    "modeldbAddExperimentRunTagResponse": {
      "type": "object",
      "properties": {
        "experiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbAddExperimentRunTags": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "tags"
    },
    "modeldbAddExperimentRunTagsResponse": {
      "type": "object",
      "properties": {
        "experiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbCloneExperimentRun": {
      "type": "object",
      "properties": {
        "src_experiment_run_id": {
          "type": "string"
        },
        "dest_experiment_run_name": {
          "type": "string"
        },
        "dest_experiment_id": {
          "type": "string"
        }
      }
    },
    "modeldbCloneExperimentRunResponse": {
      "type": "object",
      "properties": {
        "run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbCodeVersion": {
      "type": "object",
      "properties": {
        "git_snapshot": {
          "$ref": "#/definitions/modeldbGitSnapshot"
        },
        "code_archive": {
          "$ref": "#/definitions/commonArtifact"
        },
        "date_logged": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "code version"
    },
    "modeldbCommitArtifactPart": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "artifact_part": {
          "$ref": "#/definitions/commonArtifactPart"
        }
      }
    },
    "modeldbCommitArtifactPartResponse": {
      "type": "object"
    },
    "modeldbCommitMultipartArtifact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "modeldbCommitMultipartArtifactResponse": {
      "type": "object"
    },
    "modeldbCreateExperimentRun": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "project_id": {
          "type": "string"
        },
        "experiment_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "date_created": {
          "type": "string",
          "format": "int64"
        },
        "date_updated": {
          "type": "string",
          "format": "int64"
        },
        "start_time": {
          "type": "string",
          "format": "int64"
        },
        "end_time": {
          "type": "string",
          "format": "int64"
        },
        "code_version": {
          "type": "string"
        },
        "code_version_snapshot": {
          "$ref": "#/definitions/modeldbCodeVersion"
        },
        "parent_id": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "hyperparameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "datasets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "observations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbObservation"
          }
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbFeature"
          }
        },
        "versioned_inputs": {
          "$ref": "#/definitions/modeldbVersioningEntry"
        }
      }
    },
    "modeldbCreateExperimentRunResponse": {
      "type": "object",
      "properties": {
        "experiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbDeleteArtifact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "modeldbDeleteArtifactResponse": {
      "type": "object"
    },
    "modeldbDeleteExperimentRun": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "modeldbDeleteExperimentRunAttributes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "attribute_keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "delete_all": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbDeleteExperimentRunAttributesResponse": {
      "type": "object"
    },
    "modeldbDeleteExperimentRunResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbDeleteExperimentRunTag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "modeldbDeleteExperimentRunTagResponse": {
      "type": "object",
      "properties": {
        "experiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbDeleteExperimentRunTags": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "delete_all": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbDeleteExperimentRunTagsResponse": {
      "type": "object",
      "properties": {
        "experiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbDeleteExperimentRuns": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "modeldbDeleteExperimentRunsResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbDeleteHyperparameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "hyperparameter_keys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "delete HyperParameters corresponding to the keys"
        },
        "delete_all": {
          "type": "boolean",
          "format": "boolean",
          "title": "if true delete all hyper parameters corresponding to the run, ignoring hyperparameter_keys"
        }
      }
    },
    "modeldbDeleteHyperparametersResponse": {
      "type": "object"
    },
    "modeldbDeleteMetrics": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "metric_keys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "delete metrics corresponding to the keys"
        },
        "delete_all": {
          "type": "boolean",
          "format": "boolean",
          "title": "if true delete all metrics corresponding to the run, ignoring metric_keys"
        }
      }
    },
    "modeldbDeleteMetricsResponse": {
      "type": "object"
    },
    "modeldbDeleteObservations": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "observation_keys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "delete all observations corresponding to the keys"
        },
        "delete_all": {
          "type": "boolean",
          "format": "boolean",
          "title": "if true delete all observations corresponding to the run, ignoring observation_keys"
        }
      }
    },
    "modeldbDeleteObservationsResponse": {
      "type": "object"
    },
    "modeldbExperimentRun": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "project_id": {
          "type": "string"
        },
        "experiment_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "date_created": {
          "type": "string",
          "format": "int64"
        },
        "date_updated": {
          "type": "string",
          "format": "int64"
        },
        "start_time": {
          "type": "string",
          "format": "int64"
        },
        "end_time": {
          "type": "string",
          "format": "int64"
        },
        "code_version": {
          "type": "string"
        },
        "code_version_snapshot": {
          "$ref": "#/definitions/modeldbCodeVersion"
        },
        "parent_id": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "hyperparameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "datasets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "observations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbObservation"
          }
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbFeature"
          }
        },
        "job_id": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "versioned_inputs": {
          "$ref": "#/definitions/modeldbVersioningEntry"
        },
        "code_version_from_blob": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/modeldbCodeVersion"
          }
        }
      },
      "title": "ExperimentRun Entity"
    },
    "modeldbFeature": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "modeldbFindExperimentRuns": {
      "type": "object",
      "properties": {
        "project_id": {
          "type": "string"
        },
        "experiment_id": {
          "type": "string"
        },
        "experiment_run_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "predicates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValueQuery"
          }
        },
        "ids_only": {
          "type": "boolean",
          "format": "boolean"
        },
        "page_number": {
          "type": "integer",
          "format": "int32",
          "title": "For pagination"
        },
        "page_limit": {
          "type": "integer",
          "format": "int32"
        },
        "ascending": {
          "type": "boolean",
          "format": "boolean"
        },
        "sort_key": {
          "type": "string"
        },
        "workspace_name": {
          "type": "string"
        }
      }
    },
    "modeldbFindExperimentRunsResponse": {
      "type": "object",
      "properties": {
        "experiment_runs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modeldbGetArtifactsResponse": {
      "type": "object",
      "properties": {
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonArtifact"
          }
        }
      }
    },
    "modeldbGetAttributesResponse": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      }
    },
    "modeldbGetChildrenExperimentRunsResponse": {
      "type": "object",
      "properties": {
        "experiment_runs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modeldbGetCommittedArtifactPartsResponse": {
      "type": "object",
      "properties": {
        "artifact_parts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonArtifactPart"
          }
        }
      }
    },
    "modeldbGetDatasetsResponse": {
      "type": "object",
      "properties": {
        "datasets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonArtifact"
          }
        }
      }
    },
    "modeldbGetExperimentRunByIdResponse": {
      "type": "object",
      "properties": {
        "experiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbGetExperimentRunByNameResponse": {
      "type": "object",
      "properties": {
        "experiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbGetExperimentRunCodeVersionResponse": {
      "type": "object",
      "properties": {
        "code_version": {
          "$ref": "#/definitions/modeldbCodeVersion"
        }
      }
    },
    "modeldbGetExperimentRunsByDatasetVersionIdResponse": {
      "type": "object",
      "properties": {
        "experiment_runs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        },
        "total_records": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "modeldbGetExperimentRunsInExperimentResponse": {
      "type": "object",
      "properties": {
        "experiment_runs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modeldbGetExperimentRunsInProjectResponse": {
      "type": "object",
      "properties": {
        "experiment_runs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modeldbGetHyperparametersResponse": {
      "type": "object",
      "properties": {
        "hyperparameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      }
    },
    "modeldbGetJobIdResponse": {
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string"
        }
      }
    },
    "modeldbGetMetricsResponse": {
      "type": "object",
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      }
    },
    "modeldbGetObservationsResponse": {
      "type": "object",
      "properties": {
        "observations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbObservation"
          }
        }
      }
    },
    "modeldbGetTagsResponse": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "modeldbGetUrlForArtifact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "artifact_type": {
          "$ref": "#/definitions/ArtifactTypeEnumArtifactType"
        },
        "part_number": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "modeldbGetUrlForArtifactResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "fields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "multipart_upload_ok": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbGetVersionedInputResponse": {
      "type": "object",
      "properties": {
        "versioned_inputs": {
          "$ref": "#/definitions/modeldbVersioningEntry"
        }
      }
    },
    "modeldbGitSnapshot": {
      "type": "object",
      "properties": {
        "filepaths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "repo": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        },
        "is_dirty": {
          "$ref": "#/definitions/TernaryEnumTernary"
        }
      }
    },
    "modeldbListBlobExperimentRunsRequestResponse": {
      "type": "object",
      "properties": {
        "runs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modeldbListCommitExperimentRunsRequestResponse": {
      "type": "object",
      "properties": {
        "runs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modeldbLogArtifact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "artifact": {
          "$ref": "#/definitions/commonArtifact"
        }
      },
      "title": "artifact"
    },
    "modeldbLogArtifactResponse": {
      "type": "object"
    },
    "modeldbLogArtifacts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonArtifact"
          }
        }
      },
      "title": "artifacts"
    },
    "modeldbLogArtifactsResponse": {
      "type": "object"
    },
    "modeldbLogAttribute": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "attribute": {
          "$ref": "#/definitions/commonKeyValue"
        }
      },
      "title": "attribute"
    },
    "modeldbLogAttributeResponse": {
      "type": "object"
    },
    "modeldbLogAttributes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      },
      "title": "attributes"
    },
    "modeldbLogAttributesResponse": {
      "type": "object"
    },
    "modeldbLogDataset": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "dataset": {
          "$ref": "#/definitions/commonArtifact"
        },
        "overwrite": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "dataset"
    },
    "modeldbLogDatasetResponse": {
      "type": "object"
    },
    "modeldbLogDatasets": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "datasets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonArtifact"
          }
        },
        "overwrite": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "datasets"
    },
    "modeldbLogDatasetsResponse": {
      "type": "object"
    },
    "modeldbLogExperimentRunCodeVersion": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "code_version": {
          "$ref": "#/definitions/modeldbCodeVersion"
        },
        "overwrite": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "code version"
    },
    "modeldbLogExperimentRunCodeVersionResponse": {
      "type": "object"
    },
    "modeldbLogHyperparameter": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "hyperparameter": {
          "$ref": "#/definitions/commonKeyValue"
        }
      },
      "title": "hyperparameter"
    },
    "modeldbLogHyperparameterResponse": {
      "type": "object"
    },
    "modeldbLogHyperparameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "hyperparameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      },
      "title": "hyperparameters"
    },
    "modeldbLogHyperparametersResponse": {
      "type": "object"
    },
    "modeldbLogJobIdResponse": {
      "type": "object"
    },
    "modeldbLogMetric": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "metric": {
          "$ref": "#/definitions/commonKeyValue"
        }
      },
      "title": "metric"
    },
    "modeldbLogMetricResponse": {
      "type": "object"
    },
    "modeldbLogMetrics": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        }
      },
      "title": "metrics"
    },
    "modeldbLogMetricsResponse": {
      "type": "object"
    },
    "modeldbLogObservation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "observation": {
          "$ref": "#/definitions/modeldbObservation"
        }
      },
      "title": "observation"
    },
    "modeldbLogObservationResponse": {
      "type": "object"
    },
    "modeldbLogObservations": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "observations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbObservation"
          }
        }
      },
      "title": "observations"
    },
    "modeldbLogObservationsResponse": {
      "type": "object"
    },
    "modeldbLogVersionedInput": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "versioned_inputs": {
          "$ref": "#/definitions/modeldbVersioningEntry"
        }
      }
    },
    "modeldbLogVersionedInputResponse": {
      "type": "object"
    },
    "modeldbObservation": {
      "type": "object",
      "properties": {
        "attribute": {
          "$ref": "#/definitions/commonKeyValue"
        },
        "artifact": {
          "$ref": "#/definitions/commonArtifact"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        },
        "epoch_number": {
          "type": "object"
        }
      },
      "title": "observations with the same key are not overwritten, the are appended to a list"
    },
    "modeldbSetParentExperimentRunId": {
      "type": "object",
      "properties": {
        "experiment_run_id": {
          "type": "string"
        },
        "parent_id": {
          "type": "string"
        }
      }
    },
    "modeldbSetParentExperimentRunIdResponse": {
      "type": "object"
    },
    "modeldbSortExperimentRunsResponse": {
      "type": "object",
      "properties": {
        "experiment_runs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "modeldbTopExperimentRunsSelectorResponse": {
      "type": "object",
      "properties": {
        "experiment_runs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modeldbExperimentRun"
          }
        }
      }
    },
    "modeldbUpdateExperimentRunDescription": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "modeldbUpdateExperimentRunDescriptionResponse": {
      "type": "object",
      "properties": {
        "experiment_run": {
          "$ref": "#/definitions/modeldbExperimentRun"
        }
      }
    },
    "modeldbUpdateExperimentRunName": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "modeldbUpdateExperimentRunNameResponse": {
      "type": "object"
    },
    "modeldbVersioningEntry": {
      "type": "object",
      "properties": {
        "repository_id": {
          "type": "string",
          "format": "uint64"
        },
        "commit": {
          "type": "string"
        },
        "key_location_map": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/vertamodeldbLocation"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "versioningRepositoryIdentification": {
      "type": "object",
      "properties": {
        "named_id": {
          "$ref": "#/definitions/versioningRepositoryNamedIdentification"
        },
        "repo_id": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "changed from oneof because of that bug: https://github.com/grpc-ecosystem/grpc-gateway/issues/753"
    },
    "versioningRepositoryNamedIdentification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "workspace_name": {
          "type": "string"
        }
      },
      "title": "CRUD for repositories"
    },
    "vertacommonPagination": {
      "type": "object",
      "properties": {
        "page_number": {
          "type": "integer",
          "format": "int32"
        },
        "page_limit": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "For pagination"
    },
    "vertamodeldbLocation": {
      "type": "object",
      "properties": {
        "location": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "basePath": "/v1"
}
