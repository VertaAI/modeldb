{
  "swagger": "2.0",
  "info": {
    "title": "protos/public/modeldb/Job.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/job/createJob": {
      "post": {
        "operationId": "createJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbCreateJobResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/modeldbCreateJob"
            }
          }
        ],
        "tags": [
          "JobService"
        ]
      }
    },
    "/job/deleteJob": {
      "get": {
        "operationId": "deleteJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbDeleteJobResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "JobService"
        ]
      }
    },
    "/job/getJob": {
      "get": {
        "operationId": "getJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbGetJobResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "JobService"
        ]
      }
    },
    "/job/updateJob": {
      "get": {
        "operationId": "updateJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/modeldbUpdateJobResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "job_status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NOT_STARTED",
              "IN_PROGRESS",
              "COMPLETED"
            ],
            "default": "NOT_STARTED"
          }
        ],
        "tags": [
          "JobService"
        ]
      }
    }
  },
  "definitions": {
    "JobStatusEnumJobStatus": {
      "type": "string",
      "enum": [
        "NOT_STARTED",
        "IN_PROGRESS",
        "COMPLETED"
      ],
      "default": "NOT_STARTED"
    },
    "JobTypeEnumJobType": {
      "type": "string",
      "enum": [
        "KUBERNETES_JOB"
      ],
      "default": "KUBERNETES_JOB"
    },
    "ValueTypeEnumValueType": {
      "type": "string",
      "enum": [
        "STRING",
        "NUMBER",
        "LIST",
        "BLOB"
      ],
      "default": "STRING"
    },
    "commonKeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/protobufValue"
        },
        "value_type": {
          "$ref": "#/definitions/ValueTypeEnumValueType",
          "description": "As per documentation of proto buffer 3.\n  For enums, the default value is the first defined enum value, which must be 0."
        }
      }
    },
    "modeldbCreateJob": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "start_time": {
          "type": "string"
        },
        "end_time": {
          "type": "string"
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "job_status": {
          "$ref": "#/definitions/JobStatusEnumJobStatus"
        },
        "job_type": {
          "$ref": "#/definitions/JobTypeEnumJobType"
        }
      }
    },
    "modeldbCreateJobResponse": {
      "type": "object",
      "properties": {
        "job": {
          "$ref": "#/definitions/modeldbJob"
        }
      }
    },
    "modeldbDeleteJobResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "modeldbGetJobResponse": {
      "type": "object",
      "properties": {
        "job": {
          "$ref": "#/definitions/modeldbJob"
        }
      }
    },
    "modeldbJob": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "start_time": {
          "type": "string"
        },
        "end_time": {
          "type": "string"
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValue"
          }
        },
        "job_status": {
          "$ref": "#/definitions/JobStatusEnumJobStatus"
        },
        "job_type": {
          "$ref": "#/definitions/JobTypeEnumJobType"
        },
        "owner": {
          "type": "string"
        }
      }
    },
    "modeldbUpdateJobResponse": {
      "type": "object",
      "properties": {
        "job": {
          "$ref": "#/definitions/modeldbJob"
        }
      }
    },
    "protobufListValue": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufValue"
          },
          "description": "Repeated field of dynamically typed values."
        }
      },
      "description": "`ListValue` is a wrapper around a repeated field of values.\n\nThe JSON representation for `ListValue` is JSON array."
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "protobufStruct": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufValue"
          },
          "description": "Unordered map of dynamically typed values."
        }
      },
      "description": "`Struct` represents a structured data value, consisting of fields\nwhich map to dynamically typed values. In some languages, `Struct`\nmight be supported by a native representation. For example, in\nscripting languages like JS a struct is represented as an\nobject. The details of that representation are described together\nwith the proto support for the language.\n\nThe JSON representation for `Struct` is JSON object."
    },
    "protobufValue": {
      "type": "object",
      "properties": {
        "null_value": {
          "$ref": "#/definitions/protobufNullValue",
          "description": "Represents a null value."
        },
        "number_value": {
          "type": "number",
          "format": "double",
          "description": "Represents a double value."
        },
        "string_value": {
          "type": "string",
          "description": "Represents a string value."
        },
        "bool_value": {
          "type": "boolean",
          "format": "boolean",
          "description": "Represents a boolean value."
        },
        "struct_value": {
          "$ref": "#/definitions/protobufStruct",
          "description": "Represents a structured value."
        },
        "list_value": {
          "$ref": "#/definitions/protobufListValue",
          "description": "Represents a repeated `Value`."
        }
      },
      "description": "`Value` represents a dynamically typed value which can be either\nnull, a number, a string, a boolean, a recursive struct value, or a\nlist of values. A producer of value is expected to set one of that\nvariants, absence of any variant indicates an error.\n\nThe JSON representation for `Value` is JSON value."
    }
  },
  "basePath": "/v1"
}
