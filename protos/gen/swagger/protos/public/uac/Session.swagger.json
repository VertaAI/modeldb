{
  "swagger": "2.0",
  "info": {
    "title": "uac/Session.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/session/createSession": {
      "post": {
        "operationId": "SessionService_createSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacSession"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacCreateSessionRequest"
            }
          }
        ],
        "tags": [
          "SessionService"
        ]
      }
    },
    "/session/deleteSession": {
      "delete": {
        "operationId": "SessionService_deleteSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacDeleteSessionRequest"
            }
          }
        ],
        "tags": [
          "SessionService"
        ]
      }
    },
    "/session/findSession": {
      "post": {
        "operationId": "SessionService_findSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacFindSessionRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacFindSessionRequest"
            }
          }
        ],
        "tags": [
          "SessionService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "uacCreateSessionRequest": {
      "type": "object",
      "properties": {
        "verta_user_id": {
          "type": "string"
        },
        "session_name": {
          "type": "string",
          "description": "Session names must be unique. If we create another session with the same name, the original one will be invalidated."
        },
        "ttl_seconds": {
          "type": "string",
          "format": "uint64",
          "description": "Number of seconds to keep this session active from the moment of creation."
        }
      }
    },
    "uacDeleteSessionRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        }
      }
    },
    "uacEmpty": {
      "type": "object"
    },
    "uacFindSessionRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        },
        "verta_user_id": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "uacFindSessionRequestResponse": {
      "type": "object",
      "properties": {
        "sessions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uacSession"
          }
        }
      }
    },
    "uacSession": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "verta_user_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ttl_epoch": {
          "type": "string",
          "format": "uint64",
          "title": "Time after which the session is invalid, in seconds since epoch in GMT"
        },
        "session_secret_key": {
          "type": "string",
          "title": "Equivalent of a developer key"
        }
      }
    }
  },
  "basePath": "/v1"
}
