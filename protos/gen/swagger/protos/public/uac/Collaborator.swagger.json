{
  "swagger": "2.0",
  "info": {
    "title": "protos/public/uac/Collaborator.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/collaborator/addOrUpdateDatasetCollaborator": {
      "post": {
        "operationId": "addOrUpdateDatasetCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequest"
            }
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/addOrUpdateProjectCollaborator": {
      "post": {
        "operationId": "addOrUpdateProjectCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequest"
            }
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/getDatasetCollaborators": {
      "get": {
        "operationId": "getDatasetCollaborators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacGetCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/getProjectCollaborators": {
      "get": {
        "operationId": "getProjectCollaborators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacGetCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/removeDatasetCollaborator": {
      "delete": {
        "operationId": "removeDatasetCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacRemoveCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "share_with",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_deleted",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "authz_entity_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ORGANIZATION",
              "TEAM",
              "USER"
            ],
            "default": "UNKNOWN"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/removeProjectCollaborator": {
      "delete": {
        "operationId": "removeProjectCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacRemoveCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "share_with",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_deleted",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "authz_entity_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ORGANIZATION",
              "TEAM",
              "USER"
            ],
            "default": "UNKNOWN"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    }
  },
  "definitions": {
    "AuthzActionEnumAuthzServiceActions": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ALL",
        "IS_ALLOWED",
        "GET"
      ],
      "default": "UNKNOWN"
    },
    "CollaboratorTypeEnumCollaboratorType": {
      "type": "string",
      "enum": [
        "READ_ONLY",
        "READ_WRITE"
      ],
      "default": "READ_ONLY"
    },
    "EntitiesEnumEntitiesTypes": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ORGANIZATION",
        "TEAM",
        "USER"
      ],
      "default": "UNKNOWN"
    },
    "IdServiceProviderEnumIdServiceProvider": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "GITHUB",
        "BITBUCKET",
        "GOOGLE",
        "VERTA"
      ],
      "default": "UNKNOWN"
    },
    "ModelDBActionEnumModelDBServiceActions": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ALL",
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "DEPLOY",
        "PUBLIC_READ"
      ],
      "default": "UNKNOWN"
    },
    "RoleActionEnumRoleServiceActions": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ALL",
        "GET_BY_ID",
        "GET_BY_NAME",
        "CREATE",
        "UPDATE",
        "LIST",
        "DELETE"
      ],
      "default": "UNKNOWN"
    },
    "ServiceEnumService": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ALL",
        "ROLE_SERVICE",
        "AUTHZ_SERVICE",
        "MODELDB_SERVICE"
      ],
      "default": "UNKNOWN"
    },
    "TernaryEnumTernary": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "TRUE",
        "FALSE"
      ],
      "default": "UNKNOWN"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "uacAction": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/ServiceEnumService"
        },
        "role_service_action": {
          "$ref": "#/definitions/RoleActionEnumRoleServiceActions"
        },
        "authz_service_action": {
          "$ref": "#/definitions/AuthzActionEnumAuthzServiceActions"
        },
        "modeldb_service_action": {
          "$ref": "#/definitions/ModelDBActionEnumModelDBServiceActions"
        }
      },
      "title": "An action describes a specific operation that can be performed on a service"
    },
    "uacAddCollaboratorRequest": {
      "type": "object",
      "properties": {
        "entity_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "share_with": {
          "type": "string"
        },
        "collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "message": {
          "type": "string"
        },
        "date_created": {
          "type": "string",
          "format": "uint64"
        },
        "date_updated": {
          "type": "string",
          "format": "uint64"
        },
        "can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "authz_entity_type": {
          "$ref": "#/definitions/EntitiesEnumEntitiesTypes"
        }
      }
    },
    "uacAddCollaboratorRequestResponse": {
      "type": "object",
      "properties": {
        "self_allowed_actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uacAction"
          }
        },
        "status": {
          "type": "boolean",
          "format": "boolean"
        },
        "collaborator_user_info": {
          "$ref": "#/definitions/uacUserInfo"
        },
        "collaborator_organization": {
          "$ref": "#/definitions/uacOrganization"
        },
        "collaborator_team": {
          "$ref": "#/definitions/uacTeam"
        }
      }
    },
    "uacFlagEnum": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "TRUE",
        "FALSE"
      ],
      "default": "UNDEFINED"
    },
    "uacGetCollaboratorResponse": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "share_via_type": {
          "$ref": "#/definitions/uacShareViaEnum"
        },
        "verta_id": {
          "type": "string"
        },
        "can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "authz_entity_type": {
          "$ref": "#/definitions/EntitiesEnumEntitiesTypes"
        }
      }
    },
    "uacOrganization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "owner_id": {
          "type": "string"
        },
        "created_timestamp": {
          "type": "string",
          "format": "int64"
        },
        "updated_timestamp": {
          "type": "string",
          "format": "int64"
        },
        "global_collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "global_can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        }
      }
    },
    "uacRemoveCollaboratorResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "format": "boolean"
        },
        "self_allowed_actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uacAction"
          }
        }
      }
    },
    "uacShareViaEnum": {
      "type": "string",
      "enum": [
        "USER_ID",
        "EMAIL_ID",
        "USERNAME"
      ],
      "default": "USER_ID"
    },
    "uacTeam": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "org_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "owner_id": {
          "type": "string"
        },
        "created_timestamp": {
          "type": "string",
          "format": "int64"
        },
        "updated_timestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "uacUserInfo": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id_service_provider": {
          "$ref": "#/definitions/IdServiceProviderEnumIdServiceProvider"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "image_url": {
          "type": "string"
        },
        "dev_key": {
          "type": "string"
        },
        "verta_info": {
          "$ref": "#/definitions/uacVertaUserInfo"
        }
      }
    },
    "uacVertaUserInfo": {
      "type": "object",
      "properties": {
        "individual_user": {
          "type": "boolean",
          "format": "boolean"
        },
        "username": {
          "type": "string"
        },
        "refresh_timestamp": {
          "type": "string",
          "format": "uint64"
        },
        "last_login_timestamp": {
          "type": "string",
          "format": "uint64"
        },
        "user_id": {
          "type": "string"
        },
        "publicProfile": {
          "$ref": "#/definitions/uacFlagEnum"
        }
      }
    }
  },
  "basePath": "/v1"
}
