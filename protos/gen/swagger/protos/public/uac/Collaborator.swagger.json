{
  "swagger": "2.0",
  "info": {
    "title": "uac/Collaborator.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/collaborator/addOrUpdateDatasetCollaborator": {
      "post": {
        "operationId": "CollaboratorService_addOrUpdateDatasetCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequest"
            }
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/addOrUpdateEndpointCollaborator": {
      "post": {
        "operationId": "CollaboratorService_addOrUpdateEndpointCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequest"
            }
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/addOrUpdateEndpointCollaboratorCommonService": {
      "post": {
        "operationId": "CollaboratorService_addOrUpdateEndpointCollaboratorCommonService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequest"
            }
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/addOrUpdateMonitoredEntityCollaborator": {
      "post": {
        "operationId": "CollaboratorService_addOrUpdateMonitoredEntityCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequest"
            }
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/addOrUpdateProjectCollaborator": {
      "post": {
        "operationId": "CollaboratorService_addOrUpdateProjectCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequest"
            }
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/addOrUpdateRegisteredModelCollaborator": {
      "post": {
        "operationId": "CollaboratorService_addOrUpdateRegisteredModelCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequest"
            }
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/addOrUpdateRepositoryCollaborator": {
      "post": {
        "operationId": "CollaboratorService_addOrUpdateRepositoryCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacAddCollaboratorRequest"
            }
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/addResourceAdmins": {
      "post": {
        "operationId": "CollaboratorService_addResourceAdmins",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/vertauacEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacModifyResourceAdmins"
            }
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/getDatasetCollaborators": {
      "get": {
        "operationId": "CollaboratorService_getDatasetCollaborators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacGetCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/getEndpointCollaborators": {
      "get": {
        "operationId": "CollaboratorService_getEndpointCollaborators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacGetCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/getEndpointCollaboratorsCommonService": {
      "get": {
        "operationId": "CollaboratorService_getEndpointCollaboratorsCommonService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacGetCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/getMonitoredEntityCollaborators": {
      "get": {
        "operationId": "CollaboratorService_getMonitoredEntityCollaborators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacGetCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/getProjectCollaborators": {
      "get": {
        "operationId": "CollaboratorService_getProjectCollaborators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacGetCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/getRegisteredModelCollaborators": {
      "get": {
        "operationId": "CollaboratorService_getRegisteredModelCollaborators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacGetCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/getRepositoryCollaborators": {
      "get": {
        "operationId": "CollaboratorService_getRepositoryCollaborators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacGetCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/getResourceAdmins": {
      "get": {
        "operationId": "CollaboratorService_getResourceAdmins",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacResourceAdmins"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "service",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ALL",
              "ROLE_SERVICE",
              "AUTHZ_SERVICE",
              "MODELDB_SERVICE",
              "DEPLOYMENT_SERVICE",
              "REGISTRY_SERVICE",
              "MONITORING_SERVICE"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "resource_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resource_type.role_service_resource_type",
            "description": "Separate based on the service itself.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ALL",
              "ROLE",
              "ROLE_BINDING"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "resource_type.authz_service_resource_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ALL",
              "ORGANIZATION",
              "TEAM",
              "WORKSPACE",
              "USER",
              "SERVICE_ACCOUNT",
              "CONTAINER_REGISTRY_CONFIGURATION",
              "EVENT",
              "WEBHOOK",
              "SYSTEM_ADMIN",
              "PYPI_CONFIGURATION",
              "KAFKA_CONFIGURATION",
              "SCIM_CONFIGURATION",
              "GROUP"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "resource_type.modeldb_service_resource_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ALL",
              "PROJECT",
              "EXPERIMENT",
              "EXPERIMENT_RUN",
              "DATASET",
              "DATASET_VERSION",
              "DASHBOARD",
              "REPOSITORY",
              "REGISTERED_MODEL",
              "REGISTERED_MODEL_VERSION",
              "MONITORED_ENTITY",
              "NOTIFICATION_CHANNEL",
              "ENDPOINT",
              "BUILD",
              "ORGANIZATION",
              "TEAM",
              "WORKSPACE",
              "USER",
              "SERVICE_ACCOUNT",
              "CONTAINER_REGISTRY_CONFIGURATION",
              "STAGE",
              "PROFILER"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "resource_type.deployment_service_resource_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ALL",
              "ENDPOINT",
              "BUILD"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/getResources": {
      "get": {
        "summary": "The caller must have permission to GET the resource accordingly",
        "operationId": "CollaboratorService_getResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacGetResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "resources.service",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ALL",
              "ROLE_SERVICE",
              "AUTHZ_SERVICE",
              "MODELDB_SERVICE",
              "DEPLOYMENT_SERVICE",
              "REGISTRY_SERVICE",
              "MONITORING_SERVICE"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "resources.resource_ids",
            "description": "Internal ID for the resource in the service, whose meaning doesn't matter for other services.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resources.all_resource_ids",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "resources.resource_type.role_service_resource_type",
            "description": "Separate based on the service itself.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ALL",
              "ROLE",
              "ROLE_BINDING"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "resources.resource_type.authz_service_resource_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ALL",
              "ORGANIZATION",
              "TEAM",
              "WORKSPACE",
              "USER",
              "SERVICE_ACCOUNT",
              "CONTAINER_REGISTRY_CONFIGURATION",
              "EVENT",
              "WEBHOOK",
              "SYSTEM_ADMIN",
              "PYPI_CONFIGURATION",
              "KAFKA_CONFIGURATION",
              "SCIM_CONFIGURATION",
              "GROUP"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "resources.resource_type.modeldb_service_resource_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ALL",
              "PROJECT",
              "EXPERIMENT",
              "EXPERIMENT_RUN",
              "DATASET",
              "DATASET_VERSION",
              "DASHBOARD",
              "REPOSITORY",
              "REGISTERED_MODEL",
              "REGISTERED_MODEL_VERSION",
              "MONITORED_ENTITY",
              "NOTIFICATION_CHANNEL",
              "ENDPOINT",
              "BUILD",
              "ORGANIZATION",
              "TEAM",
              "WORKSPACE",
              "USER",
              "SERVICE_ACCOUNT",
              "CONTAINER_REGISTRY_CONFIGURATION",
              "STAGE",
              "PROFILER"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "resources.resource_type.deployment_service_resource_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ALL",
              "ENDPOINT",
              "BUILD"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resource_name",
            "description": "Optional. If Provided, workspace, resource service, type should be provided.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "owner_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uint64"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/getResourcesSpecialPersonalWorkspace": {
      "get": {
        "summary": "The caller must have permission to GET the resource accordingly\ngets resources that is available in personal workspace (all except organization workspace resources)",
        "operationId": "CollaboratorService_getResourcesSpecialPersonalWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacGetResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "resources.service",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ALL",
              "ROLE_SERVICE",
              "AUTHZ_SERVICE",
              "MODELDB_SERVICE",
              "DEPLOYMENT_SERVICE",
              "REGISTRY_SERVICE",
              "MONITORING_SERVICE"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "resources.resource_ids",
            "description": "Internal ID for the resource in the service, whose meaning doesn't matter for other services.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resources.all_resource_ids",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "resources.resource_type.role_service_resource_type",
            "description": "Separate based on the service itself.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ALL",
              "ROLE",
              "ROLE_BINDING"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "resources.resource_type.authz_service_resource_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ALL",
              "ORGANIZATION",
              "TEAM",
              "WORKSPACE",
              "USER",
              "SERVICE_ACCOUNT",
              "CONTAINER_REGISTRY_CONFIGURATION",
              "EVENT",
              "WEBHOOK",
              "SYSTEM_ADMIN",
              "PYPI_CONFIGURATION",
              "KAFKA_CONFIGURATION",
              "SCIM_CONFIGURATION",
              "GROUP"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "resources.resource_type.modeldb_service_resource_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ALL",
              "PROJECT",
              "EXPERIMENT",
              "EXPERIMENT_RUN",
              "DATASET",
              "DATASET_VERSION",
              "DASHBOARD",
              "REPOSITORY",
              "REGISTERED_MODEL",
              "REGISTERED_MODEL_VERSION",
              "MONITORED_ENTITY",
              "NOTIFICATION_CHANNEL",
              "ENDPOINT",
              "BUILD",
              "ORGANIZATION",
              "TEAM",
              "WORKSPACE",
              "USER",
              "SERVICE_ACCOUNT",
              "CONTAINER_REGISTRY_CONFIGURATION",
              "STAGE",
              "PROFILER"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "resources.resource_type.deployment_service_resource_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ALL",
              "ENDPOINT",
              "BUILD"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resource_name",
            "description": "Optional. If Provided, workspace, resource service, type should be provided.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "owner_ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uint64"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/removeDatasetCollaborator": {
      "delete": {
        "operationId": "CollaboratorService_removeDatasetCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacRemoveCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "share_with",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_deleted",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "authz_entity_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ORGANIZATION",
              "TEAM",
              "USER",
              "GROUP"
            ],
            "default": "UNKNOWN"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/removeEndpointCollaborator": {
      "delete": {
        "operationId": "CollaboratorService_removeEndpointCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacRemoveCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "share_with",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_deleted",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "authz_entity_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ORGANIZATION",
              "TEAM",
              "USER",
              "GROUP"
            ],
            "default": "UNKNOWN"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/removeEndpointCollaboratorCommonService": {
      "delete": {
        "operationId": "CollaboratorService_removeEndpointCollaboratorCommonService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacRemoveCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "share_with",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_deleted",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "authz_entity_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ORGANIZATION",
              "TEAM",
              "USER",
              "GROUP"
            ],
            "default": "UNKNOWN"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/removeMonitoredEntityCollaborator": {
      "delete": {
        "operationId": "CollaboratorService_removeMonitoredEntityCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacRemoveCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "share_with",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_deleted",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "authz_entity_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ORGANIZATION",
              "TEAM",
              "USER",
              "GROUP"
            ],
            "default": "UNKNOWN"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/removeProjectCollaborator": {
      "delete": {
        "operationId": "CollaboratorService_removeProjectCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacRemoveCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "share_with",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_deleted",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "authz_entity_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ORGANIZATION",
              "TEAM",
              "USER",
              "GROUP"
            ],
            "default": "UNKNOWN"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/removeRegisteredModelCollaborator": {
      "delete": {
        "operationId": "CollaboratorService_removeRegisteredModelCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacRemoveCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "share_with",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_deleted",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "authz_entity_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ORGANIZATION",
              "TEAM",
              "USER",
              "GROUP"
            ],
            "default": "UNKNOWN"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/removeRepositoryCollaborator": {
      "delete": {
        "operationId": "CollaboratorService_removeRepositoryCollaborator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacRemoveCollaboratorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "share_with",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_deleted",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "authz_entity_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "ORGANIZATION",
              "TEAM",
              "USER",
              "GROUP"
            ],
            "default": "UNKNOWN"
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/removeResourceAdmins": {
      "post": {
        "operationId": "CollaboratorService_removeResourceAdmins",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/vertauacEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacModifyResourceAdmins"
            }
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    },
    "/collaborator/setResource": {
      "post": {
        "summary": "The caller must have permission to CREATE or UPDATE the resource accordingly",
        "operationId": "CollaboratorService_setResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacSetResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacSetResource"
            }
          }
        ],
        "tags": [
          "CollaboratorService"
        ]
      }
    }
  },
  "definitions": {
    "AuthzActionEnumAuthzServiceActions": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ALL",
        "IS_ALLOWED",
        "GET",
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "READ_SECRETS",
        "CREATE_SERVICE_ACCOUNT",
        "CREATE_CONTAINER_REGISTRY",
        "CREATE_WEBHOOK",
        "CREATE_GROUP"
      ],
      "default": "UNKNOWN"
    },
    "AuthzResourceEnumAuthzServiceResourceTypes": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ALL",
        "ORGANIZATION",
        "TEAM",
        "WORKSPACE",
        "USER",
        "SERVICE_ACCOUNT",
        "CONTAINER_REGISTRY_CONFIGURATION",
        "EVENT",
        "WEBHOOK",
        "SYSTEM_ADMIN",
        "PYPI_CONFIGURATION",
        "KAFKA_CONFIGURATION",
        "SCIM_CONFIGURATION",
        "GROUP"
      ],
      "default": "UNKNOWN"
    },
    "CollaboratorTypeEnumCollaboratorType": {
      "type": "string",
      "enum": [
        "READ_ONLY",
        "READ_WRITE"
      ],
      "default": "READ_ONLY"
    },
    "CollaboratorTypeEnumWithDefaultEnumCollaboratorTypeEnumWithDefault": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "READ_WRITE",
        "READ_ONLY"
      ],
      "default": "UNKNOWN"
    },
    "DeploymentActionEnumDeploymentServiceActions": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ALL",
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "UPDATE_PERMISSIONS",
        "PREDICT",
        "CONTROL"
      ],
      "default": "UNKNOWN"
    },
    "DeploymentResourceEnumDeploymentServiceResourceTypes": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ALL",
        "ENDPOINT",
        "BUILD"
      ],
      "default": "UNKNOWN"
    },
    "EntitiesEnumEntitiesTypes": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ORGANIZATION",
        "TEAM",
        "USER",
        "GROUP"
      ],
      "default": "UNKNOWN"
    },
    "IdServiceProviderEnumIdServiceProvider": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "GITHUB",
        "BITBUCKET",
        "GOOGLE",
        "VERTA",
        "SAML",
        "AD_OAUTH2",
        "LDAP",
        "OKTA_SCIM",
        "AD_SCIM",
        "SCIM"
      ],
      "default": "UNKNOWN"
    },
    "ModelDBActionEnumModelDBServiceActions": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ALL",
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "DEPLOY",
        "PUBLIC_READ",
        "UPDATE_PERMISSIONS",
        "LOCK",
        "UNLOCK",
        "UPDATE_REDACT",
        "ALERTER",
        "PREDICT",
        "CONTROL",
        "IS_ALLOWED",
        "GET",
        "READ_SECRETS",
        "CREATE_SERVICE_ACCOUNT",
        "CREATE_CONTAINER_REGISTRY",
        "PROMOTE"
      ],
      "default": "UNKNOWN"
    },
    "ModelDBResourceEnumModelDBServiceResourceTypes": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ALL",
        "PROJECT",
        "EXPERIMENT",
        "EXPERIMENT_RUN",
        "DATASET",
        "DATASET_VERSION",
        "DASHBOARD",
        "REPOSITORY",
        "REGISTERED_MODEL",
        "REGISTERED_MODEL_VERSION",
        "MONITORED_ENTITY",
        "NOTIFICATION_CHANNEL",
        "ENDPOINT",
        "BUILD",
        "ORGANIZATION",
        "TEAM",
        "WORKSPACE",
        "USER",
        "SERVICE_ACCOUNT",
        "CONTAINER_REGISTRY_CONFIGURATION",
        "STAGE",
        "PROFILER"
      ],
      "default": "UNKNOWN"
    },
    "OrganizationBaselinePermissionsBaselinePermissions": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "PRIVATE",
        "READ",
        "WRITE",
        "ADMIN"
      ],
      "default": "UNKNOWN"
    },
    "RoleActionEnumRoleServiceActions": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ALL",
        "GET_BY_ID",
        "GET_BY_NAME",
        "CREATE",
        "UPDATE",
        "LIST",
        "DELETE"
      ],
      "default": "UNKNOWN"
    },
    "RoleResourceEnumRoleServiceResourceTypes": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ALL",
        "ROLE",
        "ROLE_BINDING"
      ],
      "default": "UNKNOWN"
    },
    "ServiceEnumService": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ALL",
        "ROLE_SERVICE",
        "AUTHZ_SERVICE",
        "MODELDB_SERVICE",
        "DEPLOYMENT_SERVICE",
        "REGISTRY_SERVICE",
        "MONITORING_SERVICE"
      ],
      "default": "UNKNOWN"
    },
    "TernaryEnumTernary": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "TRUE",
        "FALSE"
      ],
      "default": "UNKNOWN"
    },
    "commonGroupId": {
      "type": "object",
      "properties": {
        "org_id": {
          "type": "string"
        },
        "group_id": {
          "type": "string"
        }
      }
    },
    "commonPagination": {
      "type": "object",
      "properties": {
        "page_number": {
          "type": "integer",
          "format": "int32"
        },
        "page_limit": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "For pagination"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "uacAction": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/ServiceEnumService"
        },
        "role_service_action": {
          "$ref": "#/definitions/RoleActionEnumRoleServiceActions"
        },
        "authz_service_action": {
          "$ref": "#/definitions/AuthzActionEnumAuthzServiceActions"
        },
        "modeldb_service_action": {
          "$ref": "#/definitions/ModelDBActionEnumModelDBServiceActions"
        },
        "deployment_service_action": {
          "$ref": "#/definitions/DeploymentActionEnumDeploymentServiceActions"
        }
      },
      "title": "An action describes a specific operation that can be performed on a service"
    },
    "uacAddCollaboratorRequest": {
      "type": "object",
      "properties": {
        "entity_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "share_with": {
          "type": "string"
        },
        "collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "message": {
          "type": "string"
        },
        "date_created": {
          "type": "string",
          "format": "uint64"
        },
        "date_updated": {
          "type": "string",
          "format": "uint64"
        },
        "can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "can_predict": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "authz_entity_type": {
          "$ref": "#/definitions/EntitiesEnumEntitiesTypes"
        },
        "permission": {
          "$ref": "#/definitions/uacCollaboratorPermissions"
        }
      }
    },
    "uacAddCollaboratorRequestResponse": {
      "type": "object",
      "properties": {
        "self_allowed_actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uacAction"
          }
        },
        "status": {
          "type": "boolean"
        },
        "collaborator_user_info": {
          "$ref": "#/definitions/uacUserInfo"
        },
        "collaborator_organization": {
          "$ref": "#/definitions/uacOrganization"
        },
        "collaborator_team": {
          "$ref": "#/definitions/uacTeam"
        }
      }
    },
    "uacCollaboratorPermissions": {
      "type": "object",
      "properties": {
        "collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "can_predict": {
          "$ref": "#/definitions/TernaryEnumTernary"
        }
      }
    },
    "uacDeleteResourcesResponse": {
      "type": "object"
    },
    "uacFlagEnum": {
      "type": "string",
      "enum": [
        "UNDEFINED",
        "TRUE",
        "FALSE"
      ],
      "default": "UNDEFINED"
    },
    "uacGetCollaboratorResponse": {
      "type": "object",
      "properties": {
        "shared_users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uacGetCollaboratorResponseItem"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "uacGetCollaboratorResponseItem": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "share_via_type": {
          "$ref": "#/definitions/uacShareViaEnum"
        },
        "verta_id": {
          "type": "string"
        },
        "can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "can_predict": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "authz_entity_type": {
          "$ref": "#/definitions/EntitiesEnumEntitiesTypes"
        },
        "permission": {
          "$ref": "#/definitions/uacCollaboratorPermissions"
        }
      }
    },
    "uacGetResourcesResponse": {
      "type": "object",
      "properties": {
        "item": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uacGetResourcesResponseItem"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "uacGetResourcesResponseItem": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/ServiceEnumService"
        },
        "resource_id": {
          "type": "string"
        },
        "resource_name": {
          "type": "string"
        },
        "resource_type": {
          "$ref": "#/definitions/uacResourceType"
        },
        "workspace_id": {
          "type": "string",
          "format": "uint64"
        },
        "owner_id": {
          "type": "string",
          "format": "uint64"
        },
        "group_owner_id": {
          "$ref": "#/definitions/commonGroupId"
        },
        "visibility": {
          "$ref": "#/definitions/uacResourceVisibility",
          "title": "Type of the visibility"
        },
        "custom_permission": {
          "$ref": "#/definitions/uacCollaboratorPermissions",
          "title": "The next field only makes sense when visibility == ORG_CUSTOM\nThey will be empty otherwise"
        }
      }
    },
    "uacIdServiceProviderEnum": {
      "type": "object"
    },
    "uacModifyResourceAdmins": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/ServiceEnumService"
        },
        "resource_id": {
          "type": "string"
        },
        "resource_type": {
          "$ref": "#/definitions/uacResourceType"
        },
        "user_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "team_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "uacOrganization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "owner_id": {
          "type": "string"
        },
        "idp": {
          "$ref": "#/definitions/uacIdServiceProviderEnum"
        },
        "created_timestamp": {
          "type": "string",
          "format": "int64"
        },
        "updated_timestamp": {
          "type": "string",
          "format": "int64"
        },
        "global_collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "global_can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "default_repo_collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "default_endpoint_collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "endpoint_can_predict": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "default_dataset_collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "default_registered_model_collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "workspace_id": {
          "type": "string"
        },
        "registered_model_can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "default_monitored_entity_collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumWithDefaultEnumCollaboratorTypeEnumWithDefault"
        },
        "default_notification_channel_collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumWithDefaultEnumCollaboratorTypeEnumWithDefault"
        },
        "admins": {
          "$ref": "#/definitions/uacOrganizationAdmins"
        },
        "baseline_permissions": {
          "$ref": "#/definitions/uacOrganizationBaselinePermissions"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "uacOrganizationAdmins": {
      "type": "object",
      "properties": {
        "user_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "team_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "uacOrganizationBaselinePermissions": {
      "type": "object",
      "properties": {
        "minimum_resources_permission": {
          "$ref": "#/definitions/OrganizationBaselinePermissionsBaselinePermissions"
        },
        "project_can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "registry_can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "endpoint_can_predict": {
          "$ref": "#/definitions/TernaryEnumTernary"
        }
      }
    },
    "uacRemoveCollaboratorResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "self_allowed_actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uacAction"
          }
        }
      }
    },
    "uacResourceAdmins": {
      "type": "object",
      "properties": {
        "user_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "team_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "uacResourceType": {
      "type": "object",
      "properties": {
        "role_service_resource_type": {
          "$ref": "#/definitions/RoleResourceEnumRoleServiceResourceTypes",
          "title": "Separate based on the service itself"
        },
        "authz_service_resource_type": {
          "$ref": "#/definitions/AuthzResourceEnumAuthzServiceResourceTypes"
        },
        "modeldb_service_resource_type": {
          "$ref": "#/definitions/ModelDBResourceEnumModelDBServiceResourceTypes"
        },
        "deployment_service_resource_type": {
          "$ref": "#/definitions/DeploymentResourceEnumDeploymentServiceResourceTypes"
        }
      }
    },
    "uacResourceVisibility": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ORG_DEFAULT",
        "ORG_CUSTOM",
        "PRIVATE",
        "WORKSPACE_DEFAULT"
      ],
      "default": "UNKNOWN"
    },
    "uacResources": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/ServiceEnumService"
        },
        "resource_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Internal ID for the resource in the service, whose meaning doesn't matter for other services"
        },
        "all_resource_ids": {
          "type": "boolean"
        },
        "resource_type": {
          "$ref": "#/definitions/uacResourceType"
        }
      },
      "title": "A resource describes a specific object in a service that can receive an action"
    },
    "uacSetResource": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/ServiceEnumService",
          "title": "Specification of the resources. IDs are globally unique, so changes in the fields above cause\nupdate on pre-exising resources"
        },
        "resource_id": {
          "type": "string",
          "title": "Internal ID for the resource in the service, whose meaning doesn't matter for other services\nThis is optional. If empty, means all resources"
        },
        "resource_name": {
          "type": "string"
        },
        "resource_type": {
          "$ref": "#/definitions/uacResourceType"
        },
        "workspace_id": {
          "type": "string",
          "format": "uint64"
        },
        "workspace_name": {
          "type": "string"
        },
        "owner_id": {
          "type": "string",
          "format": "uint64"
        },
        "group_owner_id": {
          "$ref": "#/definitions/commonGroupId"
        },
        "visibility": {
          "$ref": "#/definitions/uacResourceVisibility",
          "title": "Type of the visibility"
        },
        "collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType",
          "title": "The next fields only makes sense when visibility == ORG_SCOPED_PUBLIC. We should error\notherwise"
        },
        "can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        },
        "can_predict": {
          "$ref": "#/definitions/TernaryEnumTernary"
        }
      }
    },
    "uacSetResourceResponse": {
      "type": "object"
    },
    "uacShareViaEnum": {
      "type": "string",
      "enum": [
        "USER_ID",
        "EMAIL_ID",
        "USERNAME"
      ],
      "default": "USER_ID"
    },
    "uacTeam": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "org_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "owner_id": {
          "type": "string"
        },
        "id_service_provider": {
          "$ref": "#/definitions/IdServiceProviderEnumIdServiceProvider"
        },
        "created_timestamp": {
          "type": "string",
          "format": "int64"
        },
        "updated_timestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "uacUserInfo": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id_service_provider": {
          "$ref": "#/definitions/IdServiceProviderEnumIdServiceProvider"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "image_url": {
          "type": "string"
        },
        "dev_key": {
          "type": "string"
        },
        "verta_info": {
          "$ref": "#/definitions/uacVertaUserInfo"
        },
        "secondary_dev_key": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "job_title": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "uacVertaUserInfo": {
      "type": "object",
      "properties": {
        "individual_user": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        },
        "refresh_timestamp": {
          "type": "string",
          "format": "uint64"
        },
        "last_login_timestamp": {
          "type": "string",
          "format": "uint64"
        },
        "user_id": {
          "type": "string"
        },
        "publicProfile": {
          "$ref": "#/definitions/uacFlagEnum"
        },
        "workspace_id": {
          "type": "string"
        },
        "default_workspace_id": {
          "type": "string",
          "format": "uint64",
          "title": "Workspace that the user has selected as their default. Initializes to the user's personal workspace\nWhen the user is added to their _first_ org, the default workspace automatically switches to that if it was the default value\nThis should be empty if the user is not the current user"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "vertauacEmpty": {
      "type": "object"
    }
  },
  "basePath": "/v1"
}
