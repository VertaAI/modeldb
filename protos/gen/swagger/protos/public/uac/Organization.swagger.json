{
  "swagger": "2.0",
  "info": {
    "title": "protos/public/uac/Organization.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/organization/addUser": {
      "post": {
        "summary": "Adds the given user to the organization\nOnly enabled if the requester is the creator of the organization",
        "operationId": "addUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacAddUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacAddUser"
            }
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      }
    },
    "/organization/deleteOrganization": {
      "post": {
        "summary": "Delete an existing organization\nOnly enabled if the person deleting is the creator",
        "operationId": "deleteOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacDeleteOrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacDeleteOrganization"
            }
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      }
    },
    "/organization/getOrganizationById": {
      "get": {
        "summary": "Gets information from a given organization",
        "operationId": "getOrganizationById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacGetOrganizationByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      }
    },
    "/organization/getOrganizationByName": {
      "get": {
        "summary": "Gets information from a given organization",
        "operationId": "getOrganizationByName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacGetOrganizationByNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "org_name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      }
    },
    "/organization/getOrganizationByShortName": {
      "get": {
        "summary": "Gets information from a given organization",
        "operationId": "getOrganizationByShortName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacGetOrganizationByShortNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "short_name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      }
    },
    "/organization/listMyOrganizations": {
      "get": {
        "summary": "Lists the organizations that the current user can see",
        "operationId": "listMyOrganizations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacListMyOrganizationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "OrganizationService"
        ]
      }
    },
    "/organization/listTeams": {
      "get": {
        "summary": "List teams that are part of an organization\nOnly available for users inside the organization itself",
        "operationId": "listTeams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacListTeamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      }
    },
    "/organization/listUsers": {
      "get": {
        "summary": "List users inside an organization\nOnly available for users inside the organization itself",
        "operationId": "listUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      }
    },
    "/organization/removeUser": {
      "post": {
        "summary": "Removes the given user to the organization\nOnly enabled if the requester is the creator of the organization\nThe owner can never be removed",
        "operationId": "removeUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacRemoveUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacRemoveUser"
            }
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      }
    },
    "/organization/setOrganization": {
      "post": {
        "summary": "Create or update an organization\nAutomatically sets the user making the call as owner and adds to the organization",
        "operationId": "setOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacSetOrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacSetOrganization"
            }
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      }
    }
  },
  "definitions": {
    "CollaboratorTypeEnumCollaboratorType": {
      "type": "string",
      "enum": [
        "READ_ONLY",
        "READ_WRITE"
      ],
      "default": "READ_ONLY"
    },
    "TernaryEnumTernary": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "TRUE",
        "FALSE"
      ],
      "default": "UNKNOWN"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "uacAddUser": {
      "type": "object",
      "properties": {
        "org_id": {
          "type": "string"
        },
        "share_with": {
          "type": "string"
        }
      }
    },
    "uacAddUserResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "uacDeleteOrganization": {
      "type": "object",
      "properties": {
        "org_id": {
          "type": "string"
        }
      }
    },
    "uacDeleteOrganizationResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "uacGetOrganizationByIdResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/uacOrganization"
        }
      }
    },
    "uacGetOrganizationByNameResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/uacOrganization"
        }
      }
    },
    "uacGetOrganizationByShortNameResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/uacOrganization"
        }
      }
    },
    "uacListMyOrganizationsResponse": {
      "type": "object",
      "properties": {
        "organizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uacOrganization"
          }
        }
      }
    },
    "uacListTeamsResponse": {
      "type": "object",
      "properties": {
        "team_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "uacListUsersResponse": {
      "type": "object",
      "properties": {
        "user_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "uacOrganization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "owner_id": {
          "type": "string"
        },
        "created_timestamp": {
          "type": "string",
          "format": "int64"
        },
        "updated_timestamp": {
          "type": "string",
          "format": "int64"
        },
        "global_collaborator_type": {
          "$ref": "#/definitions/CollaboratorTypeEnumCollaboratorType"
        },
        "global_can_deploy": {
          "$ref": "#/definitions/TernaryEnumTernary"
        }
      }
    },
    "uacRemoveUser": {
      "type": "object",
      "properties": {
        "org_id": {
          "type": "string"
        },
        "share_with": {
          "type": "string"
        }
      }
    },
    "uacRemoveUserResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "uacSetOrganization": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/uacOrganization"
        }
      }
    },
    "uacSetOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/uacOrganization"
        }
      }
    }
  },
  "basePath": "/v1"
}
