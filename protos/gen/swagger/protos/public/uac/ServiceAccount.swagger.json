{
  "swagger": "2.0",
  "info": {
    "title": "uac/ServiceAccount.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/service_account/createServiceAccount": {
      "post": {
        "operationId": "ServiceAccountService_createServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacServiceAccount"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacCreateServiceAccountRequest"
            }
          }
        ],
        "tags": [
          "ServiceAccountService"
        ]
      }
    },
    "/service_account/deleteServiceAccount": {
      "delete": {
        "operationId": "ServiceAccountService_deleteServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacEmpty"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacDeleteServiceAccountRequest"
            }
          }
        ],
        "tags": [
          "ServiceAccountService"
        ]
      }
    },
    "/service_account/findServiceAccount": {
      "post": {
        "operationId": "ServiceAccountService_findServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/uacFindServiceAccountRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/uacFindServiceAccountRequest"
            }
          }
        ],
        "tags": [
          "ServiceAccountService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "uacCreateServiceAccountRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "The final username for the service account will be \"workspace_name/username\". We should prevent usernames that have a \"/\" otherwise."
        },
        "associated_workspace_id": {
          "type": "string",
          "format": "uint64"
        }
      },
      "description": "Only the org admins can create a service account. This is controlled by RBAC."
    },
    "uacDeleteServiceAccountRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        }
      },
      "description": "Only the org admins can delete a service account. This is controlled by RBAC."
    },
    "uacEmpty": {
      "type": "object"
    },
    "uacFindServiceAccountRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        },
        "associated_workspace_ids": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        }
      },
      "description": "Perform the query computing an AND of all the fields that are present, with IN operator for the list items.\nThe user must be authorized to READ all IDs it's requesting.\nA user can READ a service account if they belong to the same workspace."
    },
    "uacFindServiceAccountRequestResponse": {
      "type": "object",
      "properties": {
        "service_accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/uacServiceAccount"
          }
        }
      }
    },
    "uacServiceAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "user_id": {
          "type": "string"
        },
        "associated_workspace_id": {
          "type": "string",
          "format": "uint64",
          "title": "A service account belongs to a fixed workspace"
        }
      },
      "description": "A service account is a subtype of User. So we can use the UAC APIs to manipulate the service account.\nBesides the service account itself, the organization admin should be able to get and manipulate the user details, like dev keys."
    }
  },
  "basePath": "/v1"
}
