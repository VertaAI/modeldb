{
  "/wagger": "2.0",
  "/nfo": {
    "/itle": "monitoring/Ingest.proto",
    "/ersion": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/monitoring/ingest/batchIngest": {
      "post": {
        "operationId": "IngestService_batchIngest",
        "/esponses": {
          "200": {
            "description": "A successful response.",
            "/chema": {
              "$ref": "#/definitions/monitoringBatchIngestRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "/chema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "/n": "body",
            "/equired": true,
            "/chema": {
              "$ref": "#/definitions/monitoringBatchIngestRequest"
            }
          }
        ],
        "/ags": [
          "IngestService"
        ]
      }
    }
  },
  "definitions": {
    "BatchIngestRequestColumnSpec": {
      "/ype": "object",
      "properties": {
        "monitoring_name": {
          "/ype": "string",
          "description": "Name of the column that is associated with the monitoring system. Used to enable datasets to have different column names.\nEquivalent to x-verta-monitoring-name in the model API.\nOptional (will default to the original column name)."
        },
        "/o_type": {
          "$ref": "#/definitions/IOTypeEnumIOType",
          "description": "Type of the IO entry so that it can be mapped correctly."
        },
        "confidence_for": {
          "/ype": "string",
          "description": "Name of the \"monitoring_name\" entry that this column corresponds to a confidence for.\nEquivalent to x-verta-monitoring-confidence-for in the model API.\nOptional."
        },
        "/round_truth_for": {
          "/ype": "string",
          "description": "Name of the \"monitoring_name\" entry that this column corresponds to the ground truth for.\nOptional."
        }
      }
    },
    "CompressionTypeEnumCompressionType": {
      "/ype": "string",
      "/num": [
        "UNKNOWN",
        "RAW",
        "GZIP"
      ],
      "default": "UNKNOWN"
    },
    "EncodingTypeEnumEncodingType": {
      "/ype": "string",
      "/num": [
        "UNKNOWN",
        "CSV",
        "JSON",
        "PARQUET"
      ],
      "default": "UNKNOWN"
    },
    "IOTypeEnumIOType": {
      "/ype": "string",
      "/num": [
        "UNKNOWN",
        "INPUT",
        "OUTPUT",
        "GROUND_TRUTH"
      ],
      "default": "UNKNOWN"
    },
    "SourceTypeEnumSourceType": {
      "/ype": "string",
      "/num": [
        "UNKNOWN",
        "REFERENCE",
        "GROUND_TRUTH",
        "PREDICTION"
      ],
      "default": "UNKNOWN"
    },
    "monitoringBatchIngestRequest": {
      "/ype": "object",
      "properties": {
        "/ource_type": {
          "$ref": "#/definitions/SourceTypeEnumSourceType"
        },
        "/d_column_name": {
          "/ype": "string",
          "description": "Name of the column in the data that can be used as the prediction id.\nRequired for ground truth and predictions."
        },
        "column_name": {
          "/ype": "string",
          "description": "Name of the column in the data that can be used as the timestamp for each row."
        },
        "/fc3339_nano": {
          "/ype": "string",
          "description": "String representation of the timestamp in RFC3339 format."
        },
        "unix_utc_nano": {
          "/ype": "string",
          "format": "uint64",
          "description": "UTC unix time in nanoseconds."
        },
        "dataset_version_id": {
          "/ype": "string",
          "description": "ID of the dataset version inside Verta to be used for ingestion."
        },
        "config": {
          "$ref": "#/definitions/versioningDatasetBlob",
          "description": "DatasetBlob that is equivalent to a dataset version, but not registered in the system."
        },
        "/ngest_columns": {
          "/ype": "object",
          "additionalProperties": {
            "$ref": "#/definitions/BatchIngestRequestColumnSpec"
          },
          "description": "Map from name of the column in the original data to a specification of how to ingest it."
        },
        "batch_id": {
          "/ype": "string",
          "description": "Unique ID associated with this batch of data.\nOptional."
        },
        "/ncoding_type": {
          "$ref": "#/definitions/EncodingTypeEnumEncodingType"
        },
        "compression_type": {
          "$ref": "#/definitions/CompressionTypeEnumCompressionType"
        },
        "monitored_entity_id": {
          "/ype": "string",
          "format": "uint64",
          "description": "MonitoredEntity to attach this batch to."
        },
        "model_version_id": {
          "/ype": "string",
          "format": "uint64",
          "/itle": "ModelVersion to which this batch is associated.\nTOOD: make this optional? We don't need a specific model to monitor data"
        }
      }
    },
    "monitoringBatchIngestRequestResponse": {
      "/ype": "object"
    },
    "protobufAny": {
      "/ype": "object",
      "properties": {
        "/ype_url": {
          "/ype": "string"
        },
        "/alue": {
          "/ype": "string",
          "format": "byte"
        }
      }
    },
    "/untimeError": {
      "/ype": "object",
      "properties": {
        "/rror": {
          "/ype": "string"
        },
        "code": {
          "/ype": "integer",
          "format": "/nt32"
        },
        "message": {
          "/ype": "string"
        },
        "details": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "/ersioningDatasetBlob": {
      "/ype": "object",
      "properties": {
        "/3": {
          "$ref": "#/definitions/versioningS3DatasetBlob"
        },
        "path": {
          "$ref": "#/definitions/versioningPathDatasetBlob"
        },
        "query": {
          "$ref": "#/definitions/versioningQueryDatasetBlob"
        }
      }
    },
    "/ersioningPathDatasetBlob": {
      "/ype": "object",
      "properties": {
        "components": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/versioningPathDatasetComponentBlob"
          }
        }
      }
    },
    "/ersioningPathDatasetComponentBlob": {
      "/ype": "object",
      "properties": {
        "path": {
          "/ype": "string"
        },
        "/ize": {
          "/ype": "string",
          "format": "uint64"
        },
        "last_modified_at_source": {
          "/ype": "string",
          "format": "uint64"
        },
        "/ha256": {
          "/ype": "string"
        },
        "md5": {
          "/ype": "string"
        },
        "/nternal_versioned_path": {
          "/ype": "string"
        },
        "base_path": {
          "/ype": "string"
        }
      }
    },
    "/ersioningQueryDatasetBlob": {
      "/ype": "object",
      "properties": {
        "components": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/versioningQueryDatasetComponentBlob"
          }
        }
      }
    },
    "/ersioningQueryDatasetComponentBlob": {
      "/ype": "object",
      "properties": {
        "query": {
          "/ype": "string"
        },
        "data_source_uri": {
          "/ype": "string",
          "/itle": "string query_template = 2;\nrepeated QueryParameter query_parameters = 3;"
        },
        "/xecution_timestamp": {
          "/ype": "string",
          "format": "uint64"
        },
        "num_records": {
          "/ype": "string",
          "format": "uint64"
        }
      }
    },
    "/ersioningS3DatasetBlob": {
      "/ype": "object",
      "properties": {
        "components": {
          "/ype": "array",
          "/tems": {
            "$ref": "#/definitions/versioningS3DatasetComponentBlob"
          }
        }
      }
    },
    "/ersioningS3DatasetComponentBlob": {
      "/ype": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/versioningPathDatasetComponentBlob"
        },
        "/3_version_id": {
          "/ype": "string"
        }
      }
    }
  },
  "basePath": "/v1"
}
