{
  "swagger": "2.0",
  "info": {
    "title": "registry/ChecklistService.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/registry/checklist_item_values": {
      "post": {
        "operationId": "ChecklistService_CreateChecklistItemValue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrySetChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registrySetChecklistItemValueRequest"
            }
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      }
    },
    "/registry/checklist_item_values/find": {
      "post": {
        "operationId": "ChecklistService_FindChecklistItemValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryFindChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryFindChecklistItemValueRequest"
            }
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      }
    },
    "/registry/checklist_item_values/{id.checklist_item_value_id}": {
      "get": {
        "operationId": "ChecklistService_GetChecklistItemValue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryGetChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.checklist_item_value_id",
            "description": "ChecklistItemValue referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_version_id",
            "description": "ModelVersion referred to by id.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_id.named_id.name",
            "description": "Model Name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.model_version_id.model_id.named_id.workspace_name",
            "description": "WorkspaceName.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.model_version_id.model_id.registered_model_id",
            "description": "Model refered to by id.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      },
      "delete": {
        "operationId": "ChecklistService_DeleteChecklistItemValue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryDeleteChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.checklist_item_value_id",
            "description": "ChecklistItemValue referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_version_id",
            "description": "ModelVersion referred to by id.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_id.named_id.name",
            "description": "Model Name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.model_version_id.model_id.named_id.workspace_name",
            "description": "WorkspaceName.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.model_version_id.model_id.registered_model_id",
            "description": "Model refered to by id.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      },
      "put": {
        "operationId": "ChecklistService_UpdateChecklistItemValue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrySetChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.checklist_item_value_id",
            "description": "ChecklistItemValue referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registrySetChecklistItemValueRequest"
            }
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      }
    },
    "/registry/model_versions/{id.model_version_id.model_version_id}/checklist_item_values": {
      "post": {
        "operationId": "ChecklistService_CreateChecklistItemValue2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrySetChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_version_id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registrySetChecklistItemValueRequest"
            }
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      }
    },
    "/registry/model_versions/{id.model_version_id.model_version_id}/checklist_item_values/{id.checklist_item_value_id}": {
      "get": {
        "operationId": "ChecklistService_GetChecklistItemValue2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryGetChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_version_id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.checklist_item_value_id",
            "description": "ChecklistItemValue referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_id.named_id.name",
            "description": "Model Name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.model_version_id.model_id.named_id.workspace_name",
            "description": "WorkspaceName.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.model_version_id.model_id.registered_model_id",
            "description": "Model refered to by id.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      },
      "delete": {
        "operationId": "ChecklistService_DeleteChecklistItemValue2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryDeleteChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_version_id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.checklist_item_value_id",
            "description": "ChecklistItemValue referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_id.named_id.name",
            "description": "Model Name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.model_version_id.model_id.named_id.workspace_name",
            "description": "WorkspaceName.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.model_version_id.model_id.registered_model_id",
            "description": "Model refered to by id.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      },
      "put": {
        "operationId": "ChecklistService_UpdateChecklistItemValue2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrySetChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_version_id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.checklist_item_value_id",
            "description": "ChecklistItemValue referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registrySetChecklistItemValueRequest"
            }
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      }
    },
    "/registry/model_versions/{id.model_version_id}/checklist_item_values/find": {
      "post": {
        "operationId": "ChecklistService_FindChecklistItemValues2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryFindChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryFindChecklistItemValueRequest"
            }
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      }
    },
    "/registry/registered_models/{id.model_version_id.model_id.registered_model_id}/model_versions/{id.model_version_id.model_version_id}/checklist_item_values": {
      "post": {
        "operationId": "ChecklistService_CreateChecklistItemValue3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrySetChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_version_id.model_id.registered_model_id",
            "description": "Model refered to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registrySetChecklistItemValueRequest"
            }
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      }
    },
    "/registry/registered_models/{id.model_version_id.model_id.registered_model_id}/model_versions/{id.model_version_id.model_version_id}/checklist_item_values/{id.checklist_item_value_id}": {
      "get": {
        "operationId": "ChecklistService_GetChecklistItemValue3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryGetChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_version_id.model_id.registered_model_id",
            "description": "Model refered to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.checklist_item_value_id",
            "description": "ChecklistItemValue referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_id.named_id.name",
            "description": "Model Name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.model_version_id.model_id.named_id.workspace_name",
            "description": "WorkspaceName.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      },
      "delete": {
        "operationId": "ChecklistService_DeleteChecklistItemValue3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryDeleteChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_version_id.model_id.registered_model_id",
            "description": "Model refered to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.checklist_item_value_id",
            "description": "ChecklistItemValue referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_id.named_id.name",
            "description": "Model Name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.model_version_id.model_id.named_id.workspace_name",
            "description": "WorkspaceName.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      },
      "put": {
        "operationId": "ChecklistService_UpdateChecklistItemValue3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrySetChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_version_id.model_id.registered_model_id",
            "description": "Model refered to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.checklist_item_value_id",
            "description": "ChecklistItemValue referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registrySetChecklistItemValueRequest"
            }
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      }
    },
    "/registry/workspaces/{id.model_version_id.model_id.named_id.workspace_name}/registered_models/{id.model_version_id.model_id.registered_model_id}/model_versions/{id.model_version_id.model_version_id}/checklist_item_values": {
      "post": {
        "operationId": "ChecklistService_CreateChecklistItemValue4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrySetChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_version_id.model_id.named_id.workspace_name",
            "description": "WorkspaceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.model_version_id.model_id.registered_model_id",
            "description": "Model refered to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registrySetChecklistItemValueRequest"
            }
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      }
    },
    "/registry/workspaces/{id.model_version_id.model_id.named_id.workspace_name}/registered_models/{id.model_version_id.model_id.registered_model_id}/model_versions/{id.model_version_id.model_version_id}/checklist_item_values/{id.checklist_item_value_id}": {
      "get": {
        "operationId": "ChecklistService_GetChecklistItemValue4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryGetChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_version_id.model_id.named_id.workspace_name",
            "description": "WorkspaceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.model_version_id.model_id.registered_model_id",
            "description": "Model refered to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.checklist_item_value_id",
            "description": "ChecklistItemValue referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_id.named_id.name",
            "description": "Model Name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      },
      "delete": {
        "operationId": "ChecklistService_DeleteChecklistItemValue4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryDeleteChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_version_id.model_id.named_id.workspace_name",
            "description": "WorkspaceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.model_version_id.model_id.registered_model_id",
            "description": "Model refered to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.checklist_item_value_id",
            "description": "ChecklistItemValue referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_id.named_id.name",
            "description": "Model Name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      },
      "put": {
        "operationId": "ChecklistService_UpdateChecklistItemValue4",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrySetChecklistItemValueRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_version_id.model_id.named_id.workspace_name",
            "description": "WorkspaceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.model_version_id.model_id.registered_model_id",
            "description": "Model refered to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.checklist_item_value_id",
            "description": "ChecklistItemValue referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registrySetChecklistItemValueRequest"
            }
          }
        ],
        "tags": [
          "ChecklistService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protobufFieldMask": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of field mask paths."
        }
      },
      "description": "paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, new values will\nbe appended to the existing repeated field in the target resource. Note that\na repeated field is only allowed in the last position of a `paths` string.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then new value will be merged into the existing sub-message\nin the target resource.\n\nFor example, given the target message:\n\n    f {\n      b {\n        d: 1\n        x: 2\n      }\n      c: [1]\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d: 10\n      }\n      c: [2]\n    }\n\nthen if the field mask is:\n\n paths: [\"f.b\", \"f.c\"]\n\nthen the result will be:\n\n    f {\n      b {\n        d: 10\n        x: 2\n      }\n      c: [1, 2]\n    }\n\nAn implementation may provide options to override this default behavior for\nrepeated and message fields.\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.\n\n## Field Mask Verification\n\nThe implementation of any API method which has a FieldMask type field in the\nrequest should verify the included field paths, and return an\n`INVALID_ARGUMENT` error if any path is unmappable.",
      "title": "`FieldMask` represents a set of symbolic field paths, for example:"
    },
    "registryChecklistItemValue": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "internal id"
        },
        "completed": {
          "type": "boolean",
          "format": "boolean",
          "title": "value corresponds to if the item was marked as completed"
        },
        "model_version_id": {
          "type": "string",
          "format": "uint64",
          "title": "id of the model version this belongs to"
        },
        "template_id": {
          "type": "string",
          "format": "uint64",
          "title": "id of the template(UAC) this is related to"
        },
        "template_item_id": {
          "type": "string",
          "format": "uint64",
          "title": "id of the template item (UAC) this is related to"
        },
        "created_by_id": {
          "type": "string",
          "format": "uint64",
          "title": "id of user(UAC) that created this entity"
        },
        "updated_by_id": {
          "type": "string",
          "format": "uint64",
          "title": "id of user(UAC) that updated this entity"
        },
        "time_created": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp recorded when this entity was created"
        },
        "time_updated": {
          "type": "string",
          "format": "int64",
          "title": "Timestamp recorded when metadata for this entity was last updated"
        }
      },
      "title": "placed here to avoid circular dependency in ChecklistService.proto"
    },
    "registryChecklistItemValueIdentification": {
      "type": "object",
      "properties": {
        "checklist_item_value_id": {
          "type": "string",
          "format": "uint64",
          "title": "ChecklistItemValue referred to by id"
        },
        "model_version_id": {
          "$ref": "#/definitions/registryModelVersionIdentification",
          "title": "RMV referred to by id"
        }
      }
    },
    "registryDeleteChecklistItemValueRequestResponse": {
      "type": "object"
    },
    "registryFindChecklistItemValueRequest": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/registryModelVersionIdentification",
          "title": "identity of parent registered model version"
        }
      }
    },
    "registryFindChecklistItemValueRequestResponse": {
      "type": "object",
      "properties": {
        "checklist_item_values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/registryChecklistItemValue"
          }
        }
      }
    },
    "registryGetChecklistItemValueRequestResponse": {
      "type": "object",
      "properties": {
        "checklist_item_value": {
          "$ref": "#/definitions/registryChecklistItemValue"
        }
      }
    },
    "registryModelVersionIdentification": {
      "type": "object",
      "properties": {
        "model_version_id": {
          "type": "string",
          "format": "uint64",
          "title": "ModelVersion referred to by id"
        },
        "model_id": {
          "$ref": "#/definitions/registryRegisteredModelIdentification",
          "title": "Registered Model referred to by id"
        }
      }
    },
    "registryRegisteredModelIdentification": {
      "type": "object",
      "properties": {
        "named_id": {
          "$ref": "#/definitions/registryRegisteredModelNamedIdentification",
          "title": "Model refered to by workspace name , model nmae combination"
        },
        "registered_model_id": {
          "type": "string",
          "format": "uint64",
          "title": "Model refered to by id"
        }
      },
      "title": "changed from oneof because of that bug: https://github.com/grpc-ecosystem/grpc-gateway/issues/753"
    },
    "registryRegisteredModelNamedIdentification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Model Name"
        },
        "workspace_name": {
          "type": "string",
          "title": "WorkspaceName"
        }
      }
    },
    "registrySetChecklistItemValueRequest": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/registryChecklistItemValueIdentification"
        },
        "checklist_item_value": {
          "$ref": "#/definitions/registryChecklistItemValue"
        },
        "update_mask": {
          "$ref": "#/definitions/protobufFieldMask"
        }
      }
    },
    "registrySetChecklistItemValueRequestResponse": {
      "type": "object",
      "properties": {
        "checklist_item_value": {
          "$ref": "#/definitions/registryChecklistItemValue"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "basePath": "/v1"
}
