{
  "swagger": "2.0",
  "info": {
    "title": "registry/RegistryService.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/registry/registered_model_versions/{id.model_version_id}": {
      "get": {
        "operationId": "RegistryService_GetModelVersion2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryGetModelVersionRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_id.named_id.name",
            "description": "Model Name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.model_id.named_id.workspace_name",
            "description": "WorkspaceName.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.model_id.registered_model_id",
            "description": "Model refered to by id.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    },
    "/registry/registered_models/find": {
      "post": {
        "summary": "CRUD for RegisteredModel",
        "operationId": "RegistryService_FindRegisteredModel2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryFindRegisteredModelRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryFindRegisteredModelRequest"
            }
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    },
    "/registry/registered_models/{id.registered_model_id}": {
      "get": {
        "operationId": "RegistryService_GetRegisteredModel2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryGetRegisteredModelRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.registered_model_id",
            "description": "Model refered to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.named_id.name",
            "description": "Model Name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.named_id.workspace_name",
            "description": "WorkspaceName.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    },
    "/registry/versions/{model_version_id}/commitArtifactPart": {
      "post": {
        "operationId": "RegistryService_commitArtifactPart",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryCommitArtifactPartResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "model_version_id",
            "description": "id of model version",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryCommitArtifactPart"
            }
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    },
    "/registry/versions/{model_version_id}/commitMultipartArtifact": {
      "post": {
        "operationId": "RegistryService_commitMultipartArtifact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryCommitMultipartArtifactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "model_version_id",
            "description": "id of model version",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryCommitMultipartArtifact"
            }
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    },
    "/registry/versions/{model_version_id}/getCommittedArtifactParts": {
      "get": {
        "operationId": "RegistryService_getCommittedArtifactParts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryGetCommittedArtifactPartsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "model_version_id",
            "description": "id of model version",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "key",
            "description": "artifact key.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    },
    "/registry/versions/{model_version_id}/getUrlForArtifact": {
      "post": {
        "operationId": "RegistryService_getUrlForArtifact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryGetUrlForArtifactResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "model_version_id",
            "description": "id of model version",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryGetUrlForArtifact"
            }
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    },
    "/registry/workspaces/{id.model_id.named_id.workspace_name}/registered_models/{id.model_id.named_id.name}/versions": {
      "post": {
        "operationId": "RegistryService_CreateModelVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrySetModelVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_id.named_id.workspace_name",
            "description": "WorkspaceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.model_id.named_id.name",
            "description": "Model Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryModelVersion"
            }
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    },
    "/registry/workspaces/{id.model_id.named_id.workspace_name}/registered_models/{id.model_id.named_id.name}/versions/{id.model_version_id}": {
      "get": {
        "operationId": "RegistryService_GetModelVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryGetModelVersionRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_id.named_id.workspace_name",
            "description": "WorkspaceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.model_id.named_id.name",
            "description": "Model Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_id.registered_model_id",
            "description": "Model refered to by id.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "RegistryService"
        ]
      },
      "delete": {
        "operationId": "RegistryService_DeleteModelVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryDeleteModelVersionRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_id.named_id.workspace_name",
            "description": "WorkspaceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.model_id.named_id.name",
            "description": "Model Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_id.registered_model_id",
            "description": "Model refered to by id.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "RegistryService"
        ]
      },
      "put": {
        "operationId": "RegistryService_UpdateModelVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrySetModelVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_id.named_id.workspace_name",
            "description": "WorkspaceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.model_id.named_id.name",
            "description": "Model Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryModelVersion"
            }
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    },
    "/registry/workspaces/{id.named_id.workspace_name}/registered_models": {
      "post": {
        "operationId": "RegistryService_CreateRegisteredModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrySetRegisteredModelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.named_id.workspace_name",
            "description": "WorkspaceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryRegisteredModel"
            }
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    },
    "/registry/workspaces/{id.named_id.workspace_name}/registered_models/{id.named_id.name}": {
      "get": {
        "operationId": "RegistryService_GetRegisteredModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryGetRegisteredModelRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.named_id.workspace_name",
            "description": "WorkspaceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.named_id.name",
            "description": "Model Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.registered_model_id",
            "description": "Model refered to by id.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "RegistryService"
        ]
      },
      "delete": {
        "operationId": "RegistryService_DeleteRegisteredModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryDeleteRegisteredModelRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.named_id.workspace_name",
            "description": "WorkspaceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.named_id.name",
            "description": "Model Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.registered_model_id",
            "description": "Model refered to by id.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "RegistryService"
        ]
      },
      "put": {
        "operationId": "RegistryService_UpdateRegisteredModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrySetRegisteredModelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.named_id.workspace_name",
            "description": "WorkspaceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.named_id.name",
            "description": "Model Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryRegisteredModel"
            }
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    },
    "/registry/workspaces/{id.named_id.workspace_name}/registered_models/{id.named_id.name}/versions/find": {
      "post": {
        "summary": "CRUD for Model Version",
        "operationId": "RegistryService_FindModelVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryFindModelVersionRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.named_id.workspace_name",
            "description": "WorkspaceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.named_id.name",
            "description": "Model Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryFindModelVersionRequest"
            }
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    },
    "/registry/workspaces/{workspace_name}/registered_models/find": {
      "post": {
        "summary": "CRUD for RegisteredModel",
        "operationId": "RegistryService_FindRegisteredModel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryFindRegisteredModelRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace_name",
            "description": "User or organization name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryFindRegisteredModelRequest"
            }
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    },
    "/registry/{id.model_id.registered_model_id}/versions": {
      "post": {
        "operationId": "RegistryService_CreateModelVersion2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrySetModelVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_id.registered_model_id",
            "description": "Model refered to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryModelVersion"
            }
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    },
    "/registry/{id.model_id.registered_model_id}/versions/{id.model_version_id}": {
      "delete": {
        "operationId": "RegistryService_DeleteModelVersion2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryDeleteModelVersionRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_id.registered_model_id",
            "description": "Model refered to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_id.named_id.name",
            "description": "Model Name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.model_id.named_id.workspace_name",
            "description": "WorkspaceName.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RegistryService"
        ]
      },
      "put": {
        "operationId": "RegistryService_UpdateModelVersion2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrySetModelVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.model_id.registered_model_id",
            "description": "Model refered to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.model_version_id",
            "description": "ModelVersion referred to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryModelVersion"
            }
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    },
    "/registry/{id.registered_model_id}": {
      "delete": {
        "operationId": "RegistryService_DeleteRegisteredModel2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryDeleteRegisteredModelRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.registered_model_id",
            "description": "Model refered to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.named_id.name",
            "description": "Model Name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.named_id.workspace_name",
            "description": "WorkspaceName.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RegistryService"
        ]
      },
      "put": {
        "operationId": "RegistryService_UpdateRegisteredModel2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registrySetRegisteredModelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.registered_model_id",
            "description": "Model refered to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryRegisteredModel"
            }
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    },
    "/registry/{id.registered_model_id}/versions/find": {
      "post": {
        "summary": "CRUD for Model Version",
        "operationId": "RegistryService_FindModelVersion2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/registryFindModelVersionRequestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id.registered_model_id",
            "description": "Model refered to by id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registryFindModelVersionRequest"
            }
          }
        ],
        "tags": [
          "RegistryService"
        ]
      }
    }
  },
  "definitions": {
    "ArtifactTypeEnumArtifactType": {
      "type": "string",
      "enum": [
        "IMAGE",
        "MODEL",
        "TENSORBOARD",
        "DATA",
        "BLOB",
        "STRING",
        "CODE",
        "CONTAINER"
      ],
      "default": "IMAGE"
    },
    "OperatorEnumOperator": {
      "type": "string",
      "enum": [
        "EQ",
        "NE",
        "GT",
        "GTE",
        "LT",
        "LTE",
        "CONTAIN",
        "NOT_CONTAIN",
        "IN"
      ],
      "default": "EQ"
    },
    "TernaryEnumTernary": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "TRUE",
        "FALSE"
      ],
      "default": "UNKNOWN"
    },
    "ValueTypeEnumValueType": {
      "type": "string",
      "enum": [
        "STRING",
        "NUMBER",
        "LIST",
        "BLOB"
      ],
      "default": "STRING"
    },
    "VisibilityEnumVisibility": {
      "type": "string",
      "enum": [
        "PRIVATE",
        "PUBLIC",
        "ORG_SCOPED_PUBLIC"
      ],
      "default": "PRIVATE",
      "title": "- PRIVATE: Default to private\n - PUBLIC: Not supported\n - ORG_SCOPED_PUBLIC: Uses access setup by organization"
    },
    "commonArtifact": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "path_only": {
          "type": "boolean",
          "format": "boolean"
        },
        "artifact_type": {
          "$ref": "#/definitions/ArtifactTypeEnumArtifactType"
        },
        "linked_artifact_id": {
          "type": "string"
        },
        "filename_extension": {
          "type": "string"
        }
      }
    },
    "commonArtifactPart": {
      "type": "object",
      "properties": {
        "part_number": {
          "type": "string",
          "format": "uint64"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "commonKeyValueQuery": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "object"
        },
        "value_type": {
          "$ref": "#/definitions/ValueTypeEnumValueType"
        },
        "operator": {
          "$ref": "#/definitions/OperatorEnumOperator"
        }
      }
    },
    "commonPagination": {
      "type": "object",
      "properties": {
        "page_number": {
          "type": "integer",
          "format": "int32"
        },
        "page_limit": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "For pagination"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "registryCommitArtifactPart": {
      "type": "object",
      "properties": {
        "model_version_id": {
          "type": "string",
          "format": "uint64",
          "title": "id of model version"
        },
        "key": {
          "type": "string",
          "title": "artifact key"
        },
        "artifact_part": {
          "$ref": "#/definitions/commonArtifactPart"
        }
      }
    },
    "registryCommitArtifactPartResponse": {
      "type": "object"
    },
    "registryCommitMultipartArtifact": {
      "type": "object",
      "properties": {
        "model_version_id": {
          "type": "string",
          "format": "uint64",
          "title": "id of model version"
        },
        "key": {
          "type": "string",
          "title": "artifact key"
        }
      }
    },
    "registryCommitMultipartArtifactResponse": {
      "type": "object"
    },
    "registryDeleteModelVersionRequestResponse": {
      "type": "object"
    },
    "registryDeleteRegisteredModelRequestResponse": {
      "type": "object"
    },
    "registryFindModelVersionRequest": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/registryRegisteredModelIdentification",
          "title": "identity of parent registered model"
        },
        "predicates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValueQuery"
          },
          "title": "Filtering supported on \n1. version\n2. labels\n3. description\n4. model_source\n5. experiment_run_id\n6. status\n7. archived status"
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination",
          "title": "If not present will default to page 1 page_size 10"
        },
        "ascending": {
          "type": "boolean",
          "format": "boolean"
        },
        "sort_key": {
          "type": "string"
        }
      }
    },
    "registryFindModelVersionRequestResponse": {
      "type": "object",
      "properties": {
        "model_versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/registryModelVersion"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "registryFindRegisteredModelRequest": {
      "type": "object",
      "properties": {
        "workspace_name": {
          "type": "string",
          "title": "User or organization name"
        },
        "predicates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValueQuery"
          },
          "title": "Filtering supported on \n1. name\n2. labels\n3. description"
        },
        "pagination": {
          "$ref": "#/definitions/commonPagination",
          "title": "If not present will default to page 1 page_size 10"
        },
        "ascending": {
          "type": "boolean",
          "format": "boolean"
        },
        "sort_key": {
          "type": "string"
        }
      },
      "title": "CRUD for Registred Models"
    },
    "registryFindRegisteredModelRequestResponse": {
      "type": "object",
      "properties": {
        "registered_models": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/registryRegisteredModel"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "registryGetCommittedArtifactPartsResponse": {
      "type": "object",
      "properties": {
        "artifact_parts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonArtifactPart"
          }
        }
      }
    },
    "registryGetModelVersionRequestResponse": {
      "type": "object",
      "properties": {
        "model_version": {
          "$ref": "#/definitions/registryModelVersion"
        }
      }
    },
    "registryGetRegisteredModelRequestResponse": {
      "type": "object",
      "properties": {
        "registered_model": {
          "$ref": "#/definitions/registryRegisteredModel"
        }
      }
    },
    "registryGetUrlForArtifact": {
      "type": "object",
      "properties": {
        "model_version_id": {
          "type": "string",
          "format": "uint64",
          "title": "id of model version"
        },
        "key": {
          "type": "string",
          "title": "artifact key"
        },
        "method": {
          "type": "string",
          "title": "GET or PUT"
        },
        "artifact_type": {
          "$ref": "#/definitions/ArtifactTypeEnumArtifactType",
          "title": "type of artifact"
        },
        "part_number": {
          "type": "string",
          "format": "uint64",
          "title": "0 if the url is not required to be multi part"
        }
      }
    },
    "registryGetUrlForArtifactResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "URL based on action"
        },
        "multipart_upload_ok": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "registryModelVersion": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "internal id"
        },
        "registered_model_id": {
          "type": "string",
          "format": "uint64",
          "title": "id of the model this belongs to"
        },
        "version": {
          "type": "string",
          "title": "Model's tag. Unique for a model nmae"
        },
        "time_updated": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp recorded when metadata for this ``model_version`` was last updated."
        },
        "time_created": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp recorded when this ``model_version`` was created."
        },
        "description": {
          "type": "string",
          "description": "Description of this ``model_version``."
        },
        "experiment_run_id": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Labels added to the registered models"
        },
        "model": {
          "$ref": "#/definitions/commonArtifact",
          "title": "Model"
        },
        "environment": {
          "$ref": "#/definitions/versioningEnvironmentBlob",
          "title": "Requirement"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonArtifact"
          },
          "title": "Other artifacts"
        },
        "archived": {
          "$ref": "#/definitions/TernaryEnumTernary",
          "title": "flag to archive a model version currently does nothing other than storing the information in DB"
        },
        "readme_text": {
          "type": "string",
          "title": "readme"
        },
        "apis": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "APIs"
        },
        "owner": {
          "type": "string",
          "title": "owner's verta_id"
        }
      }
    },
    "registryModelVersionIdentification": {
      "type": "object",
      "properties": {
        "model_version_id": {
          "type": "string",
          "format": "uint64",
          "title": "ModelVersion referred to by id"
        },
        "model_id": {
          "$ref": "#/definitions/registryRegisteredModelIdentification",
          "title": "Registered Model referred to by id"
        }
      }
    },
    "registryRegisteredModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "title": "internal id"
        },
        "name": {
          "type": "string",
          "description": "Unique name for the model within the workspace."
        },
        "time_created": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp recorded when this ``registered_model`` was created."
        },
        "time_updated": {
          "type": "string",
          "format": "int64",
          "description": "Timestamp recorded when metadata for this ``registered_model`` was last updated."
        },
        "description": {
          "type": "string",
          "description": "Description of this ``registered_model``."
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Labels added to the registered models"
        },
        "visibility": {
          "$ref": "#/definitions/VisibilityEnumVisibility",
          "title": "Visibility of Registered Models"
        },
        "workspace_id": {
          "type": "string",
          "title": "id of the workspace this belongs to\nnot storing workspace_type uac should support https://github.com/VertaAI/protos-all/pull/19/files"
        },
        "readme_text": {
          "type": "string",
          "title": "readme"
        },
        "owner": {
          "type": "string",
          "title": "owner's verta_id"
        }
      }
    },
    "registryRegisteredModelIdentification": {
      "type": "object",
      "properties": {
        "named_id": {
          "$ref": "#/definitions/registryRegisteredModelNamedIdentification",
          "title": "Model refered to by workspace name , model nmae combination"
        },
        "registered_model_id": {
          "type": "string",
          "format": "uint64",
          "title": "Model refered to by id"
        }
      },
      "title": "changed from oneof because of that bug: https://github.com/grpc-ecosystem/grpc-gateway/issues/753"
    },
    "registryRegisteredModelNamedIdentification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Model Name"
        },
        "workspace_name": {
          "type": "string",
          "title": "WorkspaceName"
        }
      }
    },
    "registrySetModelVersionResponse": {
      "type": "object",
      "properties": {
        "model_version": {
          "$ref": "#/definitions/registryModelVersion"
        }
      }
    },
    "registrySetRegisteredModelResponse": {
      "type": "object",
      "properties": {
        "registered_model": {
          "$ref": "#/definitions/registryRegisteredModel"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "versioningDockerEnvironmentBlob": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "sha": {
          "type": "string"
        }
      }
    },
    "versioningEnvironmentBlob": {
      "type": "object",
      "properties": {
        "python": {
          "$ref": "#/definitions/versioningPythonEnvironmentBlob"
        },
        "docker": {
          "$ref": "#/definitions/versioningDockerEnvironmentBlob"
        },
        "environment_variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningEnvironmentVariablesBlob"
          }
        },
        "command_line": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "versioningEnvironmentVariablesBlob": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "versioningPythonEnvironmentBlob": {
      "type": "object",
      "properties": {
        "version": {
          "$ref": "#/definitions/versioningVersionEnvironmentBlob"
        },
        "requirements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningPythonRequirementEnvironmentBlob"
          }
        },
        "constraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningPythonRequirementEnvironmentBlob"
          }
        }
      }
    },
    "versioningPythonRequirementEnvironmentBlob": {
      "type": "object",
      "properties": {
        "library": {
          "type": "string"
        },
        "constraint": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/versioningVersionEnvironmentBlob"
        }
      }
    },
    "versioningVersionEnvironmentBlob": {
      "type": "object",
      "properties": {
        "major": {
          "type": "integer",
          "format": "int32"
        },
        "minor": {
          "type": "integer",
          "format": "int32"
        },
        "patch": {
          "type": "integer",
          "format": "int32"
        },
        "suffix": {
          "type": "string"
        }
      }
    }
  },
  "basePath": "/v1"
}
