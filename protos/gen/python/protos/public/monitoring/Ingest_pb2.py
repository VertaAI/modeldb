# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: monitoring/Ingest.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from ..modeldb.versioning import Dataset_pb2 as modeldb_dot_versioning_dot_Dataset__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x17monitoring/Ingest.proto\x12\x13\x61i.verta.monitoring\x1a\x1cgoogle/api/annotations.proto\x1a modeldb/versioning/Dataset.proto\"\x8e\n\n\x12\x42\x61tchIngestRequest\x12V\n\x0bsource_type\x18\x01 \x01(\x0e\x32\x41.ai.verta.monitoring.BatchIngestRequest.SourceTypeEnum.SourceType\x12\x16\n\x0eid_column_name\x18\x02 \x01(\t\x12\x15\n\x0b\x63olumn_name\x18\x03 \x01(\tH\x00\x12\x16\n\x0crfc3339_nano\x18\x04 \x01(\tH\x00\x12\x17\n\runix_utc_nano\x18\x05 \x01(\x04H\x00\x12\x1c\n\x12\x64\x61taset_version_id\x18\x06 \x01(\tH\x01\x12:\n\x06\x63onfig\x18\x07 \x01(\x0b\x32(.ai.verta.modeldb.versioning.DatasetBlobH\x01\x12R\n\x0eingest_columns\x18\x08 \x03(\x0b\x32:.ai.verta.monitoring.BatchIngestRequest.IngestColumnsEntry\x12\x10\n\x08\x62\x61tch_id\x18\t \x01(\t\x12\\\n\rencoding_type\x18\n \x01(\x0e\x32\x45.ai.verta.monitoring.BatchIngestRequest.EncodingTypeEnum.EncodingType\x12\x65\n\x10\x63ompression_type\x18\x0b \x01(\x0e\x32K.ai.verta.monitoring.BatchIngestRequest.CompressionTypeEnum.CompressionType\x12\x1b\n\x13monitored_entity_id\x18\x0c \x01(\x04\x12\x18\n\x10model_version_id\x18\r \x01(\x04\x1a\\\n\x0eSourceTypeEnum\"J\n\nSourceType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\r\n\tREFERENCE\x10\x01\x12\x10\n\x0cGROUND_TRUTH\x10\x02\x12\x0e\n\nPREDICTION\x10\x03\x1a\xfc\x01\n\nColumnSpec\x12\x17\n\x0fmonitoring_name\x18\x01 \x01(\t\x12U\n\x07io_type\x18\x02 \x01(\x0e\x32\x44.ai.verta.monitoring.BatchIngestRequest.ColumnSpec.IOTypeEnum.IOType\x12\x16\n\x0e\x63onfidence_for\x18\x03 \x01(\t\x12\x18\n\x10ground_truth_for\x18\x04 \x01(\t\x1aL\n\nIOTypeEnum\">\n\x06IOType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\t\n\x05INPUT\x10\x01\x12\n\n\x06OUTPUT\x10\x02\x12\x10\n\x0cGROUND_TRUTH\x10\x03\x1ah\n\x12IngestColumnsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x41\n\x05value\x18\x02 \x01(\x0b\x32\x32.ai.verta.monitoring.BatchIngestRequest.ColumnSpec:\x02\x38\x01\x1aO\n\x10\x45ncodingTypeEnum\";\n\x0c\x45ncodingType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x07\n\x03\x43SV\x10\x01\x12\x08\n\x04JSON\x10\x02\x12\x0b\n\x07PARQUET\x10\x03\x1aH\n\x13\x43ompressionTypeEnum\"1\n\x0f\x43ompressionType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x07\n\x03RAW\x10\x01\x12\x08\n\x04GZIP\x10\x02\x1a\n\n\x08ResponseB\x0b\n\ttimestampB\t\n\x07\x64\x61taset2\xac\x01\n\rIngestService\x12\x9a\x01\n\x0b\x62\x61tchIngest\x12\'.ai.verta.monitoring.BatchIngestRequest\x1a\x30.ai.verta.monitoring.BatchIngestRequest.Response\"0\x82\xd3\xe4\x93\x02*\"%/api/v1/monitoring/ingest/batchIngest:\x01*BEP\x01ZAgithub.com/VertaAI/modeldb/protos/gen/go/protos/public/monitoringb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'monitoring.Ingest_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'P\001ZAgithub.com/VertaAI/modeldb/protos/gen/go/protos/public/monitoring'
  _BATCHINGESTREQUEST_INGESTCOLUMNSENTRY._options = None
  _BATCHINGESTREQUEST_INGESTCOLUMNSENTRY._serialized_options = b'8\001'
  _INGESTSERVICE.methods_by_name['batchIngest']._options = None
  _INGESTSERVICE.methods_by_name['batchIngest']._serialized_options = b'\202\323\344\223\002*\"%/api/v1/monitoring/ingest/batchIngest:\001*'
  _BATCHINGESTREQUEST._serialized_start=113
  _BATCHINGESTREQUEST._serialized_end=1407
  _BATCHINGESTREQUEST_SOURCETYPEENUM._serialized_start=763
  _BATCHINGESTREQUEST_SOURCETYPEENUM._serialized_end=855
  _BATCHINGESTREQUEST_SOURCETYPEENUM_SOURCETYPE._serialized_start=781
  _BATCHINGESTREQUEST_SOURCETYPEENUM_SOURCETYPE._serialized_end=855
  _BATCHINGESTREQUEST_COLUMNSPEC._serialized_start=858
  _BATCHINGESTREQUEST_COLUMNSPEC._serialized_end=1110
  _BATCHINGESTREQUEST_COLUMNSPEC_IOTYPEENUM._serialized_start=1034
  _BATCHINGESTREQUEST_COLUMNSPEC_IOTYPEENUM._serialized_end=1110
  _BATCHINGESTREQUEST_COLUMNSPEC_IOTYPEENUM_IOTYPE._serialized_start=1048
  _BATCHINGESTREQUEST_COLUMNSPEC_IOTYPEENUM_IOTYPE._serialized_end=1110
  _BATCHINGESTREQUEST_INGESTCOLUMNSENTRY._serialized_start=1112
  _BATCHINGESTREQUEST_INGESTCOLUMNSENTRY._serialized_end=1216
  _BATCHINGESTREQUEST_ENCODINGTYPEENUM._serialized_start=1218
  _BATCHINGESTREQUEST_ENCODINGTYPEENUM._serialized_end=1297
  _BATCHINGESTREQUEST_ENCODINGTYPEENUM_ENCODINGTYPE._serialized_start=1238
  _BATCHINGESTREQUEST_ENCODINGTYPEENUM_ENCODINGTYPE._serialized_end=1297
  _BATCHINGESTREQUEST_COMPRESSIONTYPEENUM._serialized_start=1299
  _BATCHINGESTREQUEST_COMPRESSIONTYPEENUM._serialized_end=1371
  _BATCHINGESTREQUEST_COMPRESSIONTYPEENUM_COMPRESSIONTYPE._serialized_start=1322
  _BATCHINGESTREQUEST_COMPRESSIONTYPEENUM_COMPRESSIONTYPE._serialized_end=1371
  _BATCHINGESTREQUEST_RESPONSE._serialized_start=1373
  _BATCHINGESTREQUEST_RESPONSE._serialized_end=1383
  _INGESTSERVICE._serialized_start=1410
  _INGESTSERVICE._serialized_end=1582
# @@protoc_insertion_point(module_scope)
