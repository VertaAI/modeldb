# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from ..uac import Session_pb2 as uac_dot_Session__pb2
from ..uac import UACService_pb2 as uac_dot_UACService__pb2


class SessionServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.createSession = channel.unary_unary(
        '/ai.verta.uac.SessionService/createSession',
        request_serializer=uac_dot_Session__pb2.CreateSessionRequest.SerializeToString,
        response_deserializer=uac_dot_Session__pb2.Session.FromString,
        )
    self.findSession = channel.unary_unary(
        '/ai.verta.uac.SessionService/findSession',
        request_serializer=uac_dot_Session__pb2.FindSessionRequest.SerializeToString,
        response_deserializer=uac_dot_Session__pb2.FindSessionRequest.Response.FromString,
        )
    self.deleteSession = channel.unary_unary(
        '/ai.verta.uac.SessionService/deleteSession',
        request_serializer=uac_dot_Session__pb2.DeleteSessionRequest.SerializeToString,
        response_deserializer=uac_dot_UACService__pb2.Empty.FromString,
        )


class SessionServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def createSession(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def findSession(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def deleteSession(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SessionServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'createSession': grpc.unary_unary_rpc_method_handler(
          servicer.createSession,
          request_deserializer=uac_dot_Session__pb2.CreateSessionRequest.FromString,
          response_serializer=uac_dot_Session__pb2.Session.SerializeToString,
      ),
      'findSession': grpc.unary_unary_rpc_method_handler(
          servicer.findSession,
          request_deserializer=uac_dot_Session__pb2.FindSessionRequest.FromString,
          response_serializer=uac_dot_Session__pb2.FindSessionRequest.Response.SerializeToString,
      ),
      'deleteSession': grpc.unary_unary_rpc_method_handler(
          servicer.deleteSession,
          request_deserializer=uac_dot_Session__pb2.DeleteSessionRequest.FromString,
          response_serializer=uac_dot_UACService__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ai.verta.uac.SessionService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
