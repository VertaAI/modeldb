# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ..uac import Event_pb2 as uac_dot_Event__pb2
from ..uac import UACService_pb2 as uac_dot_UACService__pb2


class EventServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createEvent = channel.unary_unary(
                '/ai.verta.uac.EventService/createEvent',
                request_serializer=uac_dot_Event__pb2.CreateEventRequest.SerializeToString,
                response_deserializer=uac_dot_UACService__pb2.Empty.FromString,
                )
        self.createWebhook = channel.unary_unary(
                '/ai.verta.uac.EventService/createWebhook',
                request_serializer=uac_dot_Event__pb2.CreateWebhookRequest.SerializeToString,
                response_deserializer=uac_dot_Event__pb2.Webhook.FromString,
                )
        self.updateWebhook = channel.unary_unary(
                '/ai.verta.uac.EventService/updateWebhook',
                request_serializer=uac_dot_Event__pb2.UpdateWebhookRequest.SerializeToString,
                response_deserializer=uac_dot_Event__pb2.Webhook.FromString,
                )
        self.findWebhook = channel.unary_unary(
                '/ai.verta.uac.EventService/findWebhook',
                request_serializer=uac_dot_Event__pb2.FindWebhookRequest.SerializeToString,
                response_deserializer=uac_dot_Event__pb2.FindWebhookRequest.Response.FromString,
                )
        self.deleteWebhook = channel.unary_unary(
                '/ai.verta.uac.EventService/deleteWebhook',
                request_serializer=uac_dot_Event__pb2.DeleteWebhookRequest.SerializeToString,
                response_deserializer=uac_dot_UACService__pb2.Empty.FromString,
                )
        self.findWebhookCall = channel.unary_unary(
                '/ai.verta.uac.EventService/findWebhookCall',
                request_serializer=uac_dot_Event__pb2.FindWebhookCallRequest.SerializeToString,
                response_deserializer=uac_dot_Event__pb2.FindWebhookCallRequest.Response.FromString,
                )
        self.retriggerWebhookCall = channel.unary_unary(
                '/ai.verta.uac.EventService/retriggerWebhookCall',
                request_serializer=uac_dot_Event__pb2.RetriggerWebhookCallRequest.SerializeToString,
                response_deserializer=uac_dot_Event__pb2.WebhookCall.FromString,
                )


class EventServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createWebhook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateWebhook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findWebhook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteWebhook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findWebhookCall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def retriggerWebhookCall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EventServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.createEvent,
                    request_deserializer=uac_dot_Event__pb2.CreateEventRequest.FromString,
                    response_serializer=uac_dot_UACService__pb2.Empty.SerializeToString,
            ),
            'createWebhook': grpc.unary_unary_rpc_method_handler(
                    servicer.createWebhook,
                    request_deserializer=uac_dot_Event__pb2.CreateWebhookRequest.FromString,
                    response_serializer=uac_dot_Event__pb2.Webhook.SerializeToString,
            ),
            'updateWebhook': grpc.unary_unary_rpc_method_handler(
                    servicer.updateWebhook,
                    request_deserializer=uac_dot_Event__pb2.UpdateWebhookRequest.FromString,
                    response_serializer=uac_dot_Event__pb2.Webhook.SerializeToString,
            ),
            'findWebhook': grpc.unary_unary_rpc_method_handler(
                    servicer.findWebhook,
                    request_deserializer=uac_dot_Event__pb2.FindWebhookRequest.FromString,
                    response_serializer=uac_dot_Event__pb2.FindWebhookRequest.Response.SerializeToString,
            ),
            'deleteWebhook': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteWebhook,
                    request_deserializer=uac_dot_Event__pb2.DeleteWebhookRequest.FromString,
                    response_serializer=uac_dot_UACService__pb2.Empty.SerializeToString,
            ),
            'findWebhookCall': grpc.unary_unary_rpc_method_handler(
                    servicer.findWebhookCall,
                    request_deserializer=uac_dot_Event__pb2.FindWebhookCallRequest.FromString,
                    response_serializer=uac_dot_Event__pb2.FindWebhookCallRequest.Response.SerializeToString,
            ),
            'retriggerWebhookCall': grpc.unary_unary_rpc_method_handler(
                    servicer.retriggerWebhookCall,
                    request_deserializer=uac_dot_Event__pb2.RetriggerWebhookCallRequest.FromString,
                    response_serializer=uac_dot_Event__pb2.WebhookCall.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ai.verta.uac.EventService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EventService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.EventService/createEvent',
            uac_dot_Event__pb2.CreateEventRequest.SerializeToString,
            uac_dot_UACService__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createWebhook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.EventService/createWebhook',
            uac_dot_Event__pb2.CreateWebhookRequest.SerializeToString,
            uac_dot_Event__pb2.Webhook.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateWebhook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.EventService/updateWebhook',
            uac_dot_Event__pb2.UpdateWebhookRequest.SerializeToString,
            uac_dot_Event__pb2.Webhook.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findWebhook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.EventService/findWebhook',
            uac_dot_Event__pb2.FindWebhookRequest.SerializeToString,
            uac_dot_Event__pb2.FindWebhookRequest.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteWebhook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.EventService/deleteWebhook',
            uac_dot_Event__pb2.DeleteWebhookRequest.SerializeToString,
            uac_dot_UACService__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findWebhookCall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.EventService/findWebhookCall',
            uac_dot_Event__pb2.FindWebhookCallRequest.SerializeToString,
            uac_dot_Event__pb2.FindWebhookCallRequest.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def retriggerWebhookCall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ai.verta.uac.EventService/retriggerWebhookCall',
            uac_dot_Event__pb2.RetriggerWebhookCallRequest.SerializeToString,
            uac_dot_Event__pb2.WebhookCall.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
