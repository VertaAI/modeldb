// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package registry

import (
	context "context"
	common "github.com/VertaAI/modeldb/protos/gen/go/protos/public/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CustomAttributeServiceClient is the client API for CustomAttributeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CustomAttributeServiceClient interface {
	SearchCustomAttributeDefinitions(ctx context.Context, in *SearchCustomAttributeDefinitions, opts ...grpc.CallOption) (*SearchCustomAttributeDefinitions_Response, error)
	SetCustomAttributeDefinition(ctx context.Context, in *SetCustomAttributeDefinition, opts ...grpc.CallOption) (*SetCustomAttributeDefinition_Response, error)
	DeleteCustomAttributeDefinition(ctx context.Context, in *DeleteCustomAttributeDefinition, opts ...grpc.CallOption) (*common.Empty, error)
	SearchCustomAttributeValues(ctx context.Context, in *SearchCustomAttributeValues, opts ...grpc.CallOption) (*SearchCustomAttributeValues_Response, error)
}

type customAttributeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCustomAttributeServiceClient(cc grpc.ClientConnInterface) CustomAttributeServiceClient {
	return &customAttributeServiceClient{cc}
}

func (c *customAttributeServiceClient) SearchCustomAttributeDefinitions(ctx context.Context, in *SearchCustomAttributeDefinitions, opts ...grpc.CallOption) (*SearchCustomAttributeDefinitions_Response, error) {
	out := new(SearchCustomAttributeDefinitions_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.registry.CustomAttributeService/searchCustomAttributeDefinitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAttributeServiceClient) SetCustomAttributeDefinition(ctx context.Context, in *SetCustomAttributeDefinition, opts ...grpc.CallOption) (*SetCustomAttributeDefinition_Response, error) {
	out := new(SetCustomAttributeDefinition_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.registry.CustomAttributeService/setCustomAttributeDefinition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAttributeServiceClient) DeleteCustomAttributeDefinition(ctx context.Context, in *DeleteCustomAttributeDefinition, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/ai.verta.registry.CustomAttributeService/deleteCustomAttributeDefinition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAttributeServiceClient) SearchCustomAttributeValues(ctx context.Context, in *SearchCustomAttributeValues, opts ...grpc.CallOption) (*SearchCustomAttributeValues_Response, error) {
	out := new(SearchCustomAttributeValues_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.registry.CustomAttributeService/searchCustomAttributeValues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomAttributeServiceServer is the server API for CustomAttributeService service.
type CustomAttributeServiceServer interface {
	SearchCustomAttributeDefinitions(context.Context, *SearchCustomAttributeDefinitions) (*SearchCustomAttributeDefinitions_Response, error)
	SetCustomAttributeDefinition(context.Context, *SetCustomAttributeDefinition) (*SetCustomAttributeDefinition_Response, error)
	DeleteCustomAttributeDefinition(context.Context, *DeleteCustomAttributeDefinition) (*common.Empty, error)
	SearchCustomAttributeValues(context.Context, *SearchCustomAttributeValues) (*SearchCustomAttributeValues_Response, error)
}

// UnimplementedCustomAttributeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCustomAttributeServiceServer struct {
}

func (*UnimplementedCustomAttributeServiceServer) SearchCustomAttributeDefinitions(context.Context, *SearchCustomAttributeDefinitions) (*SearchCustomAttributeDefinitions_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchCustomAttributeDefinitions not implemented")
}
func (*UnimplementedCustomAttributeServiceServer) SetCustomAttributeDefinition(context.Context, *SetCustomAttributeDefinition) (*SetCustomAttributeDefinition_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCustomAttributeDefinition not implemented")
}
func (*UnimplementedCustomAttributeServiceServer) DeleteCustomAttributeDefinition(context.Context, *DeleteCustomAttributeDefinition) (*common.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCustomAttributeDefinition not implemented")
}
func (*UnimplementedCustomAttributeServiceServer) SearchCustomAttributeValues(context.Context, *SearchCustomAttributeValues) (*SearchCustomAttributeValues_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchCustomAttributeValues not implemented")
}

func RegisterCustomAttributeServiceServer(s *grpc.Server, srv CustomAttributeServiceServer) {
	s.RegisterService(&_CustomAttributeService_serviceDesc, srv)
}

func _CustomAttributeService_SearchCustomAttributeDefinitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchCustomAttributeDefinitions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAttributeServiceServer).SearchCustomAttributeDefinitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.registry.CustomAttributeService/SearchCustomAttributeDefinitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAttributeServiceServer).SearchCustomAttributeDefinitions(ctx, req.(*SearchCustomAttributeDefinitions))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAttributeService_SetCustomAttributeDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetCustomAttributeDefinition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAttributeServiceServer).SetCustomAttributeDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.registry.CustomAttributeService/SetCustomAttributeDefinition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAttributeServiceServer).SetCustomAttributeDefinition(ctx, req.(*SetCustomAttributeDefinition))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAttributeService_DeleteCustomAttributeDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCustomAttributeDefinition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAttributeServiceServer).DeleteCustomAttributeDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.registry.CustomAttributeService/DeleteCustomAttributeDefinition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAttributeServiceServer).DeleteCustomAttributeDefinition(ctx, req.(*DeleteCustomAttributeDefinition))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAttributeService_SearchCustomAttributeValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchCustomAttributeValues)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAttributeServiceServer).SearchCustomAttributeValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.registry.CustomAttributeService/SearchCustomAttributeValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAttributeServiceServer).SearchCustomAttributeValues(ctx, req.(*SearchCustomAttributeValues))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomAttributeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ai.verta.registry.CustomAttributeService",
	HandlerType: (*CustomAttributeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "searchCustomAttributeDefinitions",
			Handler:    _CustomAttributeService_SearchCustomAttributeDefinitions_Handler,
		},
		{
			MethodName: "setCustomAttributeDefinition",
			Handler:    _CustomAttributeService_SetCustomAttributeDefinition_Handler,
		},
		{
			MethodName: "deleteCustomAttributeDefinition",
			Handler:    _CustomAttributeService_DeleteCustomAttributeDefinition_Handler,
		},
		{
			MethodName: "searchCustomAttributeValues",
			Handler:    _CustomAttributeService_SearchCustomAttributeValues_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "registry/CustomAttributeService.proto",
}
