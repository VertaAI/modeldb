// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.11.2
// source: registry/StageService.proto

package registry

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/protobuf/field_mask"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StageEnum_Stage int32

const (
	StageEnum_UNKNOWN     StageEnum_Stage = 0 // Error
	StageEnum_DEVELOPMENT StageEnum_Stage = 1
	StageEnum_STAGING     StageEnum_Stage = 2
	StageEnum_PRODUCTION  StageEnum_Stage = 3
	StageEnum_ARCHIVED    StageEnum_Stage = 4
	StageEnum_UNASSIGNED  StageEnum_Stage = 5
)

// Enum value maps for StageEnum_Stage.
var (
	StageEnum_Stage_name = map[int32]string{
		0: "UNKNOWN",
		1: "DEVELOPMENT",
		2: "STAGING",
		3: "PRODUCTION",
		4: "ARCHIVED",
		5: "UNASSIGNED",
	}
	StageEnum_Stage_value = map[string]int32{
		"UNKNOWN":     0,
		"DEVELOPMENT": 1,
		"STAGING":     2,
		"PRODUCTION":  3,
		"ARCHIVED":    4,
		"UNASSIGNED":  5,
	}
)

func (x StageEnum_Stage) Enum() *StageEnum_Stage {
	p := new(StageEnum_Stage)
	*p = x
	return p
}

func (x StageEnum_Stage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StageEnum_Stage) Descriptor() protoreflect.EnumDescriptor {
	return file_registry_StageService_proto_enumTypes[0].Descriptor()
}

func (StageEnum_Stage) Type() protoreflect.EnumType {
	return &file_registry_StageService_proto_enumTypes[0]
}

func (x StageEnum_Stage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StageEnum_Stage.Descriptor instead.
func (StageEnum_Stage) EnumDescriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{0, 0}
}

type TransitionStateEnum_TransitionState int32

const (
	TransitionStateEnum_UNKNOWN TransitionStateEnum_TransitionState = 0 // Error
	// It is approved only if it has one approval and no rejections
	TransitionStateEnum_APPROVED TransitionStateEnum_TransitionState = 1
	// It is rejected if it has any rejection
	TransitionStateEnum_REJECTED TransitionStateEnum_TransitionState = 2
	// It is pending if there are no approvals or rejections
	TransitionStateEnum_PENDING TransitionStateEnum_TransitionState = 3
	// It is closed if the user has explicitly requested it to be closed
	TransitionStateEnum_CLOSED TransitionStateEnum_TransitionState = 4
	// It has been committed and people can't close, approve or reject anymore
	TransitionStateEnum_COMMITTED TransitionStateEnum_TransitionState = 5 // NOTE: only the last behavior from the user counts. For example, if I approve and then reject, it counts as a rejection.
)

// Enum value maps for TransitionStateEnum_TransitionState.
var (
	TransitionStateEnum_TransitionState_name = map[int32]string{
		0: "UNKNOWN",
		1: "APPROVED",
		2: "REJECTED",
		3: "PENDING",
		4: "CLOSED",
		5: "COMMITTED",
	}
	TransitionStateEnum_TransitionState_value = map[string]int32{
		"UNKNOWN":   0,
		"APPROVED":  1,
		"REJECTED":  2,
		"PENDING":   3,
		"CLOSED":    4,
		"COMMITTED": 5,
	}
)

func (x TransitionStateEnum_TransitionState) Enum() *TransitionStateEnum_TransitionState {
	p := new(TransitionStateEnum_TransitionState)
	*p = x
	return p
}

func (x TransitionStateEnum_TransitionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransitionStateEnum_TransitionState) Descriptor() protoreflect.EnumDescriptor {
	return file_registry_StageService_proto_enumTypes[1].Descriptor()
}

func (TransitionStateEnum_TransitionState) Type() protoreflect.EnumType {
	return &file_registry_StageService_proto_enumTypes[1]
}

func (x TransitionStateEnum_TransitionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransitionStateEnum_TransitionState.Descriptor instead.
func (TransitionStateEnum_TransitionState) EnumDescriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{1, 0}
}

type StageEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StageEnum) Reset() {
	*x = StageEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageEnum) ProtoMessage() {}

func (x *StageEnum) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageEnum.ProtoReflect.Descriptor instead.
func (*StageEnum) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{0}
}

// Tracks what is the state of a requested transition
type TransitionStateEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TransitionStateEnum) Reset() {
	*x = TransitionStateEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransitionStateEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransitionStateEnum) ProtoMessage() {}

func (x *TransitionStateEnum) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransitionStateEnum.ProtoReflect.Descriptor instead.
func (*TransitionStateEnum) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{1}
}

type Transition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Current stage. Automatically populated from the backend
	SourceStage StageEnum_Stage `protobuf:"varint,1,opt,name=source_stage,json=sourceStage,proto3,enum=ai.verta.registry.StageEnum_Stage" json:"source_stage,omitempty"`
	// Desired stage sent as part of the transition request
	DesiredStage StageEnum_Stage `protobuf:"varint,2,opt,name=desired_stage,json=desiredStage,proto3,enum=ai.verta.registry.StageEnum_Stage" json:"desired_stage,omitempty"`
	// Current state of the transition
	State TransitionStateEnum_TransitionState `protobuf:"varint,3,opt,name=state,proto3,enum=ai.verta.registry.TransitionStateEnum_TransitionState" json:"state,omitempty"`
	// Transition Id, Automatically populated from the backend
	Id uint64 `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Transition) Reset() {
	*x = Transition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transition) ProtoMessage() {}

func (x *Transition) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transition.ProtoReflect.Descriptor instead.
func (*Transition) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{2}
}

func (x *Transition) GetSourceStage() StageEnum_Stage {
	if x != nil {
		return x.SourceStage
	}
	return StageEnum_UNKNOWN
}

func (x *Transition) GetDesiredStage() StageEnum_Stage {
	if x != nil {
		return x.DesiredStage
	}
	return StageEnum_UNKNOWN
}

func (x *Transition) GetState() TransitionStateEnum_TransitionState {
	if x != nil {
		return x.State
	}
	return TransitionStateEnum_UNKNOWN
}

func (x *Transition) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ApprovalOfTransition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApprovalOfTransition) Reset() {
	*x = ApprovalOfTransition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovalOfTransition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalOfTransition) ProtoMessage() {}

func (x *ApprovalOfTransition) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalOfTransition.ProtoReflect.Descriptor instead.
func (*ApprovalOfTransition) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{3}
}

type RejectionOfTransition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RejectionOfTransition) Reset() {
	*x = RejectionOfTransition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectionOfTransition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectionOfTransition) ProtoMessage() {}

func (x *RejectionOfTransition) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectionOfTransition.ProtoReflect.Descriptor instead.
func (*RejectionOfTransition) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{4}
}

type CloseOfTransition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseOfTransition) Reset() {
	*x = CloseOfTransition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseOfTransition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseOfTransition) ProtoMessage() {}

func (x *CloseOfTransition) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseOfTransition.ProtoReflect.Descriptor instead.
func (*CloseOfTransition) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{5}
}

type StageUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stage StageEnum_Stage `protobuf:"varint,1,opt,name=stage,proto3,enum=ai.verta.registry.StageEnum_Stage" json:"stage,omitempty"`
}

func (x *StageUpdate) Reset() {
	*x = StageUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageUpdate) ProtoMessage() {}

func (x *StageUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageUpdate.ProtoReflect.Descriptor instead.
func (*StageUpdate) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{6}
}

func (x *StageUpdate) GetStage() StageEnum_Stage {
	if x != nil {
		return x.Stage
	}
	return StageEnum_UNKNOWN
}

type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ModelVersionId uint64 `protobuf:"varint,2,opt,name=model_version_id,json=modelVersionId,proto3" json:"model_version_id,omitempty"`
	AuthorId       string `protobuf:"bytes,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	// Track time
	TimeCreated int64 `protobuf:"varint,4,opt,name=time_created,json=timeCreated,proto3" json:"time_created,omitempty"`
	// Text provided by the user
	Comment string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	// Effective oneof for the following fields (all might be missing and that's fine too)
	Transition *Transition            `protobuf:"bytes,6,opt,name=transition,proto3" json:"transition,omitempty"`
	Approval   *ApprovalOfTransition  `protobuf:"bytes,7,opt,name=approval,proto3" json:"approval,omitempty"`
	Rejection  *RejectionOfTransition `protobuf:"bytes,8,opt,name=rejection,proto3" json:"rejection,omitempty"`
	Close      *CloseOfTransition     `protobuf:"bytes,9,opt,name=close,proto3" json:"close,omitempty"`
	Update     *StageUpdate           `protobuf:"bytes,10,opt,name=update,proto3" json:"update,omitempty"`
	// Activity state while the transition happen
	ActivityState TransitionStateEnum_TransitionState `protobuf:"varint,11,opt,name=activity_state,json=activityState,proto3,enum=ai.verta.registry.TransitionStateEnum_TransitionState" json:"activity_state,omitempty"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{7}
}

func (x *Activity) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Activity) GetModelVersionId() uint64 {
	if x != nil {
		return x.ModelVersionId
	}
	return 0
}

func (x *Activity) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *Activity) GetTimeCreated() int64 {
	if x != nil {
		return x.TimeCreated
	}
	return 0
}

func (x *Activity) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Activity) GetTransition() *Transition {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *Activity) GetApproval() *ApprovalOfTransition {
	if x != nil {
		return x.Approval
	}
	return nil
}

func (x *Activity) GetRejection() *RejectionOfTransition {
	if x != nil {
		return x.Rejection
	}
	return nil
}

func (x *Activity) GetClose() *CloseOfTransition {
	if x != nil {
		return x.Close
	}
	return nil
}

func (x *Activity) GetUpdate() *StageUpdate {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *Activity) GetActivityState() TransitionStateEnum_TransitionState {
	if x != nil {
		return x.ActivityState
	}
	return TransitionStateEnum_UNKNOWN
}

// Actions
type CreateTransitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelVersionId uint64          `protobuf:"varint,1,opt,name=model_version_id,json=modelVersionId,proto3" json:"model_version_id,omitempty"`
	DesiredStage   StageEnum_Stage `protobuf:"varint,2,opt,name=desired_stage,json=desiredStage,proto3,enum=ai.verta.registry.StageEnum_Stage" json:"desired_stage,omitempty"`
	Comment        string          `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CreateTransitionRequest) Reset() {
	*x = CreateTransitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransitionRequest) ProtoMessage() {}

func (x *CreateTransitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransitionRequest.ProtoReflect.Descriptor instead.
func (*CreateTransitionRequest) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{8}
}

func (x *CreateTransitionRequest) GetModelVersionId() uint64 {
	if x != nil {
		return x.ModelVersionId
	}
	return 0
}

func (x *CreateTransitionRequest) GetDesiredStage() StageEnum_Stage {
	if x != nil {
		return x.DesiredStage
	}
	return StageEnum_UNKNOWN
}

func (x *CreateTransitionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ApproveTransitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransitionId uint64 `protobuf:"varint,1,opt,name=transition_id,json=transitionId,proto3" json:"transition_id,omitempty"`
	Comment      string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *ApproveTransitionRequest) Reset() {
	*x = ApproveTransitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveTransitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveTransitionRequest) ProtoMessage() {}

func (x *ApproveTransitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveTransitionRequest.ProtoReflect.Descriptor instead.
func (*ApproveTransitionRequest) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{9}
}

func (x *ApproveTransitionRequest) GetTransitionId() uint64 {
	if x != nil {
		return x.TransitionId
	}
	return 0
}

func (x *ApproveTransitionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type RejectTransitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransitionId uint64 `protobuf:"varint,1,opt,name=transition_id,json=transitionId,proto3" json:"transition_id,omitempty"`
	Comment      string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *RejectTransitionRequest) Reset() {
	*x = RejectTransitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectTransitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTransitionRequest) ProtoMessage() {}

func (x *RejectTransitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTransitionRequest.ProtoReflect.Descriptor instead.
func (*RejectTransitionRequest) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{10}
}

func (x *RejectTransitionRequest) GetTransitionId() uint64 {
	if x != nil {
		return x.TransitionId
	}
	return 0
}

func (x *RejectTransitionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type CloseTransitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransitionId uint64 `protobuf:"varint,1,opt,name=transition_id,json=transitionId,proto3" json:"transition_id,omitempty"`
	Comment      string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CloseTransitionRequest) Reset() {
	*x = CloseTransitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseTransitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseTransitionRequest) ProtoMessage() {}

func (x *CloseTransitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseTransitionRequest.ProtoReflect.Descriptor instead.
func (*CloseTransitionRequest) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{11}
}

func (x *CloseTransitionRequest) GetTransitionId() uint64 {
	if x != nil {
		return x.TransitionId
	}
	return 0
}

func (x *CloseTransitionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type CommitTransitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransitionId uint64 `protobuf:"varint,1,opt,name=transition_id,json=transitionId,proto3" json:"transition_id,omitempty"`
	Comment      string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CommitTransitionRequest) Reset() {
	*x = CommitTransitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitTransitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTransitionRequest) ProtoMessage() {}

func (x *CommitTransitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitTransitionRequest.ProtoReflect.Descriptor instead.
func (*CommitTransitionRequest) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{12}
}

func (x *CommitTransitionRequest) GetTransitionId() uint64 {
	if x != nil {
		return x.TransitionId
	}
	return 0
}

func (x *CommitTransitionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type CreateCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelVersionId uint64 `protobuf:"varint,1,opt,name=model_version_id,json=modelVersionId,proto3" json:"model_version_id,omitempty"`
	Comment        string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{13}
}

func (x *CreateCommentRequest) GetModelVersionId() uint64 {
	if x != nil {
		return x.ModelVersionId
	}
	return 0
}

func (x *CreateCommentRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type FindActivitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// At least one of the following needs to be provided
	RegisteredModelId uint64 `protobuf:"varint,1,opt,name=registered_model_id,json=registeredModelId,proto3" json:"registered_model_id,omitempty"`
	ModelVersionId    uint64 `protobuf:"varint,2,opt,name=model_version_id,json=modelVersionId,proto3" json:"model_version_id,omitempty"`
}

func (x *FindActivitiesRequest) Reset() {
	*x = FindActivitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindActivitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindActivitiesRequest) ProtoMessage() {}

func (x *FindActivitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindActivitiesRequest.ProtoReflect.Descriptor instead.
func (*FindActivitiesRequest) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{14}
}

func (x *FindActivitiesRequest) GetRegisteredModelId() uint64 {
	if x != nil {
		return x.RegisteredModelId
	}
	return 0
}

func (x *FindActivitiesRequest) GetModelVersionId() uint64 {
	if x != nil {
		return x.ModelVersionId
	}
	return 0
}

type FindTransitionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// At least one of the following needs to be provided
	RegisteredModelId uint64 `protobuf:"varint,1,opt,name=registered_model_id,json=registeredModelId,proto3" json:"registered_model_id,omitempty"`
	ModelVersionId    uint64 `protobuf:"varint,2,opt,name=model_version_id,json=modelVersionId,proto3" json:"model_version_id,omitempty"`
	// Current state. If empty, return in any state
	State []TransitionStateEnum_TransitionState `protobuf:"varint,3,rep,packed,name=state,proto3,enum=ai.verta.registry.TransitionStateEnum_TransitionState" json:"state,omitempty"`
}

func (x *FindTransitionsRequest) Reset() {
	*x = FindTransitionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTransitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTransitionsRequest) ProtoMessage() {}

func (x *FindTransitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTransitionsRequest.ProtoReflect.Descriptor instead.
func (*FindTransitionsRequest) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{15}
}

func (x *FindTransitionsRequest) GetRegisteredModelId() uint64 {
	if x != nil {
		return x.RegisteredModelId
	}
	return 0
}

func (x *FindTransitionsRequest) GetModelVersionId() uint64 {
	if x != nil {
		return x.ModelVersionId
	}
	return 0
}

func (x *FindTransitionsRequest) GetState() []TransitionStateEnum_TransitionState {
	if x != nil {
		return x.State
	}
	return nil
}

type UpdateStageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelVersionId uint64          `protobuf:"varint,1,opt,name=model_version_id,json=modelVersionId,proto3" json:"model_version_id,omitempty"`
	Stage          StageEnum_Stage `protobuf:"varint,2,opt,name=stage,proto3,enum=ai.verta.registry.StageEnum_Stage" json:"stage,omitempty"`
	Comment        string          `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *UpdateStageRequest) Reset() {
	*x = UpdateStageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStageRequest) ProtoMessage() {}

func (x *UpdateStageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStageRequest.ProtoReflect.Descriptor instead.
func (*UpdateStageRequest) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateStageRequest) GetModelVersionId() uint64 {
	if x != nil {
		return x.ModelVersionId
	}
	return 0
}

func (x *UpdateStageRequest) GetStage() StageEnum_Stage {
	if x != nil {
		return x.Stage
	}
	return StageEnum_UNKNOWN
}

func (x *UpdateStageRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type FindActivitiesRequest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activities []*Activity `protobuf:"bytes,1,rep,name=activities,proto3" json:"activities,omitempty"`
}

func (x *FindActivitiesRequest_Response) Reset() {
	*x = FindActivitiesRequest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindActivitiesRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindActivitiesRequest_Response) ProtoMessage() {}

func (x *FindActivitiesRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindActivitiesRequest_Response.ProtoReflect.Descriptor instead.
func (*FindActivitiesRequest_Response) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{14, 0}
}

func (x *FindActivitiesRequest_Response) GetActivities() []*Activity {
	if x != nil {
		return x.Activities
	}
	return nil
}

type FindTransitionsRequest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Only things of type transition can be returned
	Activities []*Activity `protobuf:"bytes,1,rep,name=activities,proto3" json:"activities,omitempty"`
}

func (x *FindTransitionsRequest_Response) Reset() {
	*x = FindTransitionsRequest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registry_StageService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTransitionsRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTransitionsRequest_Response) ProtoMessage() {}

func (x *FindTransitionsRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_registry_StageService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTransitionsRequest_Response.ProtoReflect.Descriptor instead.
func (*FindTransitionsRequest_Response) Descriptor() ([]byte, []int) {
	return file_registry_StageService_proto_rawDescGZIP(), []int{15, 0}
}

func (x *FindTransitionsRequest_Response) GetActivities() []*Activity {
	if x != nil {
		return x.Activities
	}
	return nil
}

var File_registry_StageService_proto protoreflect.FileDescriptor

var file_registry_StageService_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x6d, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x22, 0x60, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x45, 0x56, 0x45, 0x4c, 0x4f, 0x50, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x05, 0x22,
	0x79, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x22, 0x62, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x05, 0x22, 0xfa, 0x01, 0x0a, 0x0a, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0c, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x47, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x73,
	0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x4f, 0x66, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x17, 0x0a, 0x15, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x4f, 0x66, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a,
	0x0b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x22, 0xbd, 0x04, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4f, 0x66, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x46, 0x0a, 0x09, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x66, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0d,
	0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x75,
	0x6d, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x59, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x58, 0x0a, 0x17, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x16, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x58, 0x0a,
	0x17, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x5a, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x47, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x22, 0x89, 0x02, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x1a, 0x47, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3b, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x92, 0x01, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x32, 0x97, 0x0a, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x8e, 0x01, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2f,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x8b, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22,
	0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2f, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x88, 0x01, 0x0a, 0x0f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x82, 0x01, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x8b, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x2e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7c, 0x0a,
	0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x25, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x9b, 0x01, 0x0a, 0x0e,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x28,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x22, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2f, 0x66, 0x69, 0x6e, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x9f, 0x01, 0x0a, 0x0f, 0x46, 0x69,
	0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x2f, 0x66, 0x69, 0x6e, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x43, 0x50, 0x01, 0x5a,
	0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x56, 0x65, 0x72, 0x74,
	0x61, 0x41, 0x49, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_registry_StageService_proto_rawDescOnce sync.Once
	file_registry_StageService_proto_rawDescData = file_registry_StageService_proto_rawDesc
)

func file_registry_StageService_proto_rawDescGZIP() []byte {
	file_registry_StageService_proto_rawDescOnce.Do(func() {
		file_registry_StageService_proto_rawDescData = protoimpl.X.CompressGZIP(file_registry_StageService_proto_rawDescData)
	})
	return file_registry_StageService_proto_rawDescData
}

var file_registry_StageService_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_registry_StageService_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_registry_StageService_proto_goTypes = []interface{}{
	(StageEnum_Stage)(0),                     // 0: ai.verta.registry.StageEnum.Stage
	(TransitionStateEnum_TransitionState)(0), // 1: ai.verta.registry.TransitionStateEnum.TransitionState
	(*StageEnum)(nil),                        // 2: ai.verta.registry.StageEnum
	(*TransitionStateEnum)(nil),              // 3: ai.verta.registry.TransitionStateEnum
	(*Transition)(nil),                       // 4: ai.verta.registry.Transition
	(*ApprovalOfTransition)(nil),             // 5: ai.verta.registry.ApprovalOfTransition
	(*RejectionOfTransition)(nil),            // 6: ai.verta.registry.RejectionOfTransition
	(*CloseOfTransition)(nil),                // 7: ai.verta.registry.CloseOfTransition
	(*StageUpdate)(nil),                      // 8: ai.verta.registry.StageUpdate
	(*Activity)(nil),                         // 9: ai.verta.registry.Activity
	(*CreateTransitionRequest)(nil),          // 10: ai.verta.registry.CreateTransitionRequest
	(*ApproveTransitionRequest)(nil),         // 11: ai.verta.registry.ApproveTransitionRequest
	(*RejectTransitionRequest)(nil),          // 12: ai.verta.registry.RejectTransitionRequest
	(*CloseTransitionRequest)(nil),           // 13: ai.verta.registry.CloseTransitionRequest
	(*CommitTransitionRequest)(nil),          // 14: ai.verta.registry.CommitTransitionRequest
	(*CreateCommentRequest)(nil),             // 15: ai.verta.registry.CreateCommentRequest
	(*FindActivitiesRequest)(nil),            // 16: ai.verta.registry.FindActivitiesRequest
	(*FindTransitionsRequest)(nil),           // 17: ai.verta.registry.FindTransitionsRequest
	(*UpdateStageRequest)(nil),               // 18: ai.verta.registry.UpdateStageRequest
	(*FindActivitiesRequest_Response)(nil),   // 19: ai.verta.registry.FindActivitiesRequest.Response
	(*FindTransitionsRequest_Response)(nil),  // 20: ai.verta.registry.FindTransitionsRequest.Response
}
var file_registry_StageService_proto_depIdxs = []int32{
	0,  // 0: ai.verta.registry.Transition.source_stage:type_name -> ai.verta.registry.StageEnum.Stage
	0,  // 1: ai.verta.registry.Transition.desired_stage:type_name -> ai.verta.registry.StageEnum.Stage
	1,  // 2: ai.verta.registry.Transition.state:type_name -> ai.verta.registry.TransitionStateEnum.TransitionState
	0,  // 3: ai.verta.registry.StageUpdate.stage:type_name -> ai.verta.registry.StageEnum.Stage
	4,  // 4: ai.verta.registry.Activity.transition:type_name -> ai.verta.registry.Transition
	5,  // 5: ai.verta.registry.Activity.approval:type_name -> ai.verta.registry.ApprovalOfTransition
	6,  // 6: ai.verta.registry.Activity.rejection:type_name -> ai.verta.registry.RejectionOfTransition
	7,  // 7: ai.verta.registry.Activity.close:type_name -> ai.verta.registry.CloseOfTransition
	8,  // 8: ai.verta.registry.Activity.update:type_name -> ai.verta.registry.StageUpdate
	1,  // 9: ai.verta.registry.Activity.activity_state:type_name -> ai.verta.registry.TransitionStateEnum.TransitionState
	0,  // 10: ai.verta.registry.CreateTransitionRequest.desired_stage:type_name -> ai.verta.registry.StageEnum.Stage
	1,  // 11: ai.verta.registry.FindTransitionsRequest.state:type_name -> ai.verta.registry.TransitionStateEnum.TransitionState
	0,  // 12: ai.verta.registry.UpdateStageRequest.stage:type_name -> ai.verta.registry.StageEnum.Stage
	9,  // 13: ai.verta.registry.FindActivitiesRequest.Response.activities:type_name -> ai.verta.registry.Activity
	9,  // 14: ai.verta.registry.FindTransitionsRequest.Response.activities:type_name -> ai.verta.registry.Activity
	10, // 15: ai.verta.registry.StageService.CreateTransition:input_type -> ai.verta.registry.CreateTransitionRequest
	11, // 16: ai.verta.registry.StageService.ApproveTransition:input_type -> ai.verta.registry.ApproveTransitionRequest
	12, // 17: ai.verta.registry.StageService.RejectTransition:input_type -> ai.verta.registry.RejectTransitionRequest
	13, // 18: ai.verta.registry.StageService.CloseTransition:input_type -> ai.verta.registry.CloseTransitionRequest
	15, // 19: ai.verta.registry.StageService.CreateComment:input_type -> ai.verta.registry.CreateCommentRequest
	14, // 20: ai.verta.registry.StageService.CommitTransition:input_type -> ai.verta.registry.CommitTransitionRequest
	18, // 21: ai.verta.registry.StageService.UpdateStage:input_type -> ai.verta.registry.UpdateStageRequest
	16, // 22: ai.verta.registry.StageService.FindActivities:input_type -> ai.verta.registry.FindActivitiesRequest
	17, // 23: ai.verta.registry.StageService.FindTransitions:input_type -> ai.verta.registry.FindTransitionsRequest
	9,  // 24: ai.verta.registry.StageService.CreateTransition:output_type -> ai.verta.registry.Activity
	9,  // 25: ai.verta.registry.StageService.ApproveTransition:output_type -> ai.verta.registry.Activity
	9,  // 26: ai.verta.registry.StageService.RejectTransition:output_type -> ai.verta.registry.Activity
	9,  // 27: ai.verta.registry.StageService.CloseTransition:output_type -> ai.verta.registry.Activity
	9,  // 28: ai.verta.registry.StageService.CreateComment:output_type -> ai.verta.registry.Activity
	9,  // 29: ai.verta.registry.StageService.CommitTransition:output_type -> ai.verta.registry.Activity
	9,  // 30: ai.verta.registry.StageService.UpdateStage:output_type -> ai.verta.registry.Activity
	19, // 31: ai.verta.registry.StageService.FindActivities:output_type -> ai.verta.registry.FindActivitiesRequest.Response
	20, // 32: ai.verta.registry.StageService.FindTransitions:output_type -> ai.verta.registry.FindTransitionsRequest.Response
	24, // [24:33] is the sub-list for method output_type
	15, // [15:24] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_registry_StageService_proto_init() }
func file_registry_StageService_proto_init() {
	if File_registry_StageService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_registry_StageService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransitionStateEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovalOfTransition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectionOfTransition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseOfTransition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveTransitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectTransitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseTransitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitTransitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindActivitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindTransitionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindActivitiesRequest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registry_StageService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindTransitionsRequest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_registry_StageService_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_registry_StageService_proto_goTypes,
		DependencyIndexes: file_registry_StageService_proto_depIdxs,
		EnumInfos:         file_registry_StageService_proto_enumTypes,
		MessageInfos:      file_registry_StageService_proto_msgTypes,
	}.Build()
	File_registry_StageService_proto = out.File
	file_registry_StageService_proto_rawDesc = nil
	file_registry_StageService_proto_goTypes = nil
	file_registry_StageService_proto_depIdxs = nil
}
