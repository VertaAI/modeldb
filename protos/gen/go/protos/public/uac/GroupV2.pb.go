// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.2
// source: uac/GroupV2.proto

package uac

import (
	context "context"
	common "github.com/VertaAI/modeldb/protos/gen/go/protos/public/common"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GroupV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrgId       string `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	//whether this group is one of the "built-in" and hence non-removable groups.
	BuiltIn          bool     `protobuf:"varint,5,opt,name=built_in,json=builtIn,proto3" json:"built_in,omitempty"`
	MemberIds        []string `protobuf:"bytes,6,rep,name=member_ids,json=memberIds,proto3" json:"member_ids,omitempty"`
	CreatedTimestamp int64    `protobuf:"varint,7,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	UpdatedTimestamp int64    `protobuf:"varint,8,opt,name=updated_timestamp,json=updatedTimestamp,proto3" json:"updated_timestamp,omitempty"`
}

func (x *GroupV2) Reset() {
	*x = GroupV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_GroupV2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupV2) ProtoMessage() {}

func (x *GroupV2) ProtoReflect() protoreflect.Message {
	mi := &file_uac_GroupV2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupV2.ProtoReflect.Descriptor instead.
func (*GroupV2) Descriptor() ([]byte, []int) {
	return file_uac_GroupV2_proto_rawDescGZIP(), []int{0}
}

func (x *GroupV2) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GroupV2) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GroupV2) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupV2) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GroupV2) GetBuiltIn() bool {
	if x != nil {
		return x.BuiltIn
	}
	return false
}

func (x *GroupV2) GetMemberIds() []string {
	if x != nil {
		return x.MemberIds
	}
	return nil
}

func (x *GroupV2) GetCreatedTimestamp() int64 {
	if x != nil {
		return x.CreatedTimestamp
	}
	return 0
}

func (x *GroupV2) GetUpdatedTimestamp() int64 {
	if x != nil {
		return x.UpdatedTimestamp
	}
	return 0
}

type GetGroupById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId   string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetGroupById) Reset() {
	*x = GetGroupById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_GroupV2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupById) ProtoMessage() {}

func (x *GetGroupById) ProtoReflect() protoreflect.Message {
	mi := &file_uac_GroupV2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupById.ProtoReflect.Descriptor instead.
func (*GetGroupById) Descriptor() ([]byte, []int) {
	return file_uac_GroupV2_proto_rawDescGZIP(), []int{1}
}

func (x *GetGroupById) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetGroupById) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type SearchGroupCriteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SearchGroupCriteria) Reset() {
	*x = SearchGroupCriteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_GroupV2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGroupCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGroupCriteria) ProtoMessage() {}

func (x *SearchGroupCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_uac_GroupV2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGroupCriteria.ProtoReflect.Descriptor instead.
func (*SearchGroupCriteria) Descriptor() ([]byte, []int) {
	return file_uac_GroupV2_proto_rawDescGZIP(), []int{2}
}

func (x *SearchGroupCriteria) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type SearchGroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId          string               `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"` // required
	SearchCriteria *SearchGroupCriteria `protobuf:"bytes,2,opt,name=search_criteria,json=searchCriteria,proto3" json:"search_criteria,omitempty"`
	Pagination     *common.Pagination   `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchGroups) Reset() {
	*x = SearchGroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_GroupV2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGroups) ProtoMessage() {}

func (x *SearchGroups) ProtoReflect() protoreflect.Message {
	mi := &file_uac_GroupV2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGroups.ProtoReflect.Descriptor instead.
func (*SearchGroups) Descriptor() ([]byte, []int) {
	return file_uac_GroupV2_proto_rawDescGZIP(), []int{3}
}

func (x *SearchGroups) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *SearchGroups) GetSearchCriteria() *SearchGroupCriteria {
	if x != nil {
		return x.SearchCriteria
	}
	return nil
}

func (x *SearchGroups) GetPagination() *common.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SetGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *GroupV2 `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *SetGroup) Reset() {
	*x = SetGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_GroupV2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroup) ProtoMessage() {}

func (x *SetGroup) ProtoReflect() protoreflect.Message {
	mi := &file_uac_GroupV2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroup.ProtoReflect.Descriptor instead.
func (*SetGroup) Descriptor() ([]byte, []int) {
	return file_uac_GroupV2_proto_rawDescGZIP(), []int{4}
}

func (x *SetGroup) GetGroup() *GroupV2 {
	if x != nil {
		return x.Group
	}
	return nil
}

type DeleteGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId   string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *DeleteGroup) Reset() {
	*x = DeleteGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_GroupV2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroup) ProtoMessage() {}

func (x *DeleteGroup) ProtoReflect() protoreflect.Message {
	mi := &file_uac_GroupV2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroup.ProtoReflect.Descriptor instead.
func (*DeleteGroup) Descriptor() ([]byte, []int) {
	return file_uac_GroupV2_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteGroup) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *DeleteGroup) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type AddGroupUsers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId   string   `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	GroupId string   `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  []string `protobuf:"bytes,3,rep,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AddGroupUsers) Reset() {
	*x = AddGroupUsers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_GroupV2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupUsers) ProtoMessage() {}

func (x *AddGroupUsers) ProtoReflect() protoreflect.Message {
	mi := &file_uac_GroupV2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupUsers.ProtoReflect.Descriptor instead.
func (*AddGroupUsers) Descriptor() ([]byte, []int) {
	return file_uac_GroupV2_proto_rawDescGZIP(), []int{6}
}

func (x *AddGroupUsers) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *AddGroupUsers) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *AddGroupUsers) GetUserId() []string {
	if x != nil {
		return x.UserId
	}
	return nil
}

type RemoveGroupUsers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId   string   `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	GroupId string   `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  []string `protobuf:"bytes,3,rep,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RemoveGroupUsers) Reset() {
	*x = RemoveGroupUsers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_GroupV2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGroupUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupUsers) ProtoMessage() {}

func (x *RemoveGroupUsers) ProtoReflect() protoreflect.Message {
	mi := &file_uac_GroupV2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupUsers.ProtoReflect.Descriptor instead.
func (*RemoveGroupUsers) Descriptor() ([]byte, []int) {
	return file_uac_GroupV2_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveGroupUsers) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *RemoveGroupUsers) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *RemoveGroupUsers) GetUserId() []string {
	if x != nil {
		return x.UserId
	}
	return nil
}

type GetGroupById_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *GroupV2 `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GetGroupById_Response) Reset() {
	*x = GetGroupById_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_GroupV2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupById_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupById_Response) ProtoMessage() {}

func (x *GetGroupById_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_GroupV2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupById_Response.ProtoReflect.Descriptor instead.
func (*GetGroupById_Response) Descriptor() ([]byte, []int) {
	return file_uac_GroupV2_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetGroupById_Response) GetGroup() *GroupV2 {
	if x != nil {
		return x.Group
	}
	return nil
}

type SearchGroups_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups       []*GroupV2         `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	TotalRecords int64              `protobuf:"varint,2,opt,name=total_records,json=totalRecords,proto3" json:"total_records,omitempty"`
	Pagination   *common.Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchGroups_Response) Reset() {
	*x = SearchGroups_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_GroupV2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGroups_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGroups_Response) ProtoMessage() {}

func (x *SearchGroups_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_GroupV2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGroups_Response.ProtoReflect.Descriptor instead.
func (*SearchGroups_Response) Descriptor() ([]byte, []int) {
	return file_uac_GroupV2_proto_rawDescGZIP(), []int{3, 0}
}

func (x *SearchGroups_Response) GetGroups() []*GroupV2 {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *SearchGroups_Response) GetTotalRecords() int64 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

func (x *SearchGroups_Response) GetPagination() *common.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SetGroup_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *GroupV2 `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *SetGroup_Response) Reset() {
	*x = SetGroup_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_GroupV2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroup_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroup_Response) ProtoMessage() {}

func (x *SetGroup_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_GroupV2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroup_Response.ProtoReflect.Descriptor instead.
func (*SetGroup_Response) Descriptor() ([]byte, []int) {
	return file_uac_GroupV2_proto_rawDescGZIP(), []int{4, 0}
}

func (x *SetGroup_Response) GetGroup() *GroupV2 {
	if x != nil {
		return x.Group
	}
	return nil
}

type DeleteGroup_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteGroup_Response) Reset() {
	*x = DeleteGroup_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_GroupV2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroup_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroup_Response) ProtoMessage() {}

func (x *DeleteGroup_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_GroupV2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroup_Response.ProtoReflect.Descriptor instead.
func (*DeleteGroup_Response) Descriptor() ([]byte, []int) {
	return file_uac_GroupV2_proto_rawDescGZIP(), []int{5, 0}
}

type AddGroupUsers_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddGroupUsers_Response) Reset() {
	*x = AddGroupUsers_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_GroupV2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupUsers_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupUsers_Response) ProtoMessage() {}

func (x *AddGroupUsers_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_GroupV2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupUsers_Response.ProtoReflect.Descriptor instead.
func (*AddGroupUsers_Response) Descriptor() ([]byte, []int) {
	return file_uac_GroupV2_proto_rawDescGZIP(), []int{6, 0}
}

type RemoveGroupUsers_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveGroupUsers_Response) Reset() {
	*x = RemoveGroupUsers_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_GroupV2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGroupUsers_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGroupUsers_Response) ProtoMessage() {}

func (x *RemoveGroupUsers_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_GroupV2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGroupUsers_Response.ProtoReflect.Descriptor instead.
func (*RemoveGroupUsers_Response) Descriptor() ([]byte, []int) {
	return file_uac_GroupV2_proto_rawDescGZIP(), []int{7, 0}
}

var File_uac_GroupV2_proto protoreflect.FileDescriptor

var file_uac_GroupV2_proto_rawDesc = []byte{
	0x0a, 0x11, 0x75, 0x61, 0x63, 0x2f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x32, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61,
	0x63, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x75, 0x61, 0x63, 0x2f, 0x55, 0x41, 0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xfa, 0x01, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x32, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75,
	0x69, 0x6c, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x75,
	0x69, 0x6c, 0x74, 0x49, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x2b, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x79,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x1a, 0x37, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x56, 0x32, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x2e, 0x0a, 0x13, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xcc, 0x02, 0x0a, 0x0c, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x12, 0x4a, 0x0a, 0x0f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x63, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x0e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x3b, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x9b, 0x01, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x32, 0x52, 0x06,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x2b, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75,
	0x61, 0x63, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x32, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x1a, 0x37, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x56, 0x32, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x4b, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x69, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0a,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb7, 0x06, 0x0a, 0x0c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x0c,
	0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x42, 0x79, 0x49, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0x79, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x1a, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61,
	0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a, 0x23,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x76, 0x31,
	0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x6f,
	0x72, 0x67, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x76, 0x0a,
	0x08, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x1a, 0x1f, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63,
	0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22, 0x26, 0x2f, 0x76, 0x31, 0x2f,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x81, 0x01, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x75, 0x61, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x1a, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x2a, 0x2b, 0x2f, 0x76,
	0x31, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b,
	0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x7b,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x8b, 0x01, 0x0a, 0x08, 0x61, 0x64,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x1a, 0x24, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75,
	0x61, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x36, 0x22, 0x31, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x9a, 0x01, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x27, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x22, 0x37, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x3a, 0x01, 0x2a, 0x42, 0x3e, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x56, 0x65, 0x72, 0x74, 0x61, 0x41, 0x49, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2f, 0x75, 0x61, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_uac_GroupV2_proto_rawDescOnce sync.Once
	file_uac_GroupV2_proto_rawDescData = file_uac_GroupV2_proto_rawDesc
)

func file_uac_GroupV2_proto_rawDescGZIP() []byte {
	file_uac_GroupV2_proto_rawDescOnce.Do(func() {
		file_uac_GroupV2_proto_rawDescData = protoimpl.X.CompressGZIP(file_uac_GroupV2_proto_rawDescData)
	})
	return file_uac_GroupV2_proto_rawDescData
}

var file_uac_GroupV2_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_uac_GroupV2_proto_goTypes = []interface{}{
	(*GroupV2)(nil),                   // 0: ai.verta.uac.GroupV2
	(*GetGroupById)(nil),              // 1: ai.verta.uac.GetGroupById
	(*SearchGroupCriteria)(nil),       // 2: ai.verta.uac.SearchGroupCriteria
	(*SearchGroups)(nil),              // 3: ai.verta.uac.SearchGroups
	(*SetGroup)(nil),                  // 4: ai.verta.uac.SetGroup
	(*DeleteGroup)(nil),               // 5: ai.verta.uac.DeleteGroup
	(*AddGroupUsers)(nil),             // 6: ai.verta.uac.AddGroupUsers
	(*RemoveGroupUsers)(nil),          // 7: ai.verta.uac.RemoveGroupUsers
	(*GetGroupById_Response)(nil),     // 8: ai.verta.uac.GetGroupById.Response
	(*SearchGroups_Response)(nil),     // 9: ai.verta.uac.SearchGroups.Response
	(*SetGroup_Response)(nil),         // 10: ai.verta.uac.SetGroup.Response
	(*DeleteGroup_Response)(nil),      // 11: ai.verta.uac.DeleteGroup.Response
	(*AddGroupUsers_Response)(nil),    // 12: ai.verta.uac.AddGroupUsers.Response
	(*RemoveGroupUsers_Response)(nil), // 13: ai.verta.uac.RemoveGroupUsers.Response
	(*common.Pagination)(nil),         // 14: ai.verta.common.Pagination
}
var file_uac_GroupV2_proto_depIdxs = []int32{
	2,  // 0: ai.verta.uac.SearchGroups.search_criteria:type_name -> ai.verta.uac.SearchGroupCriteria
	14, // 1: ai.verta.uac.SearchGroups.pagination:type_name -> ai.verta.common.Pagination
	0,  // 2: ai.verta.uac.SetGroup.group:type_name -> ai.verta.uac.GroupV2
	0,  // 3: ai.verta.uac.GetGroupById.Response.group:type_name -> ai.verta.uac.GroupV2
	0,  // 4: ai.verta.uac.SearchGroups.Response.groups:type_name -> ai.verta.uac.GroupV2
	14, // 5: ai.verta.uac.SearchGroups.Response.pagination:type_name -> ai.verta.common.Pagination
	0,  // 6: ai.verta.uac.SetGroup.Response.group:type_name -> ai.verta.uac.GroupV2
	1,  // 7: ai.verta.uac.GroupService.getGroupById:input_type -> ai.verta.uac.GetGroupById
	3,  // 8: ai.verta.uac.GroupService.searchGroups:input_type -> ai.verta.uac.SearchGroups
	4,  // 9: ai.verta.uac.GroupService.setGroup:input_type -> ai.verta.uac.SetGroup
	5,  // 10: ai.verta.uac.GroupService.deleteGroup:input_type -> ai.verta.uac.DeleteGroup
	6,  // 11: ai.verta.uac.GroupService.addUsers:input_type -> ai.verta.uac.AddGroupUsers
	7,  // 12: ai.verta.uac.GroupService.removeUsers:input_type -> ai.verta.uac.RemoveGroupUsers
	8,  // 13: ai.verta.uac.GroupService.getGroupById:output_type -> ai.verta.uac.GetGroupById.Response
	9,  // 14: ai.verta.uac.GroupService.searchGroups:output_type -> ai.verta.uac.SearchGroups.Response
	10, // 15: ai.verta.uac.GroupService.setGroup:output_type -> ai.verta.uac.SetGroup.Response
	11, // 16: ai.verta.uac.GroupService.deleteGroup:output_type -> ai.verta.uac.DeleteGroup.Response
	12, // 17: ai.verta.uac.GroupService.addUsers:output_type -> ai.verta.uac.AddGroupUsers.Response
	13, // 18: ai.verta.uac.GroupService.removeUsers:output_type -> ai.verta.uac.RemoveGroupUsers.Response
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_uac_GroupV2_proto_init() }
func file_uac_GroupV2_proto_init() {
	if File_uac_GroupV2_proto != nil {
		return
	}
	file_uac_UACService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_uac_GroupV2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_GroupV2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_GroupV2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGroupCriteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_GroupV2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_GroupV2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_GroupV2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_GroupV2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroupUsers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_GroupV2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGroupUsers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_GroupV2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupById_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_GroupV2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGroups_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_GroupV2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroup_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_GroupV2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroup_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_GroupV2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroupUsers_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_GroupV2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGroupUsers_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uac_GroupV2_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uac_GroupV2_proto_goTypes,
		DependencyIndexes: file_uac_GroupV2_proto_depIdxs,
		MessageInfos:      file_uac_GroupV2_proto_msgTypes,
	}.Build()
	File_uac_GroupV2_proto = out.File
	file_uac_GroupV2_proto_rawDesc = nil
	file_uac_GroupV2_proto_goTypes = nil
	file_uac_GroupV2_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GroupServiceClient is the client API for GroupService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GroupServiceClient interface {
	// Gets information from a given group
	GetGroupById(ctx context.Context, in *GetGroupById, opts ...grpc.CallOption) (*GetGroupById_Response, error)
	// Lists the groups that the provided user is a member of, or all groups if user isn't specified
	SearchGroups(ctx context.Context, in *SearchGroups, opts ...grpc.CallOption) (*SearchGroups_Response, error)
	// Create or update a group
	SetGroup(ctx context.Context, in *SetGroup, opts ...grpc.CallOption) (*SetGroup_Response, error)
	// Delete an existing group
	DeleteGroup(ctx context.Context, in *DeleteGroup, opts ...grpc.CallOption) (*DeleteGroup_Response, error)
	// Adds the given user to the group
	AddUsers(ctx context.Context, in *AddGroupUsers, opts ...grpc.CallOption) (*AddGroupUsers_Response, error)
	// Removes the given user from the group
	RemoveUsers(ctx context.Context, in *RemoveGroupUsers, opts ...grpc.CallOption) (*RemoveGroupUsers_Response, error)
}

type groupServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGroupServiceClient(cc grpc.ClientConnInterface) GroupServiceClient {
	return &groupServiceClient{cc}
}

func (c *groupServiceClient) GetGroupById(ctx context.Context, in *GetGroupById, opts ...grpc.CallOption) (*GetGroupById_Response, error) {
	out := new(GetGroupById_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.GroupService/getGroupById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupServiceClient) SearchGroups(ctx context.Context, in *SearchGroups, opts ...grpc.CallOption) (*SearchGroups_Response, error) {
	out := new(SearchGroups_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.GroupService/searchGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupServiceClient) SetGroup(ctx context.Context, in *SetGroup, opts ...grpc.CallOption) (*SetGroup_Response, error) {
	out := new(SetGroup_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.GroupService/setGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupServiceClient) DeleteGroup(ctx context.Context, in *DeleteGroup, opts ...grpc.CallOption) (*DeleteGroup_Response, error) {
	out := new(DeleteGroup_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.GroupService/deleteGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupServiceClient) AddUsers(ctx context.Context, in *AddGroupUsers, opts ...grpc.CallOption) (*AddGroupUsers_Response, error) {
	out := new(AddGroupUsers_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.GroupService/addUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupServiceClient) RemoveUsers(ctx context.Context, in *RemoveGroupUsers, opts ...grpc.CallOption) (*RemoveGroupUsers_Response, error) {
	out := new(RemoveGroupUsers_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.GroupService/removeUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GroupServiceServer is the server API for GroupService service.
type GroupServiceServer interface {
	// Gets information from a given group
	GetGroupById(context.Context, *GetGroupById) (*GetGroupById_Response, error)
	// Lists the groups that the provided user is a member of, or all groups if user isn't specified
	SearchGroups(context.Context, *SearchGroups) (*SearchGroups_Response, error)
	// Create or update a group
	SetGroup(context.Context, *SetGroup) (*SetGroup_Response, error)
	// Delete an existing group
	DeleteGroup(context.Context, *DeleteGroup) (*DeleteGroup_Response, error)
	// Adds the given user to the group
	AddUsers(context.Context, *AddGroupUsers) (*AddGroupUsers_Response, error)
	// Removes the given user from the group
	RemoveUsers(context.Context, *RemoveGroupUsers) (*RemoveGroupUsers_Response, error)
}

// UnimplementedGroupServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGroupServiceServer struct {
}

func (*UnimplementedGroupServiceServer) GetGroupById(context.Context, *GetGroupById) (*GetGroupById_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupById not implemented")
}
func (*UnimplementedGroupServiceServer) SearchGroups(context.Context, *SearchGroups) (*SearchGroups_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchGroups not implemented")
}
func (*UnimplementedGroupServiceServer) SetGroup(context.Context, *SetGroup) (*SetGroup_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroup not implemented")
}
func (*UnimplementedGroupServiceServer) DeleteGroup(context.Context, *DeleteGroup) (*DeleteGroup_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGroup not implemented")
}
func (*UnimplementedGroupServiceServer) AddUsers(context.Context, *AddGroupUsers) (*AddGroupUsers_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUsers not implemented")
}
func (*UnimplementedGroupServiceServer) RemoveUsers(context.Context, *RemoveGroupUsers) (*RemoveGroupUsers_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveUsers not implemented")
}

func RegisterGroupServiceServer(s *grpc.Server, srv GroupServiceServer) {
	s.RegisterService(&_GroupService_serviceDesc, srv)
}

func _GroupService_GetGroupById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGroupById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).GetGroupById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.GroupService/GetGroupById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).GetGroupById(ctx, req.(*GetGroupById))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupService_SearchGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchGroups)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).SearchGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.GroupService/SearchGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).SearchGroups(ctx, req.(*SearchGroups))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupService_SetGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).SetGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.GroupService/SetGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).SetGroup(ctx, req.(*SetGroup))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupService_DeleteGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGroup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).DeleteGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.GroupService/DeleteGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).DeleteGroup(ctx, req.(*DeleteGroup))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupService_AddUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddGroupUsers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).AddUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.GroupService/AddUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).AddUsers(ctx, req.(*AddGroupUsers))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupService_RemoveUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveGroupUsers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).RemoveUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.GroupService/RemoveUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).RemoveUsers(ctx, req.(*RemoveGroupUsers))
	}
	return interceptor(ctx, in, info, handler)
}

var _GroupService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ai.verta.uac.GroupService",
	HandlerType: (*GroupServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getGroupById",
			Handler:    _GroupService_GetGroupById_Handler,
		},
		{
			MethodName: "searchGroups",
			Handler:    _GroupService_SearchGroups_Handler,
		},
		{
			MethodName: "setGroup",
			Handler:    _GroupService_SetGroup_Handler,
		},
		{
			MethodName: "deleteGroup",
			Handler:    _GroupService_DeleteGroup_Handler,
		},
		{
			MethodName: "addUsers",
			Handler:    _GroupService_AddUsers_Handler,
		},
		{
			MethodName: "removeUsers",
			Handler:    _GroupService_RemoveUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "uac/GroupV2.proto",
}
