// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/public/uac/Team.proto

package uac

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Team struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrgId                string   `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ShortName            string   `protobuf:"bytes,8,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	OwnerId              string   `protobuf:"bytes,5,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	CreatedTimestamp     int64    `protobuf:"varint,6,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	UpdatedTimestamp     int64    `protobuf:"varint,7,opt,name=updated_timestamp,json=updatedTimestamp,proto3" json:"updated_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Team) Reset()         { *m = Team{} }
func (m *Team) String() string { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()    {}
func (*Team) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{0}
}

func (m *Team) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Team.Unmarshal(m, b)
}
func (m *Team) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Team.Marshal(b, m, deterministic)
}
func (m *Team) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Team.Merge(m, src)
}
func (m *Team) XXX_Size() int {
	return xxx_messageInfo_Team.Size(m)
}
func (m *Team) XXX_DiscardUnknown() {
	xxx_messageInfo_Team.DiscardUnknown(m)
}

var xxx_messageInfo_Team proto.InternalMessageInfo

func (m *Team) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Team) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Team) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Team) GetShortName() string {
	if m != nil {
		return m.ShortName
	}
	return ""
}

func (m *Team) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Team) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *Team) GetCreatedTimestamp() int64 {
	if m != nil {
		return m.CreatedTimestamp
	}
	return 0
}

func (m *Team) GetUpdatedTimestamp() int64 {
	if m != nil {
		return m.UpdatedTimestamp
	}
	return 0
}

type GetTeamById struct {
	TeamId               string   `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTeamById) Reset()         { *m = GetTeamById{} }
func (m *GetTeamById) String() string { return proto.CompactTextString(m) }
func (*GetTeamById) ProtoMessage()    {}
func (*GetTeamById) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{1}
}

func (m *GetTeamById) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTeamById.Unmarshal(m, b)
}
func (m *GetTeamById) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTeamById.Marshal(b, m, deterministic)
}
func (m *GetTeamById) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTeamById.Merge(m, src)
}
func (m *GetTeamById) XXX_Size() int {
	return xxx_messageInfo_GetTeamById.Size(m)
}
func (m *GetTeamById) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTeamById.DiscardUnknown(m)
}

var xxx_messageInfo_GetTeamById proto.InternalMessageInfo

func (m *GetTeamById) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type GetTeamById_Response struct {
	Team                 *Team    `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTeamById_Response) Reset()         { *m = GetTeamById_Response{} }
func (m *GetTeamById_Response) String() string { return proto.CompactTextString(m) }
func (*GetTeamById_Response) ProtoMessage()    {}
func (*GetTeamById_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{1, 0}
}

func (m *GetTeamById_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTeamById_Response.Unmarshal(m, b)
}
func (m *GetTeamById_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTeamById_Response.Marshal(b, m, deterministic)
}
func (m *GetTeamById_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTeamById_Response.Merge(m, src)
}
func (m *GetTeamById_Response) XXX_Size() int {
	return xxx_messageInfo_GetTeamById_Response.Size(m)
}
func (m *GetTeamById_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTeamById_Response.DiscardUnknown(m)
}

var xxx_messageInfo_GetTeamById_Response proto.InternalMessageInfo

func (m *GetTeamById_Response) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

// Team names are unique in an organization, but not across teams
type GetTeamByName struct {
	OrgId                string   `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	TeamName             string   `protobuf:"bytes,2,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTeamByName) Reset()         { *m = GetTeamByName{} }
func (m *GetTeamByName) String() string { return proto.CompactTextString(m) }
func (*GetTeamByName) ProtoMessage()    {}
func (*GetTeamByName) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{2}
}

func (m *GetTeamByName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTeamByName.Unmarshal(m, b)
}
func (m *GetTeamByName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTeamByName.Marshal(b, m, deterministic)
}
func (m *GetTeamByName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTeamByName.Merge(m, src)
}
func (m *GetTeamByName) XXX_Size() int {
	return xxx_messageInfo_GetTeamByName.Size(m)
}
func (m *GetTeamByName) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTeamByName.DiscardUnknown(m)
}

var xxx_messageInfo_GetTeamByName proto.InternalMessageInfo

func (m *GetTeamByName) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *GetTeamByName) GetTeamName() string {
	if m != nil {
		return m.TeamName
	}
	return ""
}

type GetTeamByName_Response struct {
	Team                 *Team    `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTeamByName_Response) Reset()         { *m = GetTeamByName_Response{} }
func (m *GetTeamByName_Response) String() string { return proto.CompactTextString(m) }
func (*GetTeamByName_Response) ProtoMessage()    {}
func (*GetTeamByName_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{2, 0}
}

func (m *GetTeamByName_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTeamByName_Response.Unmarshal(m, b)
}
func (m *GetTeamByName_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTeamByName_Response.Marshal(b, m, deterministic)
}
func (m *GetTeamByName_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTeamByName_Response.Merge(m, src)
}
func (m *GetTeamByName_Response) XXX_Size() int {
	return xxx_messageInfo_GetTeamByName_Response.Size(m)
}
func (m *GetTeamByName_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTeamByName_Response.DiscardUnknown(m)
}

var xxx_messageInfo_GetTeamByName_Response proto.InternalMessageInfo

func (m *GetTeamByName_Response) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

// Team short names are unique in an organization, but not across teams
type GetTeamByShortName struct {
	OrgId                string   `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	ShortName            string   `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTeamByShortName) Reset()         { *m = GetTeamByShortName{} }
func (m *GetTeamByShortName) String() string { return proto.CompactTextString(m) }
func (*GetTeamByShortName) ProtoMessage()    {}
func (*GetTeamByShortName) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{3}
}

func (m *GetTeamByShortName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTeamByShortName.Unmarshal(m, b)
}
func (m *GetTeamByShortName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTeamByShortName.Marshal(b, m, deterministic)
}
func (m *GetTeamByShortName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTeamByShortName.Merge(m, src)
}
func (m *GetTeamByShortName) XXX_Size() int {
	return xxx_messageInfo_GetTeamByShortName.Size(m)
}
func (m *GetTeamByShortName) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTeamByShortName.DiscardUnknown(m)
}

var xxx_messageInfo_GetTeamByShortName proto.InternalMessageInfo

func (m *GetTeamByShortName) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *GetTeamByShortName) GetShortName() string {
	if m != nil {
		return m.ShortName
	}
	return ""
}

type GetTeamByShortName_Response struct {
	Team                 *Team    `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTeamByShortName_Response) Reset()         { *m = GetTeamByShortName_Response{} }
func (m *GetTeamByShortName_Response) String() string { return proto.CompactTextString(m) }
func (*GetTeamByShortName_Response) ProtoMessage()    {}
func (*GetTeamByShortName_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{3, 0}
}

func (m *GetTeamByShortName_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTeamByShortName_Response.Unmarshal(m, b)
}
func (m *GetTeamByShortName_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTeamByShortName_Response.Marshal(b, m, deterministic)
}
func (m *GetTeamByShortName_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTeamByShortName_Response.Merge(m, src)
}
func (m *GetTeamByShortName_Response) XXX_Size() int {
	return xxx_messageInfo_GetTeamByShortName_Response.Size(m)
}
func (m *GetTeamByShortName_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTeamByShortName_Response.DiscardUnknown(m)
}

var xxx_messageInfo_GetTeamByShortName_Response proto.InternalMessageInfo

func (m *GetTeamByShortName_Response) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

type ListMyTeams struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMyTeams) Reset()         { *m = ListMyTeams{} }
func (m *ListMyTeams) String() string { return proto.CompactTextString(m) }
func (*ListMyTeams) ProtoMessage()    {}
func (*ListMyTeams) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{4}
}

func (m *ListMyTeams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMyTeams.Unmarshal(m, b)
}
func (m *ListMyTeams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMyTeams.Marshal(b, m, deterministic)
}
func (m *ListMyTeams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMyTeams.Merge(m, src)
}
func (m *ListMyTeams) XXX_Size() int {
	return xxx_messageInfo_ListMyTeams.Size(m)
}
func (m *ListMyTeams) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMyTeams.DiscardUnknown(m)
}

var xxx_messageInfo_ListMyTeams proto.InternalMessageInfo

type ListMyTeams_Response struct {
	Teams                []*Team  `protobuf:"bytes,1,rep,name=teams,proto3" json:"teams,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMyTeams_Response) Reset()         { *m = ListMyTeams_Response{} }
func (m *ListMyTeams_Response) String() string { return proto.CompactTextString(m) }
func (*ListMyTeams_Response) ProtoMessage()    {}
func (*ListMyTeams_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{4, 0}
}

func (m *ListMyTeams_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMyTeams_Response.Unmarshal(m, b)
}
func (m *ListMyTeams_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMyTeams_Response.Marshal(b, m, deterministic)
}
func (m *ListMyTeams_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMyTeams_Response.Merge(m, src)
}
func (m *ListMyTeams_Response) XXX_Size() int {
	return xxx_messageInfo_ListMyTeams_Response.Size(m)
}
func (m *ListMyTeams_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMyTeams_Response.DiscardUnknown(m)
}

var xxx_messageInfo_ListMyTeams_Response proto.InternalMessageInfo

func (m *ListMyTeams_Response) GetTeams() []*Team {
	if m != nil {
		return m.Teams
	}
	return nil
}

type SetTeam struct {
	Team                 *Team    `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTeam) Reset()         { *m = SetTeam{} }
func (m *SetTeam) String() string { return proto.CompactTextString(m) }
func (*SetTeam) ProtoMessage()    {}
func (*SetTeam) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{5}
}

func (m *SetTeam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTeam.Unmarshal(m, b)
}
func (m *SetTeam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTeam.Marshal(b, m, deterministic)
}
func (m *SetTeam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTeam.Merge(m, src)
}
func (m *SetTeam) XXX_Size() int {
	return xxx_messageInfo_SetTeam.Size(m)
}
func (m *SetTeam) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTeam.DiscardUnknown(m)
}

var xxx_messageInfo_SetTeam proto.InternalMessageInfo

func (m *SetTeam) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

type SetTeam_Response struct {
	Team                 *Team    `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTeam_Response) Reset()         { *m = SetTeam_Response{} }
func (m *SetTeam_Response) String() string { return proto.CompactTextString(m) }
func (*SetTeam_Response) ProtoMessage()    {}
func (*SetTeam_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{5, 0}
}

func (m *SetTeam_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTeam_Response.Unmarshal(m, b)
}
func (m *SetTeam_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTeam_Response.Marshal(b, m, deterministic)
}
func (m *SetTeam_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTeam_Response.Merge(m, src)
}
func (m *SetTeam_Response) XXX_Size() int {
	return xxx_messageInfo_SetTeam_Response.Size(m)
}
func (m *SetTeam_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTeam_Response.DiscardUnknown(m)
}

var xxx_messageInfo_SetTeam_Response proto.InternalMessageInfo

func (m *SetTeam_Response) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

type DeleteTeam struct {
	TeamId               string   `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTeam) Reset()         { *m = DeleteTeam{} }
func (m *DeleteTeam) String() string { return proto.CompactTextString(m) }
func (*DeleteTeam) ProtoMessage()    {}
func (*DeleteTeam) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{6}
}

func (m *DeleteTeam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTeam.Unmarshal(m, b)
}
func (m *DeleteTeam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTeam.Marshal(b, m, deterministic)
}
func (m *DeleteTeam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTeam.Merge(m, src)
}
func (m *DeleteTeam) XXX_Size() int {
	return xxx_messageInfo_DeleteTeam.Size(m)
}
func (m *DeleteTeam) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTeam.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTeam proto.InternalMessageInfo

func (m *DeleteTeam) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteTeam_Response struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTeam_Response) Reset()         { *m = DeleteTeam_Response{} }
func (m *DeleteTeam_Response) String() string { return proto.CompactTextString(m) }
func (*DeleteTeam_Response) ProtoMessage()    {}
func (*DeleteTeam_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{6, 0}
}

func (m *DeleteTeam_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTeam_Response.Unmarshal(m, b)
}
func (m *DeleteTeam_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTeam_Response.Marshal(b, m, deterministic)
}
func (m *DeleteTeam_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTeam_Response.Merge(m, src)
}
func (m *DeleteTeam_Response) XXX_Size() int {
	return xxx_messageInfo_DeleteTeam_Response.Size(m)
}
func (m *DeleteTeam_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTeam_Response.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTeam_Response proto.InternalMessageInfo

func (m *DeleteTeam_Response) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type ListTeamUser struct {
	TeamId               string   `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTeamUser) Reset()         { *m = ListTeamUser{} }
func (m *ListTeamUser) String() string { return proto.CompactTextString(m) }
func (*ListTeamUser) ProtoMessage()    {}
func (*ListTeamUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{7}
}

func (m *ListTeamUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTeamUser.Unmarshal(m, b)
}
func (m *ListTeamUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTeamUser.Marshal(b, m, deterministic)
}
func (m *ListTeamUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTeamUser.Merge(m, src)
}
func (m *ListTeamUser) XXX_Size() int {
	return xxx_messageInfo_ListTeamUser.Size(m)
}
func (m *ListTeamUser) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTeamUser.DiscardUnknown(m)
}

var xxx_messageInfo_ListTeamUser proto.InternalMessageInfo

func (m *ListTeamUser) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ListTeamUser_Response struct {
	UserIds              []string `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTeamUser_Response) Reset()         { *m = ListTeamUser_Response{} }
func (m *ListTeamUser_Response) String() string { return proto.CompactTextString(m) }
func (*ListTeamUser_Response) ProtoMessage()    {}
func (*ListTeamUser_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{7, 0}
}

func (m *ListTeamUser_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTeamUser_Response.Unmarshal(m, b)
}
func (m *ListTeamUser_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTeamUser_Response.Marshal(b, m, deterministic)
}
func (m *ListTeamUser_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTeamUser_Response.Merge(m, src)
}
func (m *ListTeamUser_Response) XXX_Size() int {
	return xxx_messageInfo_ListTeamUser_Response.Size(m)
}
func (m *ListTeamUser_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTeamUser_Response.DiscardUnknown(m)
}

var xxx_messageInfo_ListTeamUser_Response proto.InternalMessageInfo

func (m *ListTeamUser_Response) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type AddTeamUser struct {
	TeamId               string   `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	ShareWith            string   `protobuf:"bytes,3,opt,name=share_with,json=shareWith,proto3" json:"share_with,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTeamUser) Reset()         { *m = AddTeamUser{} }
func (m *AddTeamUser) String() string { return proto.CompactTextString(m) }
func (*AddTeamUser) ProtoMessage()    {}
func (*AddTeamUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{8}
}

func (m *AddTeamUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTeamUser.Unmarshal(m, b)
}
func (m *AddTeamUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTeamUser.Marshal(b, m, deterministic)
}
func (m *AddTeamUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTeamUser.Merge(m, src)
}
func (m *AddTeamUser) XXX_Size() int {
	return xxx_messageInfo_AddTeamUser.Size(m)
}
func (m *AddTeamUser) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTeamUser.DiscardUnknown(m)
}

var xxx_messageInfo_AddTeamUser proto.InternalMessageInfo

func (m *AddTeamUser) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AddTeamUser) GetShareWith() string {
	if m != nil {
		return m.ShareWith
	}
	return ""
}

type AddTeamUser_Response struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTeamUser_Response) Reset()         { *m = AddTeamUser_Response{} }
func (m *AddTeamUser_Response) String() string { return proto.CompactTextString(m) }
func (*AddTeamUser_Response) ProtoMessage()    {}
func (*AddTeamUser_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{8, 0}
}

func (m *AddTeamUser_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTeamUser_Response.Unmarshal(m, b)
}
func (m *AddTeamUser_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTeamUser_Response.Marshal(b, m, deterministic)
}
func (m *AddTeamUser_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTeamUser_Response.Merge(m, src)
}
func (m *AddTeamUser_Response) XXX_Size() int {
	return xxx_messageInfo_AddTeamUser_Response.Size(m)
}
func (m *AddTeamUser_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTeamUser_Response.DiscardUnknown(m)
}

var xxx_messageInfo_AddTeamUser_Response proto.InternalMessageInfo

func (m *AddTeamUser_Response) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type RemoveTeamUser struct {
	TeamId               string   `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	ShareWith            string   `protobuf:"bytes,2,opt,name=share_with,json=shareWith,proto3" json:"share_with,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveTeamUser) Reset()         { *m = RemoveTeamUser{} }
func (m *RemoveTeamUser) String() string { return proto.CompactTextString(m) }
func (*RemoveTeamUser) ProtoMessage()    {}
func (*RemoveTeamUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{9}
}

func (m *RemoveTeamUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTeamUser.Unmarshal(m, b)
}
func (m *RemoveTeamUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTeamUser.Marshal(b, m, deterministic)
}
func (m *RemoveTeamUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTeamUser.Merge(m, src)
}
func (m *RemoveTeamUser) XXX_Size() int {
	return xxx_messageInfo_RemoveTeamUser.Size(m)
}
func (m *RemoveTeamUser) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTeamUser.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTeamUser proto.InternalMessageInfo

func (m *RemoveTeamUser) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *RemoveTeamUser) GetShareWith() string {
	if m != nil {
		return m.ShareWith
	}
	return ""
}

type RemoveTeamUser_Response struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveTeamUser_Response) Reset()         { *m = RemoveTeamUser_Response{} }
func (m *RemoveTeamUser_Response) String() string { return proto.CompactTextString(m) }
func (*RemoveTeamUser_Response) ProtoMessage()    {}
func (*RemoveTeamUser_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f8730ffa785f19, []int{9, 0}
}

func (m *RemoveTeamUser_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTeamUser_Response.Unmarshal(m, b)
}
func (m *RemoveTeamUser_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTeamUser_Response.Marshal(b, m, deterministic)
}
func (m *RemoveTeamUser_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTeamUser_Response.Merge(m, src)
}
func (m *RemoveTeamUser_Response) XXX_Size() int {
	return xxx_messageInfo_RemoveTeamUser_Response.Size(m)
}
func (m *RemoveTeamUser_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTeamUser_Response.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTeamUser_Response proto.InternalMessageInfo

func (m *RemoveTeamUser_Response) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func init() {
	proto.RegisterType((*Team)(nil), "ai.verta.uac.Team")
	proto.RegisterType((*GetTeamById)(nil), "ai.verta.uac.GetTeamById")
	proto.RegisterType((*GetTeamById_Response)(nil), "ai.verta.uac.GetTeamById.Response")
	proto.RegisterType((*GetTeamByName)(nil), "ai.verta.uac.GetTeamByName")
	proto.RegisterType((*GetTeamByName_Response)(nil), "ai.verta.uac.GetTeamByName.Response")
	proto.RegisterType((*GetTeamByShortName)(nil), "ai.verta.uac.GetTeamByShortName")
	proto.RegisterType((*GetTeamByShortName_Response)(nil), "ai.verta.uac.GetTeamByShortName.Response")
	proto.RegisterType((*ListMyTeams)(nil), "ai.verta.uac.ListMyTeams")
	proto.RegisterType((*ListMyTeams_Response)(nil), "ai.verta.uac.ListMyTeams.Response")
	proto.RegisterType((*SetTeam)(nil), "ai.verta.uac.SetTeam")
	proto.RegisterType((*SetTeam_Response)(nil), "ai.verta.uac.SetTeam.Response")
	proto.RegisterType((*DeleteTeam)(nil), "ai.verta.uac.DeleteTeam")
	proto.RegisterType((*DeleteTeam_Response)(nil), "ai.verta.uac.DeleteTeam.Response")
	proto.RegisterType((*ListTeamUser)(nil), "ai.verta.uac.ListTeamUser")
	proto.RegisterType((*ListTeamUser_Response)(nil), "ai.verta.uac.ListTeamUser.Response")
	proto.RegisterType((*AddTeamUser)(nil), "ai.verta.uac.AddTeamUser")
	proto.RegisterType((*AddTeamUser_Response)(nil), "ai.verta.uac.AddTeamUser.Response")
	proto.RegisterType((*RemoveTeamUser)(nil), "ai.verta.uac.RemoveTeamUser")
	proto.RegisterType((*RemoveTeamUser_Response)(nil), "ai.verta.uac.RemoveTeamUser.Response")
}

func init() { proto.RegisterFile("protos/public/uac/Team.proto", fileDescriptor_18f8730ffa785f19) }

var fileDescriptor_18f8730ffa785f19 = []byte{
	// 777 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x5d, 0x4f, 0xdb, 0x48,
	0x14, 0x95, 0x43, 0x88, 0x93, 0x6b, 0x40, 0xec, 0x2c, 0xb0, 0xc6, 0x09, 0x28, 0x6b, 0x96, 0x15,
	0xcb, 0x4a, 0xb1, 0x96, 0xdd, 0x27, 0x1e, 0x56, 0x82, 0x56, 0xaa, 0x22, 0xb5, 0xa8, 0x0a, 0xb4,
	0x95, 0x90, 0xaa, 0x68, 0x92, 0x19, 0x39, 0x83, 0xe2, 0x4c, 0xea, 0x99, 0x04, 0xf1, 0xd2, 0x87,
	0x3e, 0xf4, 0x0f, 0xf4, 0xa7, 0xf5, 0x2f, 0xf4, 0x07, 0xf4, 0xad, 0xaf, 0xd5, 0x8c, 0x8d, 0x3f,
	0x92, 0x3a, 0xd0, 0xbc, 0x65, 0xee, 0xb9, 0x39, 0xe7, 0xce, 0xb9, 0x3e, 0x96, 0xa1, 0x31, 0x0e,
	0xb9, 0xe4, 0xc2, 0x1b, 0x4f, 0x7a, 0x43, 0xd6, 0xf7, 0x26, 0xb8, 0xef, 0x5d, 0x51, 0x1c, 0xb4,
	0x74, 0x19, 0xad, 0x61, 0xd6, 0x9a, 0xd2, 0x50, 0xe2, 0xd6, 0x04, 0xf7, 0x9d, 0x86, 0xcf, 0xb9,
	0x3f, 0xa4, 0x1e, 0x1e, 0x33, 0x0f, 0x8f, 0x46, 0x5c, 0x62, 0xc9, 0xf8, 0x48, 0x44, 0xbd, 0xee,
	0x37, 0x03, 0xca, 0xea, 0xaf, 0x68, 0x03, 0x4a, 0x8c, 0xd8, 0x46, 0xd3, 0x38, 0xaa, 0x75, 0x4a,
	0x8c, 0xa0, 0x6d, 0xa8, 0xf0, 0xd0, 0xef, 0x32, 0x62, 0x97, 0x74, 0x6d, 0x95, 0x87, 0x7e, 0x9b,
	0x20, 0x04, 0xe5, 0x11, 0x0e, 0xa8, 0xbd, 0xa2, 0x8b, 0xfa, 0x37, 0xda, 0x03, 0x10, 0x03, 0x1e,
	0xca, 0xae, 0x46, 0xaa, 0x1a, 0xa9, 0xe9, 0xca, 0x85, 0x82, 0x9b, 0x60, 0x11, 0x2a, 0xfa, 0x21,
	0x1b, 0x2b, 0x61, 0xbb, 0xac, 0xf1, 0x6c, 0x09, 0xed, 0x42, 0x95, 0xdf, 0x8e, 0x68, 0xa8, 0xd4,
	0x56, 0x35, 0x6c, 0xea, 0x73, 0x9b, 0xa0, 0xbf, 0xe1, 0x97, 0x7e, 0x48, 0xb1, 0xa4, 0xa4, 0x2b,
	0x59, 0x40, 0x85, 0xc4, 0xc1, 0xd8, 0xae, 0x34, 0x8d, 0xa3, 0x95, 0xce, 0x66, 0x0c, 0x5c, 0xdd,
	0xd7, 0x55, 0xf3, 0x64, 0x4c, 0x66, 0x9a, 0xcd, 0xa8, 0x39, 0x06, 0x92, 0x66, 0xf7, 0x1a, 0xac,
	0x67, 0x54, 0xaa, 0xbb, 0x9f, 0xdf, 0xb5, 0x09, 0xfa, 0x0d, 0x4c, 0x49, 0x71, 0xd0, 0x4d, 0x4c,
	0xa8, 0xa8, 0x63, 0x9b, 0x38, 0x27, 0x50, 0xed, 0x50, 0x31, 0xe6, 0x23, 0x41, 0xd1, 0x9f, 0x50,
	0x56, 0x55, 0xdd, 0x61, 0x9d, 0xa0, 0x56, 0xd6, 0xe8, 0x96, 0xa2, 0xea, 0x68, 0xdc, 0xbd, 0x85,
	0xf5, 0x84, 0x5b, 0x7b, 0x90, 0xba, 0x69, 0x64, 0xdd, 0xac, 0x43, 0x4d, 0x8b, 0x6a, 0xe3, 0x22,
	0x9f, 0xab, 0xaa, 0xa0, 0xfe, 0xb3, 0x94, 0xf0, 0x7b, 0x40, 0x89, 0xf0, 0x65, 0xb2, 0x81, 0x02,
	0xf5, 0xfc, 0xde, 0x4a, 0x33, 0x7b, 0x5b, 0x4a, 0xff, 0x09, 0x58, 0xcf, 0x99, 0x90, 0x2f, 0xee,
	0x54, 0x4d, 0x38, 0xff, 0x65, 0x28, 0x8e, 0x60, 0x55, 0xb5, 0x08, 0xdb, 0x68, 0xae, 0x14, 0x70,
	0x44, 0x0d, 0x2e, 0x05, 0xf3, 0x32, 0xba, 0xc4, 0x63, 0x75, 0x97, 0x9a, 0xb5, 0x0d, 0xf0, 0x94,
	0x0e, 0xa9, 0xa4, 0x5a, 0xa9, 0x70, 0xff, 0x6e, 0x86, 0x7a, 0x07, 0x2a, 0x42, 0x62, 0x39, 0x11,
	0xba, 0xa7, 0xda, 0x89, 0x4f, 0xee, 0x05, 0xac, 0xa9, 0x6b, 0x2b, 0xa2, 0x57, 0x82, 0x86, 0xc5,
	0x64, 0x87, 0x19, 0xb2, 0x5d, 0xa8, 0x4e, 0x84, 0x7e, 0xe8, 0x23, 0x4f, 0x6a, 0x1d, 0x53, 0x9d,
	0xdb, 0x44, 0xb8, 0x0c, 0xac, 0x33, 0x42, 0x1e, 0xa4, 0x8b, 0x36, 0x88, 0x43, 0xda, 0xbd, 0x65,
	0x72, 0x10, 0x67, 0xb2, 0xa6, 0x2b, 0x6f, 0x98, 0x1c, 0x3c, 0x6a, 0xf4, 0x21, 0x6c, 0x74, 0x68,
	0xc0, 0xa7, 0xf4, 0x67, 0xd5, 0x4a, 0x4b, 0xa8, 0x9d, 0x7c, 0x35, 0xc1, 0x52, 0x42, 0x97, 0x34,
	0x9c, 0xb2, 0x3e, 0x45, 0x37, 0x60, 0xf9, 0x99, 0x10, 0xee, 0xe6, 0x97, 0x95, 0xc9, 0xa7, 0xe3,
	0x16, 0x42, 0xad, 0x7b, 0x55, 0xb7, 0xf1, 0xe1, 0xf3, 0x97, 0x4f, 0xa5, 0x1d, 0xb4, 0xe5, 0x4d,
	0xff, 0xf1, 0xd4, 0xd0, 0x5e, 0x96, 0x3c, 0x84, 0x75, 0x3f, 0x17, 0xca, 0x7a, 0x01, 0xa5, 0x7e,
	0xfa, 0xff, 0x58, 0x00, 0xa6, 0x8a, 0xfb, 0x5a, 0xd1, 0x46, 0x3b, 0xf3, 0x8a, 0x5a, 0xe2, 0xa3,
	0x01, 0xc8, 0x9f, 0x0f, 0x64, 0xb3, 0x80, 0x3c, 0xe9, 0x70, 0xfe, 0x7a, 0xa8, 0x23, 0x9d, 0xe1,
	0x40, 0xcf, 0xb0, 0x87, 0xea, 0xf3, 0x33, 0xa4, 0x8a, 0x37, 0x60, 0x0d, 0xd3, 0x60, 0xce, 0x1a,
	0x9d, 0xcd, 0xac, 0x5b, 0x08, 0x2d, 0x32, 0x3a, 0x4b, 0xfe, 0x16, 0x4c, 0x11, 0xe7, 0x77, 0x3b,
	0x4f, 0x16, 0xc7, 0xda, 0xd9, 0xff, 0x61, 0x39, 0xe5, 0xaf, 0x6b, 0xfe, 0x6d, 0x77, 0x33, 0xe1,
	0x8f, 0x09, 0x4f, 0x8d, 0x63, 0xc4, 0x00, 0x48, 0x9a, 0x5b, 0x3b, 0x4f, 0x95, 0x26, 0xda, 0xf9,
	0xbd, 0x08, 0x99, 0x5b, 0x9f, 0xfb, 0x6b, 0xa2, 0x93, 0x32, 0x2b, 0xa9, 0x01, 0xd4, 0xd4, 0xc5,
	0x54, 0x2c, 0x04, 0x72, 0xe6, 0x8d, 0xb9, 0xcf, 0x8c, 0x73, 0x50, 0x8c, 0xa5, 0x6a, 0x8e, 0x56,
	0xdb, 0x42, 0x28, 0xe7, 0x5a, 0x44, 0x4e, 0xc1, 0xc4, 0x84, 0xe8, 0xfc, 0xcd, 0xec, 0x26, 0xf3,
	0x22, 0x98, 0xdd, 0x4d, 0x06, 0x5a, 0xe4, 0x5d, 0x4c, 0xac, 0x2e, 0xf4, 0x0e, 0x20, 0xd4, 0x69,
	0xd7, 0x4a, 0x8d, 0x3c, 0x5d, 0xfe, 0x3d, 0xe0, 0x1c, 0x2e, 0x42, 0x17, 0x79, 0x98, 0x2a, 0x9c,
	0x1a, 0xc7, 0xe7, 0xff, 0xbf, 0x34, 0xae, 0x4f, 0x7d, 0x26, 0x07, 0x93, 0x5e, 0xab, 0xcf, 0x03,
	0xef, 0xb5, 0x62, 0x3c, 0x6b, 0x7b, 0x01, 0x27, 0x74, 0x48, 0x7a, 0x5e, 0xfc, 0x29, 0xe3, 0xd3,
	0x91, 0xe7, 0x73, 0x6f, 0xee, 0xc3, 0xa6, 0x57, 0xd1, 0xa5, 0x7f, 0xbf, 0x07, 0x00, 0x00, 0xff,
	0xff, 0xa8, 0x6b, 0x73, 0x0d, 0xf4, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TeamServiceClient is the client API for TeamService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TeamServiceClient interface {
	// Gets information from a given team
	GetTeamById(ctx context.Context, in *GetTeamById, opts ...grpc.CallOption) (*GetTeamById_Response, error)
	// Gets information from a given team
	GetTeamByName(ctx context.Context, in *GetTeamByName, opts ...grpc.CallOption) (*GetTeamByName_Response, error)
	// Gets information from a given team
	GetTeamByShortName(ctx context.Context, in *GetTeamByShortName, opts ...grpc.CallOption) (*GetTeamByShortName_Response, error)
	// Lists the teams that the current user can see
	ListMyTeams(ctx context.Context, in *ListMyTeams, opts ...grpc.CallOption) (*ListMyTeams_Response, error)
	// Create or update a team
	// Automatically adds the caller to the team
	SetTeam(ctx context.Context, in *SetTeam, opts ...grpc.CallOption) (*SetTeam_Response, error)
	// Delete an existing team
	// Only enabled if the person deleting is the owner of the organization or owner of the team
	DeleteTeam(ctx context.Context, in *DeleteTeam, opts ...grpc.CallOption) (*DeleteTeam_Response, error)
	// List users inside a team
	// Only available for users inside the team itself
	ListUsers(ctx context.Context, in *ListTeamUser, opts ...grpc.CallOption) (*ListTeamUser_Response, error)
	// Adds the given user to the team
	// Only enabled if the requester is the creator of the team or the organization
	AddUser(ctx context.Context, in *AddTeamUser, opts ...grpc.CallOption) (*AddTeamUser_Response, error)
	// Removes the given user to the team
	// Only enabled if the requester is the creator of the team
	// The owner can never be removed
	RemoveUser(ctx context.Context, in *RemoveTeamUser, opts ...grpc.CallOption) (*RemoveTeamUser_Response, error)
}

type teamServiceClient struct {
	cc *grpc.ClientConn
}

func NewTeamServiceClient(cc *grpc.ClientConn) TeamServiceClient {
	return &teamServiceClient{cc}
}

func (c *teamServiceClient) GetTeamById(ctx context.Context, in *GetTeamById, opts ...grpc.CallOption) (*GetTeamById_Response, error) {
	out := new(GetTeamById_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.TeamService/getTeamById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) GetTeamByName(ctx context.Context, in *GetTeamByName, opts ...grpc.CallOption) (*GetTeamByName_Response, error) {
	out := new(GetTeamByName_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.TeamService/getTeamByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) GetTeamByShortName(ctx context.Context, in *GetTeamByShortName, opts ...grpc.CallOption) (*GetTeamByShortName_Response, error) {
	out := new(GetTeamByShortName_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.TeamService/getTeamByShortName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) ListMyTeams(ctx context.Context, in *ListMyTeams, opts ...grpc.CallOption) (*ListMyTeams_Response, error) {
	out := new(ListMyTeams_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.TeamService/listMyTeams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) SetTeam(ctx context.Context, in *SetTeam, opts ...grpc.CallOption) (*SetTeam_Response, error) {
	out := new(SetTeam_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.TeamService/setTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) DeleteTeam(ctx context.Context, in *DeleteTeam, opts ...grpc.CallOption) (*DeleteTeam_Response, error) {
	out := new(DeleteTeam_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.TeamService/deleteTeam", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) ListUsers(ctx context.Context, in *ListTeamUser, opts ...grpc.CallOption) (*ListTeamUser_Response, error) {
	out := new(ListTeamUser_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.TeamService/listUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) AddUser(ctx context.Context, in *AddTeamUser, opts ...grpc.CallOption) (*AddTeamUser_Response, error) {
	out := new(AddTeamUser_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.TeamService/addUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) RemoveUser(ctx context.Context, in *RemoveTeamUser, opts ...grpc.CallOption) (*RemoveTeamUser_Response, error) {
	out := new(RemoveTeamUser_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.TeamService/removeUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TeamServiceServer is the server API for TeamService service.
type TeamServiceServer interface {
	// Gets information from a given team
	GetTeamById(context.Context, *GetTeamById) (*GetTeamById_Response, error)
	// Gets information from a given team
	GetTeamByName(context.Context, *GetTeamByName) (*GetTeamByName_Response, error)
	// Gets information from a given team
	GetTeamByShortName(context.Context, *GetTeamByShortName) (*GetTeamByShortName_Response, error)
	// Lists the teams that the current user can see
	ListMyTeams(context.Context, *ListMyTeams) (*ListMyTeams_Response, error)
	// Create or update a team
	// Automatically adds the caller to the team
	SetTeam(context.Context, *SetTeam) (*SetTeam_Response, error)
	// Delete an existing team
	// Only enabled if the person deleting is the owner of the organization or owner of the team
	DeleteTeam(context.Context, *DeleteTeam) (*DeleteTeam_Response, error)
	// List users inside a team
	// Only available for users inside the team itself
	ListUsers(context.Context, *ListTeamUser) (*ListTeamUser_Response, error)
	// Adds the given user to the team
	// Only enabled if the requester is the creator of the team or the organization
	AddUser(context.Context, *AddTeamUser) (*AddTeamUser_Response, error)
	// Removes the given user to the team
	// Only enabled if the requester is the creator of the team
	// The owner can never be removed
	RemoveUser(context.Context, *RemoveTeamUser) (*RemoveTeamUser_Response, error)
}

// UnimplementedTeamServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTeamServiceServer struct {
}

func (*UnimplementedTeamServiceServer) GetTeamById(ctx context.Context, req *GetTeamById) (*GetTeamById_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTeamById not implemented")
}
func (*UnimplementedTeamServiceServer) GetTeamByName(ctx context.Context, req *GetTeamByName) (*GetTeamByName_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTeamByName not implemented")
}
func (*UnimplementedTeamServiceServer) GetTeamByShortName(ctx context.Context, req *GetTeamByShortName) (*GetTeamByShortName_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTeamByShortName not implemented")
}
func (*UnimplementedTeamServiceServer) ListMyTeams(ctx context.Context, req *ListMyTeams) (*ListMyTeams_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMyTeams not implemented")
}
func (*UnimplementedTeamServiceServer) SetTeam(ctx context.Context, req *SetTeam) (*SetTeam_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTeam not implemented")
}
func (*UnimplementedTeamServiceServer) DeleteTeam(ctx context.Context, req *DeleteTeam) (*DeleteTeam_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTeam not implemented")
}
func (*UnimplementedTeamServiceServer) ListUsers(ctx context.Context, req *ListTeamUser) (*ListTeamUser_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUsers not implemented")
}
func (*UnimplementedTeamServiceServer) AddUser(ctx context.Context, req *AddTeamUser) (*AddTeamUser_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUser not implemented")
}
func (*UnimplementedTeamServiceServer) RemoveUser(ctx context.Context, req *RemoveTeamUser) (*RemoveTeamUser_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveUser not implemented")
}

func RegisterTeamServiceServer(s *grpc.Server, srv TeamServiceServer) {
	s.RegisterService(&_TeamService_serviceDesc, srv)
}

func _TeamService_GetTeamById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTeamById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).GetTeamById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.TeamService/GetTeamById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).GetTeamById(ctx, req.(*GetTeamById))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_GetTeamByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTeamByName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).GetTeamByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.TeamService/GetTeamByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).GetTeamByName(ctx, req.(*GetTeamByName))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_GetTeamByShortName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTeamByShortName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).GetTeamByShortName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.TeamService/GetTeamByShortName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).GetTeamByShortName(ctx, req.(*GetTeamByShortName))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_ListMyTeams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMyTeams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).ListMyTeams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.TeamService/ListMyTeams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).ListMyTeams(ctx, req.(*ListMyTeams))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_SetTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTeam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).SetTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.TeamService/SetTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).SetTeam(ctx, req.(*SetTeam))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_DeleteTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTeam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).DeleteTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.TeamService/DeleteTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).DeleteTeam(ctx, req.(*DeleteTeam))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTeamUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.TeamService/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).ListUsers(ctx, req.(*ListTeamUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTeamUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.TeamService/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).AddUser(ctx, req.(*AddTeamUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _TeamService_RemoveUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveTeamUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TeamServiceServer).RemoveUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.TeamService/RemoveUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TeamServiceServer).RemoveUser(ctx, req.(*RemoveTeamUser))
	}
	return interceptor(ctx, in, info, handler)
}

var _TeamService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ai.verta.uac.TeamService",
	HandlerType: (*TeamServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getTeamById",
			Handler:    _TeamService_GetTeamById_Handler,
		},
		{
			MethodName: "getTeamByName",
			Handler:    _TeamService_GetTeamByName_Handler,
		},
		{
			MethodName: "getTeamByShortName",
			Handler:    _TeamService_GetTeamByShortName_Handler,
		},
		{
			MethodName: "listMyTeams",
			Handler:    _TeamService_ListMyTeams_Handler,
		},
		{
			MethodName: "setTeam",
			Handler:    _TeamService_SetTeam_Handler,
		},
		{
			MethodName: "deleteTeam",
			Handler:    _TeamService_DeleteTeam_Handler,
		},
		{
			MethodName: "listUsers",
			Handler:    _TeamService_ListUsers_Handler,
		},
		{
			MethodName: "addUser",
			Handler:    _TeamService_AddUser_Handler,
		},
		{
			MethodName: "removeUser",
			Handler:    _TeamService_RemoveUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/public/uac/Team.proto",
}
