// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.2
// source: uac/Workspace.proto

package uac

import (
	context "context"
	common "github.com/VertaAI/modeldb/protos/gen/go/protos/public/common"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetWorkspaceById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetWorkspaceById) Reset() {
	*x = GetWorkspaceById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Workspace_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkspaceById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkspaceById) ProtoMessage() {}

func (x *GetWorkspaceById) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Workspace_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkspaceById.ProtoReflect.Descriptor instead.
func (*GetWorkspaceById) Descriptor() ([]byte, []int) {
	return file_uac_Workspace_proto_rawDescGZIP(), []int{0}
}

func (x *GetWorkspaceById) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetWorkspaceByName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetWorkspaceByName) Reset() {
	*x = GetWorkspaceByName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Workspace_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkspaceByName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkspaceByName) ProtoMessage() {}

func (x *GetWorkspaceByName) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Workspace_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkspaceByName.ProtoReflect.Descriptor instead.
func (*GetWorkspaceByName) Descriptor() ([]byte, []int) {
	return file_uac_Workspace_proto_rawDescGZIP(), []int{1}
}

func (x *GetWorkspaceByName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetWorkspaceByLegacyId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceType common.WorkspaceTypeEnum_WorkspaceType `protobuf:"varint,2,opt,name=workspace_type,json=workspaceType,proto3,enum=ai.verta.common.WorkspaceTypeEnum_WorkspaceType" json:"workspace_type,omitempty"`
}

func (x *GetWorkspaceByLegacyId) Reset() {
	*x = GetWorkspaceByLegacyId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Workspace_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkspaceByLegacyId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkspaceByLegacyId) ProtoMessage() {}

func (x *GetWorkspaceByLegacyId) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Workspace_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkspaceByLegacyId.ProtoReflect.Descriptor instead.
func (*GetWorkspaceByLegacyId) Descriptor() ([]byte, []int) {
	return file_uac_Workspace_proto_rawDescGZIP(), []int{2}
}

func (x *GetWorkspaceByLegacyId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetWorkspaceByLegacyId) GetWorkspaceType() common.WorkspaceTypeEnum_WorkspaceType {
	if x != nil {
		return x.WorkspaceType
	}
	return common.WorkspaceTypeEnum_UNKNOWN
}

type Workspace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to InternalId:
	//	*Workspace_UserId
	//	*Workspace_OrgId
	InternalId isWorkspace_InternalId `protobuf_oneof:"internal_id"`
	// Types that are assignable to Name:
	//	*Workspace_Username
	//	*Workspace_OrgName
	Name isWorkspace_Name `protobuf_oneof:"name"`
}

func (x *Workspace) Reset() {
	*x = Workspace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Workspace_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workspace) ProtoMessage() {}

func (x *Workspace) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Workspace_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workspace.ProtoReflect.Descriptor instead.
func (*Workspace) Descriptor() ([]byte, []int) {
	return file_uac_Workspace_proto_rawDescGZIP(), []int{3}
}

func (x *Workspace) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (m *Workspace) GetInternalId() isWorkspace_InternalId {
	if m != nil {
		return m.InternalId
	}
	return nil
}

func (x *Workspace) GetUserId() string {
	if x, ok := x.GetInternalId().(*Workspace_UserId); ok {
		return x.UserId
	}
	return ""
}

func (x *Workspace) GetOrgId() string {
	if x, ok := x.GetInternalId().(*Workspace_OrgId); ok {
		return x.OrgId
	}
	return ""
}

func (m *Workspace) GetName() isWorkspace_Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (x *Workspace) GetUsername() string {
	if x, ok := x.GetName().(*Workspace_Username); ok {
		return x.Username
	}
	return ""
}

func (x *Workspace) GetOrgName() string {
	if x, ok := x.GetName().(*Workspace_OrgName); ok {
		return x.OrgName
	}
	return ""
}

type isWorkspace_InternalId interface {
	isWorkspace_InternalId()
}

type Workspace_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

type Workspace_OrgId struct {
	OrgId string `protobuf:"bytes,3,opt,name=org_id,json=orgId,proto3,oneof"`
}

func (*Workspace_UserId) isWorkspace_InternalId() {}

func (*Workspace_OrgId) isWorkspace_InternalId() {}

type isWorkspace_Name interface {
	isWorkspace_Name()
}

type Workspace_Username struct {
	Username string `protobuf:"bytes,4,opt,name=username,proto3,oneof"`
}

type Workspace_OrgName struct {
	OrgName string `protobuf:"bytes,5,opt,name=org_name,json=orgName,proto3,oneof"`
}

func (*Workspace_Username) isWorkspace_Name() {}

func (*Workspace_OrgName) isWorkspace_Name() {}

var File_uac_Workspace_proto protoreflect.FileDescriptor

var file_uac_Workspace_proto_rawDesc = []byte{
	0x0a, 0x13, 0x75, 0x61, 0x63, 0x2f, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x75, 0x61, 0x63, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x28, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x4c, 0x65,
	0x67, 0x61, 0x63, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x57, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xa1, 0x01, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x32, 0x8a, 0x03, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x17, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f,
	0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x67, 0x65, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x79, 0x0a,
	0x12, 0x67, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75,
	0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x17, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x75, 0x61, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x28,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x16, 0x67, 0x65, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x4c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x49, 0x64, 0x12, 0x24, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75,
	0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42,
	0x79, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x49, 0x64, 0x1a, 0x17, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x76, 0x31, 0x2f,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x79, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x49, 0x64,
	0x42, 0x3e, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x56, 0x65, 0x72, 0x74, 0x61, 0x41, 0x49, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x75, 0x61, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_uac_Workspace_proto_rawDescOnce sync.Once
	file_uac_Workspace_proto_rawDescData = file_uac_Workspace_proto_rawDesc
)

func file_uac_Workspace_proto_rawDescGZIP() []byte {
	file_uac_Workspace_proto_rawDescOnce.Do(func() {
		file_uac_Workspace_proto_rawDescData = protoimpl.X.CompressGZIP(file_uac_Workspace_proto_rawDescData)
	})
	return file_uac_Workspace_proto_rawDescData
}

var file_uac_Workspace_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_uac_Workspace_proto_goTypes = []interface{}{
	(*GetWorkspaceById)(nil),                    // 0: ai.verta.uac.GetWorkspaceById
	(*GetWorkspaceByName)(nil),                  // 1: ai.verta.uac.GetWorkspaceByName
	(*GetWorkspaceByLegacyId)(nil),              // 2: ai.verta.uac.GetWorkspaceByLegacyId
	(*Workspace)(nil),                           // 3: ai.verta.uac.Workspace
	(common.WorkspaceTypeEnum_WorkspaceType)(0), // 4: ai.verta.common.WorkspaceTypeEnum.WorkspaceType
}
var file_uac_Workspace_proto_depIdxs = []int32{
	4, // 0: ai.verta.uac.GetWorkspaceByLegacyId.workspace_type:type_name -> ai.verta.common.WorkspaceTypeEnum.WorkspaceType
	0, // 1: ai.verta.uac.WorkspaceService.getWorkspaceById:input_type -> ai.verta.uac.GetWorkspaceById
	1, // 2: ai.verta.uac.WorkspaceService.getWorkspaceByName:input_type -> ai.verta.uac.GetWorkspaceByName
	2, // 3: ai.verta.uac.WorkspaceService.getWorkspaceByLegacyId:input_type -> ai.verta.uac.GetWorkspaceByLegacyId
	3, // 4: ai.verta.uac.WorkspaceService.getWorkspaceById:output_type -> ai.verta.uac.Workspace
	3, // 5: ai.verta.uac.WorkspaceService.getWorkspaceByName:output_type -> ai.verta.uac.Workspace
	3, // 6: ai.verta.uac.WorkspaceService.getWorkspaceByLegacyId:output_type -> ai.verta.uac.Workspace
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_uac_Workspace_proto_init() }
func file_uac_Workspace_proto_init() {
	if File_uac_Workspace_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_uac_Workspace_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkspaceById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Workspace_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkspaceByName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Workspace_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkspaceByLegacyId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Workspace_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workspace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_uac_Workspace_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Workspace_UserId)(nil),
		(*Workspace_OrgId)(nil),
		(*Workspace_Username)(nil),
		(*Workspace_OrgName)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uac_Workspace_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uac_Workspace_proto_goTypes,
		DependencyIndexes: file_uac_Workspace_proto_depIdxs,
		MessageInfos:      file_uac_Workspace_proto_msgTypes,
	}.Build()
	File_uac_Workspace_proto = out.File
	file_uac_Workspace_proto_rawDesc = nil
	file_uac_Workspace_proto_goTypes = nil
	file_uac_Workspace_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WorkspaceServiceClient is the client API for WorkspaceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkspaceServiceClient interface {
	GetWorkspaceById(ctx context.Context, in *GetWorkspaceById, opts ...grpc.CallOption) (*Workspace, error)
	GetWorkspaceByName(ctx context.Context, in *GetWorkspaceByName, opts ...grpc.CallOption) (*Workspace, error)
	GetWorkspaceByLegacyId(ctx context.Context, in *GetWorkspaceByLegacyId, opts ...grpc.CallOption) (*Workspace, error)
}

type workspaceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWorkspaceServiceClient(cc grpc.ClientConnInterface) WorkspaceServiceClient {
	return &workspaceServiceClient{cc}
}

func (c *workspaceServiceClient) GetWorkspaceById(ctx context.Context, in *GetWorkspaceById, opts ...grpc.CallOption) (*Workspace, error) {
	out := new(Workspace)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.WorkspaceService/getWorkspaceById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspaceServiceClient) GetWorkspaceByName(ctx context.Context, in *GetWorkspaceByName, opts ...grpc.CallOption) (*Workspace, error) {
	out := new(Workspace)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.WorkspaceService/getWorkspaceByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspaceServiceClient) GetWorkspaceByLegacyId(ctx context.Context, in *GetWorkspaceByLegacyId, opts ...grpc.CallOption) (*Workspace, error) {
	out := new(Workspace)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.WorkspaceService/getWorkspaceByLegacyId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkspaceServiceServer is the server API for WorkspaceService service.
type WorkspaceServiceServer interface {
	GetWorkspaceById(context.Context, *GetWorkspaceById) (*Workspace, error)
	GetWorkspaceByName(context.Context, *GetWorkspaceByName) (*Workspace, error)
	GetWorkspaceByLegacyId(context.Context, *GetWorkspaceByLegacyId) (*Workspace, error)
}

// UnimplementedWorkspaceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWorkspaceServiceServer struct {
}

func (*UnimplementedWorkspaceServiceServer) GetWorkspaceById(context.Context, *GetWorkspaceById) (*Workspace, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkspaceById not implemented")
}
func (*UnimplementedWorkspaceServiceServer) GetWorkspaceByName(context.Context, *GetWorkspaceByName) (*Workspace, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkspaceByName not implemented")
}
func (*UnimplementedWorkspaceServiceServer) GetWorkspaceByLegacyId(context.Context, *GetWorkspaceByLegacyId) (*Workspace, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkspaceByLegacyId not implemented")
}

func RegisterWorkspaceServiceServer(s *grpc.Server, srv WorkspaceServiceServer) {
	s.RegisterService(&_WorkspaceService_serviceDesc, srv)
}

func _WorkspaceService_GetWorkspaceById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkspaceById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspaceServiceServer).GetWorkspaceById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.WorkspaceService/GetWorkspaceById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspaceServiceServer).GetWorkspaceById(ctx, req.(*GetWorkspaceById))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkspaceService_GetWorkspaceByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkspaceByName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspaceServiceServer).GetWorkspaceByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.WorkspaceService/GetWorkspaceByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspaceServiceServer).GetWorkspaceByName(ctx, req.(*GetWorkspaceByName))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkspaceService_GetWorkspaceByLegacyId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkspaceByLegacyId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspaceServiceServer).GetWorkspaceByLegacyId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.WorkspaceService/GetWorkspaceByLegacyId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspaceServiceServer).GetWorkspaceByLegacyId(ctx, req.(*GetWorkspaceByLegacyId))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorkspaceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ai.verta.uac.WorkspaceService",
	HandlerType: (*WorkspaceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getWorkspaceById",
			Handler:    _WorkspaceService_GetWorkspaceById_Handler,
		},
		{
			MethodName: "getWorkspaceByName",
			Handler:    _WorkspaceService_GetWorkspaceByName_Handler,
		},
		{
			MethodName: "getWorkspaceByLegacyId",
			Handler:    _WorkspaceService_GetWorkspaceByLegacyId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "uac/Workspace.proto",
}
