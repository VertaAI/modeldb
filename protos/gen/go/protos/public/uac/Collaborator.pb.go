// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.2
// source: uac/Collaborator.proto

package uac

import (
	context "context"
	common "github.com/VertaAI/modeldb/protos/gen/go/protos/public/common"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ShareViaEnum int32

const (
	ShareViaEnum_USER_ID  ShareViaEnum = 0
	ShareViaEnum_EMAIL_ID ShareViaEnum = 1
	ShareViaEnum_USERNAME ShareViaEnum = 2
)

// Enum value maps for ShareViaEnum.
var (
	ShareViaEnum_name = map[int32]string{
		0: "USER_ID",
		1: "EMAIL_ID",
		2: "USERNAME",
	}
	ShareViaEnum_value = map[string]int32{
		"USER_ID":  0,
		"EMAIL_ID": 1,
		"USERNAME": 2,
	}
)

func (x ShareViaEnum) Enum() *ShareViaEnum {
	p := new(ShareViaEnum)
	*p = x
	return p
}

func (x ShareViaEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShareViaEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_uac_Collaborator_proto_enumTypes[0].Descriptor()
}

func (ShareViaEnum) Type() protoreflect.EnumType {
	return &file_uac_Collaborator_proto_enumTypes[0]
}

func (x ShareViaEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShareViaEnum.Descriptor instead.
func (ShareViaEnum) EnumDescriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{0}
}

type ResourceVisibility int32

const (
	ResourceVisibility_UNKNOWN           ResourceVisibility = 0
	ResourceVisibility_ORG_DEFAULT       ResourceVisibility = 1
	ResourceVisibility_ORG_CUSTOM        ResourceVisibility = 2
	ResourceVisibility_PRIVATE           ResourceVisibility = 3
	ResourceVisibility_WORKSPACE_DEFAULT ResourceVisibility = 4
)

// Enum value maps for ResourceVisibility.
var (
	ResourceVisibility_name = map[int32]string{
		0: "UNKNOWN",
		1: "ORG_DEFAULT",
		2: "ORG_CUSTOM",
		3: "PRIVATE",
		4: "WORKSPACE_DEFAULT",
	}
	ResourceVisibility_value = map[string]int32{
		"UNKNOWN":           0,
		"ORG_DEFAULT":       1,
		"ORG_CUSTOM":        2,
		"PRIVATE":           3,
		"WORKSPACE_DEFAULT": 4,
	}
)

func (x ResourceVisibility) Enum() *ResourceVisibility {
	p := new(ResourceVisibility)
	*p = x
	return p
}

func (x ResourceVisibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceVisibility) Descriptor() protoreflect.EnumDescriptor {
	return file_uac_Collaborator_proto_enumTypes[1].Descriptor()
}

func (ResourceVisibility) Type() protoreflect.EnumType {
	return &file_uac_Collaborator_proto_enumTypes[1]
}

func (x ResourceVisibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceVisibility.Descriptor instead.
func (ResourceVisibility) EnumDescriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{1}
}

type CollaboratorPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollaboratorType common.CollaboratorTypeEnum_CollaboratorType `protobuf:"varint,1,opt,name=collaborator_type,json=collaboratorType,proto3,enum=ai.verta.common.CollaboratorTypeEnum_CollaboratorType" json:"collaborator_type,omitempty"`
	CanDeploy        common.TernaryEnum_Ternary                   `protobuf:"varint,2,opt,name=can_deploy,json=canDeploy,proto3,enum=ai.verta.common.TernaryEnum_Ternary" json:"can_deploy,omitempty"`
}

func (x *CollaboratorPermissions) Reset() {
	*x = CollaboratorPermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Collaborator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollaboratorPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollaboratorPermissions) ProtoMessage() {}

func (x *CollaboratorPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Collaborator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollaboratorPermissions.ProtoReflect.Descriptor instead.
func (*CollaboratorPermissions) Descriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{0}
}

func (x *CollaboratorPermissions) GetCollaboratorType() common.CollaboratorTypeEnum_CollaboratorType {
	if x != nil {
		return x.CollaboratorType
	}
	return common.CollaboratorTypeEnum_READ_ONLY
}

func (x *CollaboratorPermissions) GetCanDeploy() common.TernaryEnum_Ternary {
	if x != nil {
		return x.CanDeploy
	}
	return common.TernaryEnum_UNKNOWN
}

type AddCollaboratorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityIds        []string                                     `protobuf:"bytes,1,rep,name=entity_ids,json=entityIds,proto3" json:"entity_ids,omitempty"` // List of project.id, experiment.id etc.
	ShareWith        string                                       `protobuf:"bytes,2,opt,name=share_with,json=shareWith,proto3" json:"share_with,omitempty"` // Collaborator user Id
	CollaboratorType common.CollaboratorTypeEnum_CollaboratorType `protobuf:"varint,3,opt,name=collaborator_type,json=collaboratorType,proto3,enum=ai.verta.common.CollaboratorTypeEnum_CollaboratorType" json:"collaborator_type,omitempty"`
	Message          string                                       `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`                             // Shared message for reference
	DateCreated      uint64                                       `protobuf:"varint,5,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"` // shared on
	DateUpdated      uint64                                       `protobuf:"varint,6,opt,name=date_updated,json=dateUpdated,proto3" json:"date_updated,omitempty"` // CollaboratorType updated on
	CanDeploy        common.TernaryEnum_Ternary                   `protobuf:"varint,7,opt,name=can_deploy,json=canDeploy,proto3,enum=ai.verta.common.TernaryEnum_Ternary" json:"can_deploy,omitempty"`
	AuthzEntityType  common.EntitiesEnum_EntitiesTypes            `protobuf:"varint,8,opt,name=authz_entity_type,json=authzEntityType,proto3,enum=ai.verta.common.EntitiesEnum_EntitiesTypes" json:"authz_entity_type,omitempty"` //user, team, org
	Permission       *CollaboratorPermissions                     `protobuf:"bytes,9,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *AddCollaboratorRequest) Reset() {
	*x = AddCollaboratorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Collaborator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCollaboratorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCollaboratorRequest) ProtoMessage() {}

func (x *AddCollaboratorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Collaborator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCollaboratorRequest.ProtoReflect.Descriptor instead.
func (*AddCollaboratorRequest) Descriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{1}
}

func (x *AddCollaboratorRequest) GetEntityIds() []string {
	if x != nil {
		return x.EntityIds
	}
	return nil
}

func (x *AddCollaboratorRequest) GetShareWith() string {
	if x != nil {
		return x.ShareWith
	}
	return ""
}

func (x *AddCollaboratorRequest) GetCollaboratorType() common.CollaboratorTypeEnum_CollaboratorType {
	if x != nil {
		return x.CollaboratorType
	}
	return common.CollaboratorTypeEnum_READ_ONLY
}

func (x *AddCollaboratorRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddCollaboratorRequest) GetDateCreated() uint64 {
	if x != nil {
		return x.DateCreated
	}
	return 0
}

func (x *AddCollaboratorRequest) GetDateUpdated() uint64 {
	if x != nil {
		return x.DateUpdated
	}
	return 0
}

func (x *AddCollaboratorRequest) GetCanDeploy() common.TernaryEnum_Ternary {
	if x != nil {
		return x.CanDeploy
	}
	return common.TernaryEnum_UNKNOWN
}

func (x *AddCollaboratorRequest) GetAuthzEntityType() common.EntitiesEnum_EntitiesTypes {
	if x != nil {
		return x.AuthzEntityType
	}
	return common.EntitiesEnum_UNKNOWN
}

func (x *AddCollaboratorRequest) GetPermission() *CollaboratorPermissions {
	if x != nil {
		return x.Permission
	}
	return nil
}

type RemoveCollaborator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId        string                            `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`    // project.id, experiment.id etc.
	ShareWith       string                            `protobuf:"bytes,2,opt,name=share_with,json=shareWith,proto3" json:"share_with,omitempty"` // Collaborator user Id
	DateDeleted     uint64                            `protobuf:"varint,3,opt,name=date_deleted,json=dateDeleted,proto3" json:"date_deleted,omitempty"`
	AuthzEntityType common.EntitiesEnum_EntitiesTypes `protobuf:"varint,4,opt,name=authz_entity_type,json=authzEntityType,proto3,enum=ai.verta.common.EntitiesEnum_EntitiesTypes" json:"authz_entity_type,omitempty"`
}

func (x *RemoveCollaborator) Reset() {
	*x = RemoveCollaborator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Collaborator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCollaborator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCollaborator) ProtoMessage() {}

func (x *RemoveCollaborator) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Collaborator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCollaborator.ProtoReflect.Descriptor instead.
func (*RemoveCollaborator) Descriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveCollaborator) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *RemoveCollaborator) GetShareWith() string {
	if x != nil {
		return x.ShareWith
	}
	return ""
}

func (x *RemoveCollaborator) GetDateDeleted() uint64 {
	if x != nil {
		return x.DateDeleted
	}
	return 0
}

func (x *RemoveCollaborator) GetAuthzEntityType() common.EntitiesEnum_EntitiesTypes {
	if x != nil {
		return x.AuthzEntityType
	}
	return common.EntitiesEnum_UNKNOWN
}

type GetCollaboratorResponseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	UserId           string                                       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CollaboratorType common.CollaboratorTypeEnum_CollaboratorType `protobuf:"varint,2,opt,name=collaborator_type,json=collaboratorType,proto3,enum=ai.verta.common.CollaboratorTypeEnum_CollaboratorType" json:"collaborator_type,omitempty"`
	ShareViaType     ShareViaEnum                                 `protobuf:"varint,3,opt,name=share_via_type,json=shareViaType,proto3,enum=ai.verta.uac.ShareViaEnum" json:"share_via_type,omitempty"`
	VertaId          string                                       `protobuf:"bytes,4,opt,name=verta_id,json=vertaId,proto3" json:"verta_id,omitempty"` //user_verta_id, team_id, org_id
	CanDeploy        common.TernaryEnum_Ternary                   `protobuf:"varint,5,opt,name=can_deploy,json=canDeploy,proto3,enum=ai.verta.common.TernaryEnum_Ternary" json:"can_deploy,omitempty"`
	AuthzEntityType  common.EntitiesEnum_EntitiesTypes            `protobuf:"varint,6,opt,name=authz_entity_type,json=authzEntityType,proto3,enum=ai.verta.common.EntitiesEnum_EntitiesTypes" json:"authz_entity_type,omitempty"`
	Permission       *CollaboratorPermissions                     `protobuf:"bytes,7,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *GetCollaboratorResponseItem) Reset() {
	*x = GetCollaboratorResponseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Collaborator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollaboratorResponseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollaboratorResponseItem) ProtoMessage() {}

func (x *GetCollaboratorResponseItem) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Collaborator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollaboratorResponseItem.ProtoReflect.Descriptor instead.
func (*GetCollaboratorResponseItem) Descriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{3}
}

// Deprecated: Do not use.
func (x *GetCollaboratorResponseItem) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetCollaboratorResponseItem) GetCollaboratorType() common.CollaboratorTypeEnum_CollaboratorType {
	if x != nil {
		return x.CollaboratorType
	}
	return common.CollaboratorTypeEnum_READ_ONLY
}

func (x *GetCollaboratorResponseItem) GetShareViaType() ShareViaEnum {
	if x != nil {
		return x.ShareViaType
	}
	return ShareViaEnum_USER_ID
}

func (x *GetCollaboratorResponseItem) GetVertaId() string {
	if x != nil {
		return x.VertaId
	}
	return ""
}

func (x *GetCollaboratorResponseItem) GetCanDeploy() common.TernaryEnum_Ternary {
	if x != nil {
		return x.CanDeploy
	}
	return common.TernaryEnum_UNKNOWN
}

func (x *GetCollaboratorResponseItem) GetAuthzEntityType() common.EntitiesEnum_EntitiesTypes {
	if x != nil {
		return x.AuthzEntityType
	}
	return common.EntitiesEnum_UNKNOWN
}

func (x *GetCollaboratorResponseItem) GetPermission() *CollaboratorPermissions {
	if x != nil {
		return x.Permission
	}
	return nil
}

type GetCollaborator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId string `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
}

func (x *GetCollaborator) Reset() {
	*x = GetCollaborator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Collaborator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollaborator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollaborator) ProtoMessage() {}

func (x *GetCollaborator) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Collaborator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollaborator.ProtoReflect.Descriptor instead.
func (*GetCollaborator) Descriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{4}
}

func (x *GetCollaborator) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

type GetResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. If empty, will assume we want to get all resources
	Resources *Resources `protobuf:"bytes,1,opt,name=resources,proto3" json:"resources,omitempty"`
	// Optional. If empty, will assume we want to get across all workspaces
	//
	// Types that are assignable to Workspace:
	//	*GetResources_WorkspaceId
	//	*GetResources_WorkspaceName
	Workspace isGetResources_Workspace `protobuf_oneof:"workspace"`
	// Optional. If Provided, workspace, resource service, type should be provided
	ResourceName string `protobuf:"bytes,4,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
}

func (x *GetResources) Reset() {
	*x = GetResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Collaborator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResources) ProtoMessage() {}

func (x *GetResources) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Collaborator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResources.ProtoReflect.Descriptor instead.
func (*GetResources) Descriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{5}
}

func (x *GetResources) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (m *GetResources) GetWorkspace() isGetResources_Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

func (x *GetResources) GetWorkspaceId() uint64 {
	if x, ok := x.GetWorkspace().(*GetResources_WorkspaceId); ok {
		return x.WorkspaceId
	}
	return 0
}

func (x *GetResources) GetWorkspaceName() string {
	if x, ok := x.GetWorkspace().(*GetResources_WorkspaceName); ok {
		return x.WorkspaceName
	}
	return ""
}

func (x *GetResources) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

type isGetResources_Workspace interface {
	isGetResources_Workspace()
}

type GetResources_WorkspaceId struct {
	WorkspaceId uint64 `protobuf:"varint,2,opt,name=workspace_id,json=workspaceId,proto3,oneof"`
}

type GetResources_WorkspaceName struct {
	WorkspaceName string `protobuf:"bytes,3,opt,name=workspace_name,json=workspaceName,proto3,oneof"`
}

func (*GetResources_WorkspaceId) isGetResources_Workspace() {}

func (*GetResources_WorkspaceName) isGetResources_Workspace() {}

type GetResourcesResponseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service      ServiceEnum_Service `protobuf:"varint,10,opt,name=service,proto3,enum=ai.verta.uac.ServiceEnum_Service" json:"service,omitempty"`
	ResourceId   string              `protobuf:"bytes,11,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceName string              `protobuf:"bytes,13,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	ResourceType *ResourceType       `protobuf:"bytes,12,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	WorkspaceId  uint64              `protobuf:"varint,2,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// Owner of the resource
	OwnerId uint64 `protobuf:"varint,3,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// Type of the visibility
	Visibility ResourceVisibility `protobuf:"varint,4,opt,name=visibility,proto3,enum=ai.verta.uac.ResourceVisibility" json:"visibility,omitempty"`
	// The next field only makes sense when visibility == ORG_CUSTOM
	// They will be empty otherwise
	CustomPermission *CollaboratorPermissions `protobuf:"bytes,9,opt,name=custom_permission,json=customPermission,proto3" json:"custom_permission,omitempty"`
}

func (x *GetResourcesResponseItem) Reset() {
	*x = GetResourcesResponseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Collaborator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcesResponseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesResponseItem) ProtoMessage() {}

func (x *GetResourcesResponseItem) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Collaborator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesResponseItem.ProtoReflect.Descriptor instead.
func (*GetResourcesResponseItem) Descriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{6}
}

func (x *GetResourcesResponseItem) GetService() ServiceEnum_Service {
	if x != nil {
		return x.Service
	}
	return ServiceEnum_UNKNOWN
}

func (x *GetResourcesResponseItem) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *GetResourcesResponseItem) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *GetResourcesResponseItem) GetResourceType() *ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return nil
}

func (x *GetResourcesResponseItem) GetWorkspaceId() uint64 {
	if x != nil {
		return x.WorkspaceId
	}
	return 0
}

func (x *GetResourcesResponseItem) GetOwnerId() uint64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *GetResourcesResponseItem) GetVisibility() ResourceVisibility {
	if x != nil {
		return x.Visibility
	}
	return ResourceVisibility_UNKNOWN
}

func (x *GetResourcesResponseItem) GetCustomPermission() *CollaboratorPermissions {
	if x != nil {
		return x.CustomPermission
	}
	return nil
}

type SetResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specification of the resources. IDs are globally unique, so changes in the fields above cause
	// update on pre-exising resources
	Service ServiceEnum_Service `protobuf:"varint,1,opt,name=service,proto3,enum=ai.verta.uac.ServiceEnum_Service" json:"service,omitempty"`
	// Internal ID for the resource in the service, whose meaning doesn't matter for other services
	// This is optional. If empty, means all resources
	ResourceId   string        `protobuf:"bytes,8,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceName string        `protobuf:"bytes,9,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	ResourceType *ResourceType `protobuf:"bytes,10,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	// Workspace where the resources belong
	//
	// Types that are assignable to Workspace:
	//	*SetResource_WorkspaceId
	//	*SetResource_WorkspaceName
	Workspace isSetResource_Workspace `protobuf_oneof:"workspace"`
	// Owner of the resource
	OwnerId uint64 `protobuf:"varint,4,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// Type of the visibility
	Visibility ResourceVisibility `protobuf:"varint,5,opt,name=visibility,proto3,enum=ai.verta.uac.ResourceVisibility" json:"visibility,omitempty"`
	// The next fields only makes sense when visibility == ORG_SCOPED_PUBLIC. We should error
	// otherwise
	CollaboratorType common.CollaboratorTypeEnum_CollaboratorType `protobuf:"varint,6,opt,name=collaborator_type,json=collaboratorType,proto3,enum=ai.verta.common.CollaboratorTypeEnum_CollaboratorType" json:"collaborator_type,omitempty"`
	CanDeploy        common.TernaryEnum_Ternary                   `protobuf:"varint,7,opt,name=can_deploy,json=canDeploy,proto3,enum=ai.verta.common.TernaryEnum_Ternary" json:"can_deploy,omitempty"`
}

func (x *SetResource) Reset() {
	*x = SetResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Collaborator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetResource) ProtoMessage() {}

func (x *SetResource) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Collaborator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetResource.ProtoReflect.Descriptor instead.
func (*SetResource) Descriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{7}
}

func (x *SetResource) GetService() ServiceEnum_Service {
	if x != nil {
		return x.Service
	}
	return ServiceEnum_UNKNOWN
}

func (x *SetResource) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *SetResource) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *SetResource) GetResourceType() *ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return nil
}

func (m *SetResource) GetWorkspace() isSetResource_Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

func (x *SetResource) GetWorkspaceId() uint64 {
	if x, ok := x.GetWorkspace().(*SetResource_WorkspaceId); ok {
		return x.WorkspaceId
	}
	return 0
}

func (x *SetResource) GetWorkspaceName() string {
	if x, ok := x.GetWorkspace().(*SetResource_WorkspaceName); ok {
		return x.WorkspaceName
	}
	return ""
}

func (x *SetResource) GetOwnerId() uint64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *SetResource) GetVisibility() ResourceVisibility {
	if x != nil {
		return x.Visibility
	}
	return ResourceVisibility_UNKNOWN
}

func (x *SetResource) GetCollaboratorType() common.CollaboratorTypeEnum_CollaboratorType {
	if x != nil {
		return x.CollaboratorType
	}
	return common.CollaboratorTypeEnum_READ_ONLY
}

func (x *SetResource) GetCanDeploy() common.TernaryEnum_Ternary {
	if x != nil {
		return x.CanDeploy
	}
	return common.TernaryEnum_UNKNOWN
}

type isSetResource_Workspace interface {
	isSetResource_Workspace()
}

type SetResource_WorkspaceId struct {
	WorkspaceId uint64 `protobuf:"varint,2,opt,name=workspace_id,json=workspaceId,proto3,oneof"`
}

type SetResource_WorkspaceName struct {
	WorkspaceName string `protobuf:"bytes,3,opt,name=workspace_name,json=workspaceName,proto3,oneof"`
}

func (*SetResource_WorkspaceId) isSetResource_Workspace() {}

func (*SetResource_WorkspaceName) isSetResource_Workspace() {}

type DeleteResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specification of the resources
	Resources *Resources `protobuf:"bytes,1,opt,name=resources,proto3" json:"resources,omitempty"`
}

func (x *DeleteResources) Reset() {
	*x = DeleteResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Collaborator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResources) ProtoMessage() {}

func (x *DeleteResources) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Collaborator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResources.ProtoReflect.Descriptor instead.
func (*DeleteResources) Descriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteResources) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

type AddCollaboratorRequest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelfAllowedActions []*Action `protobuf:"bytes,5,rep,name=self_allowed_actions,json=selfAllowedActions,proto3" json:"self_allowed_actions,omitempty"`
	Status             bool      `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// Types that are assignable to Collaborator:
	//	*AddCollaboratorRequest_Response_CollaboratorUserInfo
	//	*AddCollaboratorRequest_Response_CollaboratorOrganization
	//	*AddCollaboratorRequest_Response_CollaboratorTeam
	Collaborator isAddCollaboratorRequest_Response_Collaborator `protobuf_oneof:"collaborator"`
}

func (x *AddCollaboratorRequest_Response) Reset() {
	*x = AddCollaboratorRequest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Collaborator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCollaboratorRequest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCollaboratorRequest_Response) ProtoMessage() {}

func (x *AddCollaboratorRequest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Collaborator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCollaboratorRequest_Response.ProtoReflect.Descriptor instead.
func (*AddCollaboratorRequest_Response) Descriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AddCollaboratorRequest_Response) GetSelfAllowedActions() []*Action {
	if x != nil {
		return x.SelfAllowedActions
	}
	return nil
}

func (x *AddCollaboratorRequest_Response) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (m *AddCollaboratorRequest_Response) GetCollaborator() isAddCollaboratorRequest_Response_Collaborator {
	if m != nil {
		return m.Collaborator
	}
	return nil
}

func (x *AddCollaboratorRequest_Response) GetCollaboratorUserInfo() *UserInfo {
	if x, ok := x.GetCollaborator().(*AddCollaboratorRequest_Response_CollaboratorUserInfo); ok {
		return x.CollaboratorUserInfo
	}
	return nil
}

func (x *AddCollaboratorRequest_Response) GetCollaboratorOrganization() *Organization {
	if x, ok := x.GetCollaborator().(*AddCollaboratorRequest_Response_CollaboratorOrganization); ok {
		return x.CollaboratorOrganization
	}
	return nil
}

func (x *AddCollaboratorRequest_Response) GetCollaboratorTeam() *Team {
	if x, ok := x.GetCollaborator().(*AddCollaboratorRequest_Response_CollaboratorTeam); ok {
		return x.CollaboratorTeam
	}
	return nil
}

type isAddCollaboratorRequest_Response_Collaborator interface {
	isAddCollaboratorRequest_Response_Collaborator()
}

type AddCollaboratorRequest_Response_CollaboratorUserInfo struct {
	CollaboratorUserInfo *UserInfo `protobuf:"bytes,2,opt,name=collaborator_user_info,json=collaboratorUserInfo,proto3,oneof"`
}

type AddCollaboratorRequest_Response_CollaboratorOrganization struct {
	CollaboratorOrganization *Organization `protobuf:"bytes,3,opt,name=collaborator_organization,json=collaboratorOrganization,proto3,oneof"`
}

type AddCollaboratorRequest_Response_CollaboratorTeam struct {
	CollaboratorTeam *Team `protobuf:"bytes,4,opt,name=collaborator_team,json=collaboratorTeam,proto3,oneof"`
}

func (*AddCollaboratorRequest_Response_CollaboratorUserInfo) isAddCollaboratorRequest_Response_Collaborator() {
}

func (*AddCollaboratorRequest_Response_CollaboratorOrganization) isAddCollaboratorRequest_Response_Collaborator() {
}

func (*AddCollaboratorRequest_Response_CollaboratorTeam) isAddCollaboratorRequest_Response_Collaborator() {
}

type RemoveCollaborator_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status             bool      `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	SelfAllowedActions []*Action `protobuf:"bytes,5,rep,name=self_allowed_actions,json=selfAllowedActions,proto3" json:"self_allowed_actions,omitempty"`
}

func (x *RemoveCollaborator_Response) Reset() {
	*x = RemoveCollaborator_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Collaborator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCollaborator_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCollaborator_Response) ProtoMessage() {}

func (x *RemoveCollaborator_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Collaborator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCollaborator_Response.ProtoReflect.Descriptor instead.
func (*RemoveCollaborator_Response) Descriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{2, 0}
}

func (x *RemoveCollaborator_Response) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *RemoveCollaborator_Response) GetSelfAllowedActions() []*Action {
	if x != nil {
		return x.SelfAllowedActions
	}
	return nil
}

type GetCollaborator_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SharedUsers []*GetCollaboratorResponseItem `protobuf:"bytes,1,rep,name=shared_users,json=sharedUsers,proto3" json:"shared_users,omitempty"`
}

func (x *GetCollaborator_Response) Reset() {
	*x = GetCollaborator_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Collaborator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCollaborator_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollaborator_Response) ProtoMessage() {}

func (x *GetCollaborator_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Collaborator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollaborator_Response.ProtoReflect.Descriptor instead.
func (*GetCollaborator_Response) Descriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{4, 0}
}

func (x *GetCollaborator_Response) GetSharedUsers() []*GetCollaboratorResponseItem {
	if x != nil {
		return x.SharedUsers
	}
	return nil
}

type GetResources_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item []*GetResourcesResponseItem `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
}

func (x *GetResources_Response) Reset() {
	*x = GetResources_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Collaborator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResources_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResources_Response) ProtoMessage() {}

func (x *GetResources_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Collaborator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResources_Response.ProtoReflect.Descriptor instead.
func (*GetResources_Response) Descriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetResources_Response) GetItem() []*GetResourcesResponseItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type SetResource_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetResource_Response) Reset() {
	*x = SetResource_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Collaborator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetResource_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetResource_Response) ProtoMessage() {}

func (x *SetResource_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Collaborator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetResource_Response.ProtoReflect.Descriptor instead.
func (*SetResource_Response) Descriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{7, 0}
}

type DeleteResources_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteResources_Response) Reset() {
	*x = DeleteResources_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_Collaborator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResources_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResources_Response) ProtoMessage() {}

func (x *DeleteResources_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_Collaborator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResources_Response.ProtoReflect.Descriptor instead.
func (*DeleteResources_Response) Descriptor() ([]byte, []int) {
	return file_uac_Collaborator_proto_rawDescGZIP(), []int{8, 0}
}

var File_uac_Collaborator_proto protoreflect.FileDescriptor

var file_uac_Collaborator_proto_rawDesc = []byte{
	0x0a, 0x16, 0x75, 0x61, 0x63, 0x2f, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x75, 0x61, 0x63, 0x2f, 0x55, 0x41, 0x43, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x75, 0x61, 0x63, 0x2f,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0e, 0x75, 0x61, 0x63, 0x2f, 0x54, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x75, 0x61, 0x63, 0x2f, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62,
	0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x63, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x72,
	0x6e, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x54, 0x65, 0x72, 0x6e, 0x61, 0x72, 0x79,
	0x52, 0x09, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x22, 0xeb, 0x06, 0x0a, 0x16,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x77,
	0x69, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x12, 0x63, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x0a, 0x63, 0x61, 0x6e,
	0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x54, 0x65, 0x72, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x54, 0x65, 0x72, 0x6e,
	0x61, 0x72, 0x79, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x57,
	0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61,
	0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0xe8,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x14, 0x73,
	0x65, 0x6c, 0x66, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x12, 0x73, 0x65, 0x6c, 0x66, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x16, 0x63,
	0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x14, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x59, 0x0a, 0x19, 0x63,
	0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x18, 0x63, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62,
	0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63,
	0x2e, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x0e, 0x0a, 0x0c, 0x63, 0x6f, 0x6c,
	0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0xb8, 0x02, 0x0a, 0x12, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x57, 0x69, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x57, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x6a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x46, 0x0a, 0x14,
	0x73, 0x65, 0x6c, 0x66, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x12, 0x73, 0x65, 0x6c, 0x66, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe1, 0x03, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x63, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x76, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x56, 0x69, 0x61, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x56, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x72, 0x6e, 0x61, 0x72,
	0x79, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x54, 0x65, 0x72, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x09, 0x63,
	0x61, 0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x57, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68,
	0x7a, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x75, 0x6d, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x45, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x75, 0x61, 0x63, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x88, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x1a, 0x58, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x22, 0x8d, 0x02, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0c, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x00, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x46,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x42, 0x0b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x22, 0xb2, 0x03, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x3b, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x40, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x52, 0x0a, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xbf, 0x04, 0x0a, 0x0b, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61,
	0x63, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0c,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x00, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x63, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x61,
	0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62,
	0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x63, 0x6f, 0x6c, 0x6c,
	0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0a,
	0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x72, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x54,
	0x65, 0x72, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x54, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x35, 0x0a,
	0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2a, 0x37, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x56, 0x69, 0x61, 0x45, 0x6e, 0x75, 0x6d,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x55,
	0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x2a, 0x66, 0x0a, 0x12, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x4f, 0x52, 0x47, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x4f, 0x52, 0x47, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x57, 0x4f,
	0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10,
	0x04, 0x32, 0xd9, 0x17, 0x0a, 0x13, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x0c, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x1a, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0xa6, 0x01, 0x0a, 0x24, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x1a, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x37, 0x12, 0x35, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x0b, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x1a, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x75, 0x61, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21,
	0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2f, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x01,
	0x2a, 0x12, 0x5a, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x75, 0x61, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x1a, 0x26, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75,
	0x61, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb1, 0x01,
	0x0a, 0x1e, 0x61, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x24, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x22, 0x2f, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f,
	0x61, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x3a, 0x01,
	0x2a, 0x12, 0x9c, 0x01, 0x0a, 0x19, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x1a, 0x29, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2c, 0x2a, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62,
	0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x92, 0x01, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1d, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x26, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x67, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0xb1, 0x01, 0x0a, 0x1e, 0x61, 0x64, 0x64, 0x4f, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61,
	0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x41, 0x64,
	0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x34, 0x22, 0x2f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61,
	0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62,
	0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x9c, 0x01, 0x0a, 0x19, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61,
	0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x29, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x2a, 0x2a, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x92, 0x01, 0x0a, 0x17, 0x67, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x1a, 0x26, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75,
	0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0xb7, 0x01,
	0x0a, 0x21, 0x61, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x24, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75,
	0x61, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c,
	0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37,
	0x22, 0x32, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2f, 0x61, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0xa2, 0x01, 0x0a, 0x1c, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6c,
	0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x29, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x2a, 0x2d, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x98, 0x01, 0x0a,
	0x1a, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x26, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62,
	0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0xb3, 0x01, 0x0a, 0x1f, 0x61, 0x64, 0x64, 0x4f,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63,
	0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x22, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x64, 0x64, 0x4f, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x9e, 0x01,
	0x0a, 0x1a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x29,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2d, 0x2a, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x94,
	0x01, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x26, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x67, 0x65, 0x74,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0xc1, 0x01, 0x0a, 0x26, 0x61, 0x64, 0x64, 0x4f, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x24, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x22, 0x37, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f,
	0x61, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62,
	0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0xac, 0x01, 0x0a, 0x21, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x1a, 0x29, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x34, 0x2a, 0x32, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62,
	0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x6c,
	0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xa2, 0x01, 0x0a, 0x1f, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43,
	0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1d, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x26, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x67, 0x65,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x42, 0x3e, 0x50,
	0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x56, 0x65,
	0x72, 0x74, 0x61, 0x41, 0x49, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x75, 0x61, 0x63, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_uac_Collaborator_proto_rawDescOnce sync.Once
	file_uac_Collaborator_proto_rawDescData = file_uac_Collaborator_proto_rawDesc
)

func file_uac_Collaborator_proto_rawDescGZIP() []byte {
	file_uac_Collaborator_proto_rawDescOnce.Do(func() {
		file_uac_Collaborator_proto_rawDescData = protoimpl.X.CompressGZIP(file_uac_Collaborator_proto_rawDescData)
	})
	return file_uac_Collaborator_proto_rawDescData
}

var file_uac_Collaborator_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_uac_Collaborator_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_uac_Collaborator_proto_goTypes = []interface{}{
	(ShareViaEnum)(0),                                 // 0: ai.verta.uac.ShareViaEnum
	(ResourceVisibility)(0),                           // 1: ai.verta.uac.ResourceVisibility
	(*CollaboratorPermissions)(nil),                   // 2: ai.verta.uac.CollaboratorPermissions
	(*AddCollaboratorRequest)(nil),                    // 3: ai.verta.uac.AddCollaboratorRequest
	(*RemoveCollaborator)(nil),                        // 4: ai.verta.uac.RemoveCollaborator
	(*GetCollaboratorResponseItem)(nil),               // 5: ai.verta.uac.GetCollaboratorResponseItem
	(*GetCollaborator)(nil),                           // 6: ai.verta.uac.GetCollaborator
	(*GetResources)(nil),                              // 7: ai.verta.uac.GetResources
	(*GetResourcesResponseItem)(nil),                  // 8: ai.verta.uac.GetResourcesResponseItem
	(*SetResource)(nil),                               // 9: ai.verta.uac.SetResource
	(*DeleteResources)(nil),                           // 10: ai.verta.uac.DeleteResources
	(*AddCollaboratorRequest_Response)(nil),           // 11: ai.verta.uac.AddCollaboratorRequest.Response
	(*RemoveCollaborator_Response)(nil),               // 12: ai.verta.uac.RemoveCollaborator.Response
	(*GetCollaborator_Response)(nil),                  // 13: ai.verta.uac.GetCollaborator.Response
	(*GetResources_Response)(nil),                     // 14: ai.verta.uac.GetResources.Response
	(*SetResource_Response)(nil),                      // 15: ai.verta.uac.SetResource.Response
	(*DeleteResources_Response)(nil),                  // 16: ai.verta.uac.DeleteResources.Response
	(common.CollaboratorTypeEnum_CollaboratorType)(0), // 17: ai.verta.common.CollaboratorTypeEnum.CollaboratorType
	(common.TernaryEnum_Ternary)(0),                   // 18: ai.verta.common.TernaryEnum.Ternary
	(common.EntitiesEnum_EntitiesTypes)(0),            // 19: ai.verta.common.EntitiesEnum.EntitiesTypes
	(*Resources)(nil),                                 // 20: ai.verta.uac.Resources
	(ServiceEnum_Service)(0),                          // 21: ai.verta.uac.ServiceEnum.Service
	(*ResourceType)(nil),                              // 22: ai.verta.uac.ResourceType
	(*Action)(nil),                                    // 23: ai.verta.uac.Action
	(*UserInfo)(nil),                                  // 24: ai.verta.uac.UserInfo
	(*Organization)(nil),                              // 25: ai.verta.uac.Organization
	(*Team)(nil),                                      // 26: ai.verta.uac.Team
}
var file_uac_Collaborator_proto_depIdxs = []int32{
	17, // 0: ai.verta.uac.CollaboratorPermissions.collaborator_type:type_name -> ai.verta.common.CollaboratorTypeEnum.CollaboratorType
	18, // 1: ai.verta.uac.CollaboratorPermissions.can_deploy:type_name -> ai.verta.common.TernaryEnum.Ternary
	17, // 2: ai.verta.uac.AddCollaboratorRequest.collaborator_type:type_name -> ai.verta.common.CollaboratorTypeEnum.CollaboratorType
	18, // 3: ai.verta.uac.AddCollaboratorRequest.can_deploy:type_name -> ai.verta.common.TernaryEnum.Ternary
	19, // 4: ai.verta.uac.AddCollaboratorRequest.authz_entity_type:type_name -> ai.verta.common.EntitiesEnum.EntitiesTypes
	2,  // 5: ai.verta.uac.AddCollaboratorRequest.permission:type_name -> ai.verta.uac.CollaboratorPermissions
	19, // 6: ai.verta.uac.RemoveCollaborator.authz_entity_type:type_name -> ai.verta.common.EntitiesEnum.EntitiesTypes
	17, // 7: ai.verta.uac.GetCollaboratorResponseItem.collaborator_type:type_name -> ai.verta.common.CollaboratorTypeEnum.CollaboratorType
	0,  // 8: ai.verta.uac.GetCollaboratorResponseItem.share_via_type:type_name -> ai.verta.uac.ShareViaEnum
	18, // 9: ai.verta.uac.GetCollaboratorResponseItem.can_deploy:type_name -> ai.verta.common.TernaryEnum.Ternary
	19, // 10: ai.verta.uac.GetCollaboratorResponseItem.authz_entity_type:type_name -> ai.verta.common.EntitiesEnum.EntitiesTypes
	2,  // 11: ai.verta.uac.GetCollaboratorResponseItem.permission:type_name -> ai.verta.uac.CollaboratorPermissions
	20, // 12: ai.verta.uac.GetResources.resources:type_name -> ai.verta.uac.Resources
	21, // 13: ai.verta.uac.GetResourcesResponseItem.service:type_name -> ai.verta.uac.ServiceEnum.Service
	22, // 14: ai.verta.uac.GetResourcesResponseItem.resource_type:type_name -> ai.verta.uac.ResourceType
	1,  // 15: ai.verta.uac.GetResourcesResponseItem.visibility:type_name -> ai.verta.uac.ResourceVisibility
	2,  // 16: ai.verta.uac.GetResourcesResponseItem.custom_permission:type_name -> ai.verta.uac.CollaboratorPermissions
	21, // 17: ai.verta.uac.SetResource.service:type_name -> ai.verta.uac.ServiceEnum.Service
	22, // 18: ai.verta.uac.SetResource.resource_type:type_name -> ai.verta.uac.ResourceType
	1,  // 19: ai.verta.uac.SetResource.visibility:type_name -> ai.verta.uac.ResourceVisibility
	17, // 20: ai.verta.uac.SetResource.collaborator_type:type_name -> ai.verta.common.CollaboratorTypeEnum.CollaboratorType
	18, // 21: ai.verta.uac.SetResource.can_deploy:type_name -> ai.verta.common.TernaryEnum.Ternary
	20, // 22: ai.verta.uac.DeleteResources.resources:type_name -> ai.verta.uac.Resources
	23, // 23: ai.verta.uac.AddCollaboratorRequest.Response.self_allowed_actions:type_name -> ai.verta.uac.Action
	24, // 24: ai.verta.uac.AddCollaboratorRequest.Response.collaborator_user_info:type_name -> ai.verta.uac.UserInfo
	25, // 25: ai.verta.uac.AddCollaboratorRequest.Response.collaborator_organization:type_name -> ai.verta.uac.Organization
	26, // 26: ai.verta.uac.AddCollaboratorRequest.Response.collaborator_team:type_name -> ai.verta.uac.Team
	23, // 27: ai.verta.uac.RemoveCollaborator.Response.self_allowed_actions:type_name -> ai.verta.uac.Action
	5,  // 28: ai.verta.uac.GetCollaborator.Response.shared_users:type_name -> ai.verta.uac.GetCollaboratorResponseItem
	8,  // 29: ai.verta.uac.GetResources.Response.item:type_name -> ai.verta.uac.GetResourcesResponseItem
	7,  // 30: ai.verta.uac.CollaboratorService.getResources:input_type -> ai.verta.uac.GetResources
	7,  // 31: ai.verta.uac.CollaboratorService.getResourcesSpecialPersonalWorkspace:input_type -> ai.verta.uac.GetResources
	9,  // 32: ai.verta.uac.CollaboratorService.setResource:input_type -> ai.verta.uac.SetResource
	10, // 33: ai.verta.uac.CollaboratorService.deleteResources:input_type -> ai.verta.uac.DeleteResources
	3,  // 34: ai.verta.uac.CollaboratorService.addOrUpdateProjectCollaborator:input_type -> ai.verta.uac.AddCollaboratorRequest
	4,  // 35: ai.verta.uac.CollaboratorService.removeProjectCollaborator:input_type -> ai.verta.uac.RemoveCollaborator
	6,  // 36: ai.verta.uac.CollaboratorService.getProjectCollaborators:input_type -> ai.verta.uac.GetCollaborator
	3,  // 37: ai.verta.uac.CollaboratorService.addOrUpdateDatasetCollaborator:input_type -> ai.verta.uac.AddCollaboratorRequest
	4,  // 38: ai.verta.uac.CollaboratorService.removeDatasetCollaborator:input_type -> ai.verta.uac.RemoveCollaborator
	6,  // 39: ai.verta.uac.CollaboratorService.getDatasetCollaborators:input_type -> ai.verta.uac.GetCollaborator
	3,  // 40: ai.verta.uac.CollaboratorService.addOrUpdateRepositoryCollaborator:input_type -> ai.verta.uac.AddCollaboratorRequest
	4,  // 41: ai.verta.uac.CollaboratorService.removeRepositoryCollaborator:input_type -> ai.verta.uac.RemoveCollaborator
	6,  // 42: ai.verta.uac.CollaboratorService.getRepositoryCollaborators:input_type -> ai.verta.uac.GetCollaborator
	3,  // 43: ai.verta.uac.CollaboratorService.addOrUpdateEndpointCollaborator:input_type -> ai.verta.uac.AddCollaboratorRequest
	4,  // 44: ai.verta.uac.CollaboratorService.removeEndpointCollaborator:input_type -> ai.verta.uac.RemoveCollaborator
	6,  // 45: ai.verta.uac.CollaboratorService.getEndpointCollaborators:input_type -> ai.verta.uac.GetCollaborator
	3,  // 46: ai.verta.uac.CollaboratorService.addOrUpdateRegisteredModelCollaborator:input_type -> ai.verta.uac.AddCollaboratorRequest
	4,  // 47: ai.verta.uac.CollaboratorService.removeRegisteredModelCollaborator:input_type -> ai.verta.uac.RemoveCollaborator
	6,  // 48: ai.verta.uac.CollaboratorService.getRegisteredModelCollaborators:input_type -> ai.verta.uac.GetCollaborator
	14, // 49: ai.verta.uac.CollaboratorService.getResources:output_type -> ai.verta.uac.GetResources.Response
	14, // 50: ai.verta.uac.CollaboratorService.getResourcesSpecialPersonalWorkspace:output_type -> ai.verta.uac.GetResources.Response
	15, // 51: ai.verta.uac.CollaboratorService.setResource:output_type -> ai.verta.uac.SetResource.Response
	16, // 52: ai.verta.uac.CollaboratorService.deleteResources:output_type -> ai.verta.uac.DeleteResources.Response
	11, // 53: ai.verta.uac.CollaboratorService.addOrUpdateProjectCollaborator:output_type -> ai.verta.uac.AddCollaboratorRequest.Response
	12, // 54: ai.verta.uac.CollaboratorService.removeProjectCollaborator:output_type -> ai.verta.uac.RemoveCollaborator.Response
	13, // 55: ai.verta.uac.CollaboratorService.getProjectCollaborators:output_type -> ai.verta.uac.GetCollaborator.Response
	11, // 56: ai.verta.uac.CollaboratorService.addOrUpdateDatasetCollaborator:output_type -> ai.verta.uac.AddCollaboratorRequest.Response
	12, // 57: ai.verta.uac.CollaboratorService.removeDatasetCollaborator:output_type -> ai.verta.uac.RemoveCollaborator.Response
	13, // 58: ai.verta.uac.CollaboratorService.getDatasetCollaborators:output_type -> ai.verta.uac.GetCollaborator.Response
	11, // 59: ai.verta.uac.CollaboratorService.addOrUpdateRepositoryCollaborator:output_type -> ai.verta.uac.AddCollaboratorRequest.Response
	12, // 60: ai.verta.uac.CollaboratorService.removeRepositoryCollaborator:output_type -> ai.verta.uac.RemoveCollaborator.Response
	13, // 61: ai.verta.uac.CollaboratorService.getRepositoryCollaborators:output_type -> ai.verta.uac.GetCollaborator.Response
	11, // 62: ai.verta.uac.CollaboratorService.addOrUpdateEndpointCollaborator:output_type -> ai.verta.uac.AddCollaboratorRequest.Response
	12, // 63: ai.verta.uac.CollaboratorService.removeEndpointCollaborator:output_type -> ai.verta.uac.RemoveCollaborator.Response
	13, // 64: ai.verta.uac.CollaboratorService.getEndpointCollaborators:output_type -> ai.verta.uac.GetCollaborator.Response
	11, // 65: ai.verta.uac.CollaboratorService.addOrUpdateRegisteredModelCollaborator:output_type -> ai.verta.uac.AddCollaboratorRequest.Response
	12, // 66: ai.verta.uac.CollaboratorService.removeRegisteredModelCollaborator:output_type -> ai.verta.uac.RemoveCollaborator.Response
	13, // 67: ai.verta.uac.CollaboratorService.getRegisteredModelCollaborators:output_type -> ai.verta.uac.GetCollaborator.Response
	49, // [49:68] is the sub-list for method output_type
	30, // [30:49] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_uac_Collaborator_proto_init() }
func file_uac_Collaborator_proto_init() {
	if File_uac_Collaborator_proto != nil {
		return
	}
	file_uac_UACService_proto_init()
	file_uac_Organization_proto_init()
	file_uac_Team_proto_init()
	file_uac_RoleService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_uac_Collaborator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollaboratorPermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Collaborator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCollaboratorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Collaborator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCollaborator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Collaborator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollaboratorResponseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Collaborator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollaborator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Collaborator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Collaborator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcesResponseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Collaborator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Collaborator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Collaborator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCollaboratorRequest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Collaborator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCollaborator_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Collaborator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCollaborator_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Collaborator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResources_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Collaborator_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetResource_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_Collaborator_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResources_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_uac_Collaborator_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*GetResources_WorkspaceId)(nil),
		(*GetResources_WorkspaceName)(nil),
	}
	file_uac_Collaborator_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*SetResource_WorkspaceId)(nil),
		(*SetResource_WorkspaceName)(nil),
	}
	file_uac_Collaborator_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*AddCollaboratorRequest_Response_CollaboratorUserInfo)(nil),
		(*AddCollaboratorRequest_Response_CollaboratorOrganization)(nil),
		(*AddCollaboratorRequest_Response_CollaboratorTeam)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uac_Collaborator_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uac_Collaborator_proto_goTypes,
		DependencyIndexes: file_uac_Collaborator_proto_depIdxs,
		EnumInfos:         file_uac_Collaborator_proto_enumTypes,
		MessageInfos:      file_uac_Collaborator_proto_msgTypes,
	}.Build()
	File_uac_Collaborator_proto = out.File
	file_uac_Collaborator_proto_rawDesc = nil
	file_uac_Collaborator_proto_goTypes = nil
	file_uac_Collaborator_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CollaboratorServiceClient is the client API for CollaboratorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CollaboratorServiceClient interface {
	// The caller must have permission to GET the resource accordingly
	GetResources(ctx context.Context, in *GetResources, opts ...grpc.CallOption) (*GetResources_Response, error)
	// The caller must have permission to GET the resource accordingly
	// gets resources that is available in personal workspace (all except organization workspace resources)
	GetResourcesSpecialPersonalWorkspace(ctx context.Context, in *GetResources, opts ...grpc.CallOption) (*GetResources_Response, error)
	// The caller must have permission to CREATE or UPDATE the resource accordingly
	SetResource(ctx context.Context, in *SetResource, opts ...grpc.CallOption) (*SetResource_Response, error)
	// The caller must have permission to DELETE the resource accordingly
	DeleteResources(ctx context.Context, in *DeleteResources, opts ...grpc.CallOption) (*DeleteResources_Response, error)
	AddOrUpdateProjectCollaborator(ctx context.Context, in *AddCollaboratorRequest, opts ...grpc.CallOption) (*AddCollaboratorRequest_Response, error)
	RemoveProjectCollaborator(ctx context.Context, in *RemoveCollaborator, opts ...grpc.CallOption) (*RemoveCollaborator_Response, error)
	GetProjectCollaborators(ctx context.Context, in *GetCollaborator, opts ...grpc.CallOption) (*GetCollaborator_Response, error)
	AddOrUpdateDatasetCollaborator(ctx context.Context, in *AddCollaboratorRequest, opts ...grpc.CallOption) (*AddCollaboratorRequest_Response, error)
	RemoveDatasetCollaborator(ctx context.Context, in *RemoveCollaborator, opts ...grpc.CallOption) (*RemoveCollaborator_Response, error)
	GetDatasetCollaborators(ctx context.Context, in *GetCollaborator, opts ...grpc.CallOption) (*GetCollaborator_Response, error)
	AddOrUpdateRepositoryCollaborator(ctx context.Context, in *AddCollaboratorRequest, opts ...grpc.CallOption) (*AddCollaboratorRequest_Response, error)
	RemoveRepositoryCollaborator(ctx context.Context, in *RemoveCollaborator, opts ...grpc.CallOption) (*RemoveCollaborator_Response, error)
	GetRepositoryCollaborators(ctx context.Context, in *GetCollaborator, opts ...grpc.CallOption) (*GetCollaborator_Response, error)
	AddOrUpdateEndpointCollaborator(ctx context.Context, in *AddCollaboratorRequest, opts ...grpc.CallOption) (*AddCollaboratorRequest_Response, error)
	RemoveEndpointCollaborator(ctx context.Context, in *RemoveCollaborator, opts ...grpc.CallOption) (*RemoveCollaborator_Response, error)
	GetEndpointCollaborators(ctx context.Context, in *GetCollaborator, opts ...grpc.CallOption) (*GetCollaborator_Response, error)
	AddOrUpdateRegisteredModelCollaborator(ctx context.Context, in *AddCollaboratorRequest, opts ...grpc.CallOption) (*AddCollaboratorRequest_Response, error)
	RemoveRegisteredModelCollaborator(ctx context.Context, in *RemoveCollaborator, opts ...grpc.CallOption) (*RemoveCollaborator_Response, error)
	GetRegisteredModelCollaborators(ctx context.Context, in *GetCollaborator, opts ...grpc.CallOption) (*GetCollaborator_Response, error)
}

type collaboratorServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCollaboratorServiceClient(cc grpc.ClientConnInterface) CollaboratorServiceClient {
	return &collaboratorServiceClient{cc}
}

func (c *collaboratorServiceClient) GetResources(ctx context.Context, in *GetResources, opts ...grpc.CallOption) (*GetResources_Response, error) {
	out := new(GetResources_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/getResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) GetResourcesSpecialPersonalWorkspace(ctx context.Context, in *GetResources, opts ...grpc.CallOption) (*GetResources_Response, error) {
	out := new(GetResources_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/getResourcesSpecialPersonalWorkspace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) SetResource(ctx context.Context, in *SetResource, opts ...grpc.CallOption) (*SetResource_Response, error) {
	out := new(SetResource_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/setResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) DeleteResources(ctx context.Context, in *DeleteResources, opts ...grpc.CallOption) (*DeleteResources_Response, error) {
	out := new(DeleteResources_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/deleteResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) AddOrUpdateProjectCollaborator(ctx context.Context, in *AddCollaboratorRequest, opts ...grpc.CallOption) (*AddCollaboratorRequest_Response, error) {
	out := new(AddCollaboratorRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/addOrUpdateProjectCollaborator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) RemoveProjectCollaborator(ctx context.Context, in *RemoveCollaborator, opts ...grpc.CallOption) (*RemoveCollaborator_Response, error) {
	out := new(RemoveCollaborator_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/removeProjectCollaborator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) GetProjectCollaborators(ctx context.Context, in *GetCollaborator, opts ...grpc.CallOption) (*GetCollaborator_Response, error) {
	out := new(GetCollaborator_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/getProjectCollaborators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) AddOrUpdateDatasetCollaborator(ctx context.Context, in *AddCollaboratorRequest, opts ...grpc.CallOption) (*AddCollaboratorRequest_Response, error) {
	out := new(AddCollaboratorRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/addOrUpdateDatasetCollaborator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) RemoveDatasetCollaborator(ctx context.Context, in *RemoveCollaborator, opts ...grpc.CallOption) (*RemoveCollaborator_Response, error) {
	out := new(RemoveCollaborator_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/removeDatasetCollaborator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) GetDatasetCollaborators(ctx context.Context, in *GetCollaborator, opts ...grpc.CallOption) (*GetCollaborator_Response, error) {
	out := new(GetCollaborator_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/getDatasetCollaborators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) AddOrUpdateRepositoryCollaborator(ctx context.Context, in *AddCollaboratorRequest, opts ...grpc.CallOption) (*AddCollaboratorRequest_Response, error) {
	out := new(AddCollaboratorRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/addOrUpdateRepositoryCollaborator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) RemoveRepositoryCollaborator(ctx context.Context, in *RemoveCollaborator, opts ...grpc.CallOption) (*RemoveCollaborator_Response, error) {
	out := new(RemoveCollaborator_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/removeRepositoryCollaborator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) GetRepositoryCollaborators(ctx context.Context, in *GetCollaborator, opts ...grpc.CallOption) (*GetCollaborator_Response, error) {
	out := new(GetCollaborator_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/getRepositoryCollaborators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) AddOrUpdateEndpointCollaborator(ctx context.Context, in *AddCollaboratorRequest, opts ...grpc.CallOption) (*AddCollaboratorRequest_Response, error) {
	out := new(AddCollaboratorRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/addOrUpdateEndpointCollaborator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) RemoveEndpointCollaborator(ctx context.Context, in *RemoveCollaborator, opts ...grpc.CallOption) (*RemoveCollaborator_Response, error) {
	out := new(RemoveCollaborator_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/removeEndpointCollaborator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) GetEndpointCollaborators(ctx context.Context, in *GetCollaborator, opts ...grpc.CallOption) (*GetCollaborator_Response, error) {
	out := new(GetCollaborator_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/getEndpointCollaborators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) AddOrUpdateRegisteredModelCollaborator(ctx context.Context, in *AddCollaboratorRequest, opts ...grpc.CallOption) (*AddCollaboratorRequest_Response, error) {
	out := new(AddCollaboratorRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/addOrUpdateRegisteredModelCollaborator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) RemoveRegisteredModelCollaborator(ctx context.Context, in *RemoveCollaborator, opts ...grpc.CallOption) (*RemoveCollaborator_Response, error) {
	out := new(RemoveCollaborator_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/removeRegisteredModelCollaborator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collaboratorServiceClient) GetRegisteredModelCollaborators(ctx context.Context, in *GetCollaborator, opts ...grpc.CallOption) (*GetCollaborator_Response, error) {
	out := new(GetCollaborator_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.CollaboratorService/getRegisteredModelCollaborators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CollaboratorServiceServer is the server API for CollaboratorService service.
type CollaboratorServiceServer interface {
	// The caller must have permission to GET the resource accordingly
	GetResources(context.Context, *GetResources) (*GetResources_Response, error)
	// The caller must have permission to GET the resource accordingly
	// gets resources that is available in personal workspace (all except organization workspace resources)
	GetResourcesSpecialPersonalWorkspace(context.Context, *GetResources) (*GetResources_Response, error)
	// The caller must have permission to CREATE or UPDATE the resource accordingly
	SetResource(context.Context, *SetResource) (*SetResource_Response, error)
	// The caller must have permission to DELETE the resource accordingly
	DeleteResources(context.Context, *DeleteResources) (*DeleteResources_Response, error)
	AddOrUpdateProjectCollaborator(context.Context, *AddCollaboratorRequest) (*AddCollaboratorRequest_Response, error)
	RemoveProjectCollaborator(context.Context, *RemoveCollaborator) (*RemoveCollaborator_Response, error)
	GetProjectCollaborators(context.Context, *GetCollaborator) (*GetCollaborator_Response, error)
	AddOrUpdateDatasetCollaborator(context.Context, *AddCollaboratorRequest) (*AddCollaboratorRequest_Response, error)
	RemoveDatasetCollaborator(context.Context, *RemoveCollaborator) (*RemoveCollaborator_Response, error)
	GetDatasetCollaborators(context.Context, *GetCollaborator) (*GetCollaborator_Response, error)
	AddOrUpdateRepositoryCollaborator(context.Context, *AddCollaboratorRequest) (*AddCollaboratorRequest_Response, error)
	RemoveRepositoryCollaborator(context.Context, *RemoveCollaborator) (*RemoveCollaborator_Response, error)
	GetRepositoryCollaborators(context.Context, *GetCollaborator) (*GetCollaborator_Response, error)
	AddOrUpdateEndpointCollaborator(context.Context, *AddCollaboratorRequest) (*AddCollaboratorRequest_Response, error)
	RemoveEndpointCollaborator(context.Context, *RemoveCollaborator) (*RemoveCollaborator_Response, error)
	GetEndpointCollaborators(context.Context, *GetCollaborator) (*GetCollaborator_Response, error)
	AddOrUpdateRegisteredModelCollaborator(context.Context, *AddCollaboratorRequest) (*AddCollaboratorRequest_Response, error)
	RemoveRegisteredModelCollaborator(context.Context, *RemoveCollaborator) (*RemoveCollaborator_Response, error)
	GetRegisteredModelCollaborators(context.Context, *GetCollaborator) (*GetCollaborator_Response, error)
}

// UnimplementedCollaboratorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCollaboratorServiceServer struct {
}

func (*UnimplementedCollaboratorServiceServer) GetResources(context.Context, *GetResources) (*GetResources_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResources not implemented")
}
func (*UnimplementedCollaboratorServiceServer) GetResourcesSpecialPersonalWorkspace(context.Context, *GetResources) (*GetResources_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourcesSpecialPersonalWorkspace not implemented")
}
func (*UnimplementedCollaboratorServiceServer) SetResource(context.Context, *SetResource) (*SetResource_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetResource not implemented")
}
func (*UnimplementedCollaboratorServiceServer) DeleteResources(context.Context, *DeleteResources) (*DeleteResources_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteResources not implemented")
}
func (*UnimplementedCollaboratorServiceServer) AddOrUpdateProjectCollaborator(context.Context, *AddCollaboratorRequest) (*AddCollaboratorRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddOrUpdateProjectCollaborator not implemented")
}
func (*UnimplementedCollaboratorServiceServer) RemoveProjectCollaborator(context.Context, *RemoveCollaborator) (*RemoveCollaborator_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveProjectCollaborator not implemented")
}
func (*UnimplementedCollaboratorServiceServer) GetProjectCollaborators(context.Context, *GetCollaborator) (*GetCollaborator_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectCollaborators not implemented")
}
func (*UnimplementedCollaboratorServiceServer) AddOrUpdateDatasetCollaborator(context.Context, *AddCollaboratorRequest) (*AddCollaboratorRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddOrUpdateDatasetCollaborator not implemented")
}
func (*UnimplementedCollaboratorServiceServer) RemoveDatasetCollaborator(context.Context, *RemoveCollaborator) (*RemoveCollaborator_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveDatasetCollaborator not implemented")
}
func (*UnimplementedCollaboratorServiceServer) GetDatasetCollaborators(context.Context, *GetCollaborator) (*GetCollaborator_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDatasetCollaborators not implemented")
}
func (*UnimplementedCollaboratorServiceServer) AddOrUpdateRepositoryCollaborator(context.Context, *AddCollaboratorRequest) (*AddCollaboratorRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddOrUpdateRepositoryCollaborator not implemented")
}
func (*UnimplementedCollaboratorServiceServer) RemoveRepositoryCollaborator(context.Context, *RemoveCollaborator) (*RemoveCollaborator_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveRepositoryCollaborator not implemented")
}
func (*UnimplementedCollaboratorServiceServer) GetRepositoryCollaborators(context.Context, *GetCollaborator) (*GetCollaborator_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRepositoryCollaborators not implemented")
}
func (*UnimplementedCollaboratorServiceServer) AddOrUpdateEndpointCollaborator(context.Context, *AddCollaboratorRequest) (*AddCollaboratorRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddOrUpdateEndpointCollaborator not implemented")
}
func (*UnimplementedCollaboratorServiceServer) RemoveEndpointCollaborator(context.Context, *RemoveCollaborator) (*RemoveCollaborator_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveEndpointCollaborator not implemented")
}
func (*UnimplementedCollaboratorServiceServer) GetEndpointCollaborators(context.Context, *GetCollaborator) (*GetCollaborator_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEndpointCollaborators not implemented")
}
func (*UnimplementedCollaboratorServiceServer) AddOrUpdateRegisteredModelCollaborator(context.Context, *AddCollaboratorRequest) (*AddCollaboratorRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddOrUpdateRegisteredModelCollaborator not implemented")
}
func (*UnimplementedCollaboratorServiceServer) RemoveRegisteredModelCollaborator(context.Context, *RemoveCollaborator) (*RemoveCollaborator_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveRegisteredModelCollaborator not implemented")
}
func (*UnimplementedCollaboratorServiceServer) GetRegisteredModelCollaborators(context.Context, *GetCollaborator) (*GetCollaborator_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegisteredModelCollaborators not implemented")
}

func RegisterCollaboratorServiceServer(s *grpc.Server, srv CollaboratorServiceServer) {
	s.RegisterService(&_CollaboratorService_serviceDesc, srv)
}

func _CollaboratorService_GetResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResources)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).GetResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/GetResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).GetResources(ctx, req.(*GetResources))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_GetResourcesSpecialPersonalWorkspace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetResources)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).GetResourcesSpecialPersonalWorkspace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/GetResourcesSpecialPersonalWorkspace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).GetResourcesSpecialPersonalWorkspace(ctx, req.(*GetResources))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_SetResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetResource)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).SetResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/SetResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).SetResource(ctx, req.(*SetResource))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_DeleteResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteResources)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).DeleteResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/DeleteResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).DeleteResources(ctx, req.(*DeleteResources))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_AddOrUpdateProjectCollaborator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCollaboratorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).AddOrUpdateProjectCollaborator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/AddOrUpdateProjectCollaborator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).AddOrUpdateProjectCollaborator(ctx, req.(*AddCollaboratorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_RemoveProjectCollaborator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveCollaborator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).RemoveProjectCollaborator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/RemoveProjectCollaborator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).RemoveProjectCollaborator(ctx, req.(*RemoveCollaborator))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_GetProjectCollaborators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollaborator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).GetProjectCollaborators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/GetProjectCollaborators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).GetProjectCollaborators(ctx, req.(*GetCollaborator))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_AddOrUpdateDatasetCollaborator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCollaboratorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).AddOrUpdateDatasetCollaborator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/AddOrUpdateDatasetCollaborator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).AddOrUpdateDatasetCollaborator(ctx, req.(*AddCollaboratorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_RemoveDatasetCollaborator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveCollaborator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).RemoveDatasetCollaborator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/RemoveDatasetCollaborator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).RemoveDatasetCollaborator(ctx, req.(*RemoveCollaborator))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_GetDatasetCollaborators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollaborator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).GetDatasetCollaborators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/GetDatasetCollaborators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).GetDatasetCollaborators(ctx, req.(*GetCollaborator))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_AddOrUpdateRepositoryCollaborator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCollaboratorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).AddOrUpdateRepositoryCollaborator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/AddOrUpdateRepositoryCollaborator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).AddOrUpdateRepositoryCollaborator(ctx, req.(*AddCollaboratorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_RemoveRepositoryCollaborator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveCollaborator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).RemoveRepositoryCollaborator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/RemoveRepositoryCollaborator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).RemoveRepositoryCollaborator(ctx, req.(*RemoveCollaborator))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_GetRepositoryCollaborators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollaborator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).GetRepositoryCollaborators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/GetRepositoryCollaborators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).GetRepositoryCollaborators(ctx, req.(*GetCollaborator))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_AddOrUpdateEndpointCollaborator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCollaboratorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).AddOrUpdateEndpointCollaborator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/AddOrUpdateEndpointCollaborator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).AddOrUpdateEndpointCollaborator(ctx, req.(*AddCollaboratorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_RemoveEndpointCollaborator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveCollaborator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).RemoveEndpointCollaborator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/RemoveEndpointCollaborator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).RemoveEndpointCollaborator(ctx, req.(*RemoveCollaborator))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_GetEndpointCollaborators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollaborator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).GetEndpointCollaborators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/GetEndpointCollaborators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).GetEndpointCollaborators(ctx, req.(*GetCollaborator))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_AddOrUpdateRegisteredModelCollaborator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCollaboratorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).AddOrUpdateRegisteredModelCollaborator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/AddOrUpdateRegisteredModelCollaborator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).AddOrUpdateRegisteredModelCollaborator(ctx, req.(*AddCollaboratorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_RemoveRegisteredModelCollaborator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveCollaborator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).RemoveRegisteredModelCollaborator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/RemoveRegisteredModelCollaborator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).RemoveRegisteredModelCollaborator(ctx, req.(*RemoveCollaborator))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollaboratorService_GetRegisteredModelCollaborators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollaborator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollaboratorServiceServer).GetRegisteredModelCollaborators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.CollaboratorService/GetRegisteredModelCollaborators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollaboratorServiceServer).GetRegisteredModelCollaborators(ctx, req.(*GetCollaborator))
	}
	return interceptor(ctx, in, info, handler)
}

var _CollaboratorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ai.verta.uac.CollaboratorService",
	HandlerType: (*CollaboratorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getResources",
			Handler:    _CollaboratorService_GetResources_Handler,
		},
		{
			MethodName: "getResourcesSpecialPersonalWorkspace",
			Handler:    _CollaboratorService_GetResourcesSpecialPersonalWorkspace_Handler,
		},
		{
			MethodName: "setResource",
			Handler:    _CollaboratorService_SetResource_Handler,
		},
		{
			MethodName: "deleteResources",
			Handler:    _CollaboratorService_DeleteResources_Handler,
		},
		{
			MethodName: "addOrUpdateProjectCollaborator",
			Handler:    _CollaboratorService_AddOrUpdateProjectCollaborator_Handler,
		},
		{
			MethodName: "removeProjectCollaborator",
			Handler:    _CollaboratorService_RemoveProjectCollaborator_Handler,
		},
		{
			MethodName: "getProjectCollaborators",
			Handler:    _CollaboratorService_GetProjectCollaborators_Handler,
		},
		{
			MethodName: "addOrUpdateDatasetCollaborator",
			Handler:    _CollaboratorService_AddOrUpdateDatasetCollaborator_Handler,
		},
		{
			MethodName: "removeDatasetCollaborator",
			Handler:    _CollaboratorService_RemoveDatasetCollaborator_Handler,
		},
		{
			MethodName: "getDatasetCollaborators",
			Handler:    _CollaboratorService_GetDatasetCollaborators_Handler,
		},
		{
			MethodName: "addOrUpdateRepositoryCollaborator",
			Handler:    _CollaboratorService_AddOrUpdateRepositoryCollaborator_Handler,
		},
		{
			MethodName: "removeRepositoryCollaborator",
			Handler:    _CollaboratorService_RemoveRepositoryCollaborator_Handler,
		},
		{
			MethodName: "getRepositoryCollaborators",
			Handler:    _CollaboratorService_GetRepositoryCollaborators_Handler,
		},
		{
			MethodName: "addOrUpdateEndpointCollaborator",
			Handler:    _CollaboratorService_AddOrUpdateEndpointCollaborator_Handler,
		},
		{
			MethodName: "removeEndpointCollaborator",
			Handler:    _CollaboratorService_RemoveEndpointCollaborator_Handler,
		},
		{
			MethodName: "getEndpointCollaborators",
			Handler:    _CollaboratorService_GetEndpointCollaborators_Handler,
		},
		{
			MethodName: "addOrUpdateRegisteredModelCollaborator",
			Handler:    _CollaboratorService_AddOrUpdateRegisteredModelCollaborator_Handler,
		},
		{
			MethodName: "removeRegisteredModelCollaborator",
			Handler:    _CollaboratorService_RemoveRegisteredModelCollaborator_Handler,
		},
		{
			MethodName: "getRegisteredModelCollaborators",
			Handler:    _CollaboratorService_GetRegisteredModelCollaborators_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "uac/Collaborator.proto",
}
