// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.11.2
// source: uac/UserV2.proto

package uac

import (
	common "github.com/VertaAI/modeldb/protos/gen/go/protos/public/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserSearchOptions int32

const (
	UserSearchOptions_SEARCH_OPTION_UNKNOWN UserSearchOptions = 0
	UserSearchOptions_ONLY_SERVICE_ACCOUNTS UserSearchOptions = 1
	UserSearchOptions_ONLY_ADMINS           UserSearchOptions = 2
)

// Enum value maps for UserSearchOptions.
var (
	UserSearchOptions_name = map[int32]string{
		0: "SEARCH_OPTION_UNKNOWN",
		1: "ONLY_SERVICE_ACCOUNTS",
		2: "ONLY_ADMINS",
	}
	UserSearchOptions_value = map[string]int32{
		"SEARCH_OPTION_UNKNOWN": 0,
		"ONLY_SERVICE_ACCOUNTS": 1,
		"ONLY_ADMINS":           2,
	}
)

func (x UserSearchOptions) Enum() *UserSearchOptions {
	p := new(UserSearchOptions)
	*p = x
	return p
}

func (x UserSearchOptions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSearchOptions) Descriptor() protoreflect.EnumDescriptor {
	return file_uac_UserV2_proto_enumTypes[0].Descriptor()
}

func (UserSearchOptions) Type() protoreflect.EnumType {
	return &file_uac_UserV2_proto_enumTypes[0]
}

func (x UserSearchOptions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserSearchOptions.Descriptor instead.
func (UserSearchOptions) EnumDescriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{0}
}

type UserDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                string                       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email                 string                       `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	LastSignedIn          int64                        `protobuf:"varint,3,opt,name=last_signed_in,json=lastSignedIn,proto3" json:"last_signed_in,omitempty"`
	Joined                int64                        `protobuf:"varint,8,opt,name=joined,proto3" json:"joined,omitempty"`
	Updated               int64                        `protobuf:"varint,9,opt,name=updated,proto3" json:"updated,omitempty"`
	IsServiceAccount      bool                         `protobuf:"varint,4,opt,name=is_service_account,json=isServiceAccount,proto3" json:"is_service_account,omitempty"`
	ServiceAccountDetails *ServiceAccountV2            `protobuf:"bytes,7,opt,name=service_account_details,json=serviceAccountDetails,proto3" json:"service_account_details,omitempty"`
	FullName              string                       `protobuf:"bytes,10,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	FirstName             string                       `protobuf:"bytes,11,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName              string                       `protobuf:"bytes,12,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	JobTitle              string                       `protobuf:"bytes,13,opt,name=job_title,json=jobTitle,proto3" json:"job_title,omitempty"`
	Company               string                       `protobuf:"bytes,14,opt,name=company,proto3" json:"company,omitempty"`
	OrgId                 string                       `protobuf:"bytes,15,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Groups                []*UserDetails_UserGroup     `protobuf:"bytes,5,rep,name=groups,proto3" json:"groups,omitempty"`
	Workspaces            []*UserDetails_UserWorkspace `protobuf:"bytes,6,rep,name=workspaces,proto3" json:"workspaces,omitempty"`
}

func (x *UserDetails) Reset() {
	*x = UserDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetails) ProtoMessage() {}

func (x *UserDetails) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetails.ProtoReflect.Descriptor instead.
func (*UserDetails) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{0}
}

func (x *UserDetails) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserDetails) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserDetails) GetLastSignedIn() int64 {
	if x != nil {
		return x.LastSignedIn
	}
	return 0
}

func (x *UserDetails) GetJoined() int64 {
	if x != nil {
		return x.Joined
	}
	return 0
}

func (x *UserDetails) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *UserDetails) GetIsServiceAccount() bool {
	if x != nil {
		return x.IsServiceAccount
	}
	return false
}

func (x *UserDetails) GetServiceAccountDetails() *ServiceAccountV2 {
	if x != nil {
		return x.ServiceAccountDetails
	}
	return nil
}

func (x *UserDetails) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *UserDetails) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserDetails) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UserDetails) GetJobTitle() string {
	if x != nil {
		return x.JobTitle
	}
	return ""
}

func (x *UserDetails) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *UserDetails) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *UserDetails) GetGroups() []*UserDetails_UserGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *UserDetails) GetWorkspaces() []*UserDetails_UserWorkspace {
	if x != nil {
		return x.Workspaces
	}
	return nil
}

type SearchUsersInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query options:
	// name -- fullname
	// name_fuzzy -- fuzzy search fullname
	// email
	// email_fuzzy
	// ids
	// Format: get query parameters
	// Example: search_string = "email=email@email.com|name_fuzzy=asdf|ids=1001|ids=1002"
	SearchString  string              `protobuf:"bytes,1,opt,name=search_string,json=searchString,proto3" json:"search_string,omitempty"`
	SearchOptions []UserSearchOptions `protobuf:"varint,2,rep,packed,name=search_options,json=searchOptions,proto3,enum=ai.verta.uac.UserSearchOptions" json:"search_options,omitempty"`
	GroupIds      []string            `protobuf:"bytes,3,rep,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	WorkspaceIds  []string            `protobuf:"bytes,4,rep,name=workspace_ids,json=workspaceIds,proto3" json:"workspace_ids,omitempty"`
}

func (x *SearchUsersInput) Reset() {
	*x = SearchUsersInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUsersInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUsersInput) ProtoMessage() {}

func (x *SearchUsersInput) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUsersInput.ProtoReflect.Descriptor instead.
func (*SearchUsersInput) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{1}
}

func (x *SearchUsersInput) GetSearchString() string {
	if x != nil {
		return x.SearchString
	}
	return ""
}

func (x *SearchUsersInput) GetSearchOptions() []UserSearchOptions {
	if x != nil {
		return x.SearchOptions
	}
	return nil
}

func (x *SearchUsersInput) GetGroupIds() []string {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *SearchUsersInput) GetWorkspaceIds() []string {
	if x != nil {
		return x.WorkspaceIds
	}
	return nil
}

type SearchUsers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId       string             `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	SearchInput *SearchUsersInput  `protobuf:"bytes,2,opt,name=search_input,json=searchInput,proto3" json:"search_input,omitempty"`
	Pagination  *common.Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchUsers) Reset() {
	*x = SearchUsers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUsers) ProtoMessage() {}

func (x *SearchUsers) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUsers.ProtoReflect.Descriptor instead.
func (*SearchUsers) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{2}
}

func (x *SearchUsers) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *SearchUsers) GetSearchInput() *SearchUsersInput {
	if x != nil {
		return x.SearchInput
	}
	return nil
}

func (x *SearchUsers) GetPagination() *common.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type AddUserV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// Types that are assignable to UserIdentifier:
	//
	//	*AddUserV2_Email
	//	*AddUserV2_UserId
	UserIdentifier isAddUserV2_UserIdentifier `protobuf_oneof:"user_identifier"`
	Password       string                     `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *AddUserV2) Reset() {
	*x = AddUserV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserV2) ProtoMessage() {}

func (x *AddUserV2) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserV2.ProtoReflect.Descriptor instead.
func (*AddUserV2) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{3}
}

func (x *AddUserV2) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (m *AddUserV2) GetUserIdentifier() isAddUserV2_UserIdentifier {
	if m != nil {
		return m.UserIdentifier
	}
	return nil
}

func (x *AddUserV2) GetEmail() string {
	if x, ok := x.GetUserIdentifier().(*AddUserV2_Email); ok {
		return x.Email
	}
	return ""
}

func (x *AddUserV2) GetUserId() string {
	if x, ok := x.GetUserIdentifier().(*AddUserV2_UserId); ok {
		return x.UserId
	}
	return ""
}

func (x *AddUserV2) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type isAddUserV2_UserIdentifier interface {
	isAddUserV2_UserIdentifier()
}

type AddUserV2_Email struct {
	Email string `protobuf:"bytes,2,opt,name=email,proto3,oneof"`
}

type AddUserV2_UserId struct {
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3,oneof"`
}

func (*AddUserV2_Email) isAddUserV2_UserIdentifier() {}

func (*AddUserV2_UserId) isAddUserV2_UserIdentifier() {}

type RemoveUserV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId  string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RemoveUserV2) Reset() {
	*x = RemoveUserV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserV2) ProtoMessage() {}

func (x *RemoveUserV2) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserV2.ProtoReflect.Descriptor instead.
func (*RemoveUserV2) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveUserV2) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *RemoveUserV2) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ServiceAccountV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId        string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Id           string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Email        string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Description  string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	PrimaryKey   string `protobuf:"bytes,5,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`
	SecondaryKey string `protobuf:"bytes,6,opt,name=secondary_key,json=secondaryKey,proto3" json:"secondary_key,omitempty"`
}

func (x *ServiceAccountV2) Reset() {
	*x = ServiceAccountV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceAccountV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAccountV2) ProtoMessage() {}

func (x *ServiceAccountV2) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAccountV2.ProtoReflect.Descriptor instead.
func (*ServiceAccountV2) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{5}
}

func (x *ServiceAccountV2) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *ServiceAccountV2) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceAccountV2) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ServiceAccountV2) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServiceAccountV2) GetPrimaryKey() string {
	if x != nil {
		return x.PrimaryKey
	}
	return ""
}

func (x *ServiceAccountV2) GetSecondaryKey() string {
	if x != nil {
		return x.SecondaryKey
	}
	return ""
}

type AddServiceAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceAccount *ServiceAccountV2 `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
}

func (x *AddServiceAccount) Reset() {
	*x = AddServiceAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServiceAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServiceAccount) ProtoMessage() {}

func (x *AddServiceAccount) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServiceAccount.ProtoReflect.Descriptor instead.
func (*AddServiceAccount) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{6}
}

func (x *AddServiceAccount) GetServiceAccount() *ServiceAccountV2 {
	if x != nil {
		return x.ServiceAccount
	}
	return nil
}

type RemoveServiceAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId            string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	ServiceAccountId string `protobuf:"bytes,2,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
}

func (x *RemoveServiceAccount) Reset() {
	*x = RemoveServiceAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveServiceAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveServiceAccount) ProtoMessage() {}

func (x *RemoveServiceAccount) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveServiceAccount.ProtoReflect.Descriptor instead.
func (*RemoveServiceAccount) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveServiceAccount) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *RemoveServiceAccount) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

type GetUserV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// Types that are assignable to UserIdentifier:
	//
	//	*GetUserV2_Email
	//	*GetUserV2_UserId
	UserIdentifier isGetUserV2_UserIdentifier `protobuf_oneof:"user_identifier"`
}

func (x *GetUserV2) Reset() {
	*x = GetUserV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserV2) ProtoMessage() {}

func (x *GetUserV2) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserV2.ProtoReflect.Descriptor instead.
func (*GetUserV2) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserV2) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (m *GetUserV2) GetUserIdentifier() isGetUserV2_UserIdentifier {
	if m != nil {
		return m.UserIdentifier
	}
	return nil
}

func (x *GetUserV2) GetEmail() string {
	if x, ok := x.GetUserIdentifier().(*GetUserV2_Email); ok {
		return x.Email
	}
	return ""
}

func (x *GetUserV2) GetUserId() string {
	if x, ok := x.GetUserIdentifier().(*GetUserV2_UserId); ok {
		return x.UserId
	}
	return ""
}

type isGetUserV2_UserIdentifier interface {
	isGetUserV2_UserIdentifier()
}

type GetUserV2_Email struct {
	Email string `protobuf:"bytes,2,opt,name=email,proto3,oneof"`
}

type GetUserV2_UserId struct {
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3,oneof"`
}

func (*GetUserV2_Email) isGetUserV2_UserIdentifier() {}

func (*GetUserV2_UserId) isGetUserV2_UserIdentifier() {}

type UserExists struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UserExists) Reset() {
	*x = UserExists{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserExists) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserExists) ProtoMessage() {}

func (x *UserExists) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserExists.ProtoReflect.Descriptor instead.
func (*UserExists) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{9}
}

func (x *UserExists) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ChangeCurrentUserPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPassword string `protobuf:"bytes,1,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword string `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
}

func (x *ChangeCurrentUserPassword) Reset() {
	*x = ChangeCurrentUserPassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeCurrentUserPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeCurrentUserPassword) ProtoMessage() {}

func (x *ChangeCurrentUserPassword) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeCurrentUserPassword.ProtoReflect.Descriptor instead.
func (*ChangeCurrentUserPassword) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{10}
}

func (x *ChangeCurrentUserPassword) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *ChangeCurrentUserPassword) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type UserDetails_UserGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupName string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
}

func (x *UserDetails_UserGroup) Reset() {
	*x = UserDetails_UserGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetails_UserGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetails_UserGroup) ProtoMessage() {}

func (x *UserDetails_UserGroup) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetails_UserGroup.ProtoReflect.Descriptor instead.
func (*UserDetails_UserGroup) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{0, 0}
}

func (x *UserDetails_UserGroup) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *UserDetails_UserGroup) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type UserDetails_UserWorkspace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceId   string `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	WorkspaceName string `protobuf:"bytes,2,opt,name=workspace_name,json=workspaceName,proto3" json:"workspace_name,omitempty"`
}

func (x *UserDetails_UserWorkspace) Reset() {
	*x = UserDetails_UserWorkspace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetails_UserWorkspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetails_UserWorkspace) ProtoMessage() {}

func (x *UserDetails_UserWorkspace) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetails_UserWorkspace.ProtoReflect.Descriptor instead.
func (*UserDetails_UserWorkspace) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{0, 1}
}

func (x *UserDetails_UserWorkspace) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *UserDetails_UserWorkspace) GetWorkspaceName() string {
	if x != nil {
		return x.WorkspaceName
	}
	return ""
}

type SearchUsers_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDetails  []*UserDetails     `protobuf:"bytes,1,rep,name=user_details,json=userDetails,proto3" json:"user_details,omitempty"`
	TotalRecords int64              `protobuf:"varint,2,opt,name=total_records,json=totalRecords,proto3" json:"total_records,omitempty"`
	Pagination   *common.Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchUsers_Response) Reset() {
	*x = SearchUsers_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUsers_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUsers_Response) ProtoMessage() {}

func (x *SearchUsers_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUsers_Response.ProtoReflect.Descriptor instead.
func (*SearchUsers_Response) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SearchUsers_Response) GetUserDetails() []*UserDetails {
	if x != nil {
		return x.UserDetails
	}
	return nil
}

func (x *SearchUsers_Response) GetTotalRecords() int64 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

func (x *SearchUsers_Response) GetPagination() *common.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type AddUserV2_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddUserV2_Response) Reset() {
	*x = AddUserV2_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserV2_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserV2_Response) ProtoMessage() {}

func (x *AddUserV2_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserV2_Response.ProtoReflect.Descriptor instead.
func (*AddUserV2_Response) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{3, 0}
}

type RemoveUserV2_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveUserV2_Response) Reset() {
	*x = RemoveUserV2_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserV2_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserV2_Response) ProtoMessage() {}

func (x *RemoveUserV2_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserV2_Response.ProtoReflect.Descriptor instead.
func (*RemoveUserV2_Response) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{4, 0}
}

type AddServiceAccount_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceAccount *ServiceAccountV2 `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
}

func (x *AddServiceAccount_Response) Reset() {
	*x = AddServiceAccount_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddServiceAccount_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServiceAccount_Response) ProtoMessage() {}

func (x *AddServiceAccount_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServiceAccount_Response.ProtoReflect.Descriptor instead.
func (*AddServiceAccount_Response) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{6, 0}
}

func (x *AddServiceAccount_Response) GetServiceAccount() *ServiceAccountV2 {
	if x != nil {
		return x.ServiceAccount
	}
	return nil
}

type RemoveServiceAccount_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveServiceAccount_Response) Reset() {
	*x = RemoveServiceAccount_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveServiceAccount_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveServiceAccount_Response) ProtoMessage() {}

func (x *RemoveServiceAccount_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveServiceAccount_Response.ProtoReflect.Descriptor instead.
func (*RemoveServiceAccount_Response) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{7, 0}
}

type GetUserV2_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDetails *UserDetails `protobuf:"bytes,1,opt,name=user_details,json=userDetails,proto3" json:"user_details,omitempty"`
}

func (x *GetUserV2_Response) Reset() {
	*x = GetUserV2_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserV2_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserV2_Response) ProtoMessage() {}

func (x *GetUserV2_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserV2_Response.ProtoReflect.Descriptor instead.
func (*GetUserV2_Response) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{8, 0}
}

func (x *GetUserV2_Response) GetUserDetails() *UserDetails {
	if x != nil {
		return x.UserDetails
	}
	return nil
}

type UserExists_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *UserExists_Response) Reset() {
	*x = UserExists_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_UserV2_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserExists_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserExists_Response) ProtoMessage() {}

func (x *UserExists_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_UserV2_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserExists_Response.ProtoReflect.Descriptor instead.
func (*UserExists_Response) Descriptor() ([]byte, []int) {
	return file_uac_UserV2_proto_rawDescGZIP(), []int{9, 0}
}

func (x *UserExists_Response) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

var File_uac_UserV2_proto protoreflect.FileDescriptor

var file_uac_UserV2_proto_rawDesc = []byte{
	0x0a, 0x10, 0x75, 0x61, 0x63, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x56, 0x32, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x75, 0x61, 0x63, 0x2f,
	0x55, 0x41, 0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xe9, 0x05, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x49, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x17, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x15, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x15, 0x0a,
	0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x75, 0x61, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x47, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x75, 0x61, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x0a,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x1a, 0x45, 0x0a, 0x09, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x1a, 0x59, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xc1, 0x01, 0x0a,
	0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x73,
	0x22, 0xd1, 0x02, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x0b, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xaa, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x56, 0x32, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x19, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x56, 0x32, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x22, 0xb1, 0x01,
	0x0a, 0x11, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x0e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x53, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56,
	0x32, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x67, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x0a,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x56, 0x32, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x1a, 0x48, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x75, 0x61, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x11, 0x0a, 0x0f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22,
	0x46, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x1a, 0x22, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x61, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e,
	0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2a, 0x5a, 0x0a, 0x11, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x19, 0x0a, 0x15, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x4e,
	0x4c, 0x59, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x53, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x41, 0x44,
	0x4d, 0x49, 0x4e, 0x53, 0x10, 0x02, 0x32, 0xf2, 0x08, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x32, 0x12, 0x75, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x1a, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61,
	0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f,
	0x2f, 0x76, 0x32, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x70, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x56, 0x32, 0x1a, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75,
	0x61, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x56, 0x32, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a,
	0x22, 0x1f, 0x2f, 0x76, 0x32, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x7b, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x80, 0x01, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x1a, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x56, 0x32, 0x1a, 0x23, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x56, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x2a, 0x29, 0x2f, 0x76, 0x32, 0x2f, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x6f, 0x72, 0x67,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0xa4, 0x01, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3e, 0x3a, 0x01, 0x2a,
	0x22, 0x39, 0x2f, 0x76, 0x32, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x7b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0xaf, 0x01, 0x0a, 0x14,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x2a, 0x3e, 0x2f,
	0x76, 0x32, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x7b, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x6c, 0x0a,
	0x07, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x56,
	0x32, 0x1a, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x56, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x76, 0x32,
	0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x6f,
	0x72, 0x67, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0e, 0x67,
	0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x13, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61,
	0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x00, 0x12,
	0x64, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x18, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x1a, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x76, 0x32, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x83, 0x01, 0x0a, 0x19, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x27, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75,
	0x61, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x13, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x76,
	0x32, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x3e, 0x50, 0x01, 0x5a,
	0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x56, 0x65, 0x72, 0x74,
	0x61, 0x41, 0x49, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x75, 0x61, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_uac_UserV2_proto_rawDescOnce sync.Once
	file_uac_UserV2_proto_rawDescData = file_uac_UserV2_proto_rawDesc
)

func file_uac_UserV2_proto_rawDescGZIP() []byte {
	file_uac_UserV2_proto_rawDescOnce.Do(func() {
		file_uac_UserV2_proto_rawDescData = protoimpl.X.CompressGZIP(file_uac_UserV2_proto_rawDescData)
	})
	return file_uac_UserV2_proto_rawDescData
}

var file_uac_UserV2_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_uac_UserV2_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_uac_UserV2_proto_goTypes = []interface{}{
	(UserSearchOptions)(0),                // 0: ai.verta.uac.UserSearchOptions
	(*UserDetails)(nil),                   // 1: ai.verta.uac.UserDetails
	(*SearchUsersInput)(nil),              // 2: ai.verta.uac.SearchUsersInput
	(*SearchUsers)(nil),                   // 3: ai.verta.uac.SearchUsers
	(*AddUserV2)(nil),                     // 4: ai.verta.uac.AddUserV2
	(*RemoveUserV2)(nil),                  // 5: ai.verta.uac.RemoveUserV2
	(*ServiceAccountV2)(nil),              // 6: ai.verta.uac.ServiceAccountV2
	(*AddServiceAccount)(nil),             // 7: ai.verta.uac.AddServiceAccount
	(*RemoveServiceAccount)(nil),          // 8: ai.verta.uac.RemoveServiceAccount
	(*GetUserV2)(nil),                     // 9: ai.verta.uac.GetUserV2
	(*UserExists)(nil),                    // 10: ai.verta.uac.UserExists
	(*ChangeCurrentUserPassword)(nil),     // 11: ai.verta.uac.ChangeCurrentUserPassword
	(*UserDetails_UserGroup)(nil),         // 12: ai.verta.uac.UserDetails.UserGroup
	(*UserDetails_UserWorkspace)(nil),     // 13: ai.verta.uac.UserDetails.UserWorkspace
	(*SearchUsers_Response)(nil),          // 14: ai.verta.uac.SearchUsers.Response
	(*AddUserV2_Response)(nil),            // 15: ai.verta.uac.AddUserV2.Response
	(*RemoveUserV2_Response)(nil),         // 16: ai.verta.uac.RemoveUserV2.Response
	(*AddServiceAccount_Response)(nil),    // 17: ai.verta.uac.AddServiceAccount.Response
	(*RemoveServiceAccount_Response)(nil), // 18: ai.verta.uac.RemoveServiceAccount.Response
	(*GetUserV2_Response)(nil),            // 19: ai.verta.uac.GetUserV2.Response
	(*UserExists_Response)(nil),           // 20: ai.verta.uac.UserExists.Response
	(*common.Pagination)(nil),             // 21: ai.verta.common.Pagination
	(*Empty)(nil),                         // 22: ai.verta.uac.Empty
}
var file_uac_UserV2_proto_depIdxs = []int32{
	6,  // 0: ai.verta.uac.UserDetails.service_account_details:type_name -> ai.verta.uac.ServiceAccountV2
	12, // 1: ai.verta.uac.UserDetails.groups:type_name -> ai.verta.uac.UserDetails.UserGroup
	13, // 2: ai.verta.uac.UserDetails.workspaces:type_name -> ai.verta.uac.UserDetails.UserWorkspace
	0,  // 3: ai.verta.uac.SearchUsersInput.search_options:type_name -> ai.verta.uac.UserSearchOptions
	2,  // 4: ai.verta.uac.SearchUsers.search_input:type_name -> ai.verta.uac.SearchUsersInput
	21, // 5: ai.verta.uac.SearchUsers.pagination:type_name -> ai.verta.common.Pagination
	6,  // 6: ai.verta.uac.AddServiceAccount.service_account:type_name -> ai.verta.uac.ServiceAccountV2
	1,  // 7: ai.verta.uac.SearchUsers.Response.user_details:type_name -> ai.verta.uac.UserDetails
	21, // 8: ai.verta.uac.SearchUsers.Response.pagination:type_name -> ai.verta.common.Pagination
	6,  // 9: ai.verta.uac.AddServiceAccount.Response.service_account:type_name -> ai.verta.uac.ServiceAccountV2
	1,  // 10: ai.verta.uac.GetUserV2.Response.user_details:type_name -> ai.verta.uac.UserDetails
	3,  // 11: ai.verta.uac.UserServiceV2.searchUsers:input_type -> ai.verta.uac.SearchUsers
	4,  // 12: ai.verta.uac.UserServiceV2.addUser:input_type -> ai.verta.uac.AddUserV2
	5,  // 13: ai.verta.uac.UserServiceV2.removeUser:input_type -> ai.verta.uac.RemoveUserV2
	7,  // 14: ai.verta.uac.UserServiceV2.addServiceAccount:input_type -> ai.verta.uac.AddServiceAccount
	8,  // 15: ai.verta.uac.UserServiceV2.removeServiceAccount:input_type -> ai.verta.uac.RemoveServiceAccount
	9,  // 16: ai.verta.uac.UserServiceV2.getUser:input_type -> ai.verta.uac.GetUserV2
	22, // 17: ai.verta.uac.UserServiceV2.getCurrentUser:input_type -> ai.verta.uac.Empty
	10, // 18: ai.verta.uac.UserServiceV2.userExists:input_type -> ai.verta.uac.UserExists
	11, // 19: ai.verta.uac.UserServiceV2.changeCurrentUserPassword:input_type -> ai.verta.uac.ChangeCurrentUserPassword
	14, // 20: ai.verta.uac.UserServiceV2.searchUsers:output_type -> ai.verta.uac.SearchUsers.Response
	15, // 21: ai.verta.uac.UserServiceV2.addUser:output_type -> ai.verta.uac.AddUserV2.Response
	16, // 22: ai.verta.uac.UserServiceV2.removeUser:output_type -> ai.verta.uac.RemoveUserV2.Response
	17, // 23: ai.verta.uac.UserServiceV2.addServiceAccount:output_type -> ai.verta.uac.AddServiceAccount.Response
	18, // 24: ai.verta.uac.UserServiceV2.removeServiceAccount:output_type -> ai.verta.uac.RemoveServiceAccount.Response
	19, // 25: ai.verta.uac.UserServiceV2.getUser:output_type -> ai.verta.uac.GetUserV2.Response
	1,  // 26: ai.verta.uac.UserServiceV2.getCurrentUser:output_type -> ai.verta.uac.UserDetails
	20, // 27: ai.verta.uac.UserServiceV2.userExists:output_type -> ai.verta.uac.UserExists.Response
	22, // 28: ai.verta.uac.UserServiceV2.changeCurrentUserPassword:output_type -> ai.verta.uac.Empty
	20, // [20:29] is the sub-list for method output_type
	11, // [11:20] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_uac_UserV2_proto_init() }
func file_uac_UserV2_proto_init() {
	if File_uac_UserV2_proto != nil {
		return
	}
	file_uac_UACService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_uac_UserV2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUsersInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUsers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceAccountV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServiceAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveServiceAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserExists); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeCurrentUserPassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetails_UserGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetails_UserWorkspace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUsers_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserV2_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserV2_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddServiceAccount_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveServiceAccount_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserV2_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_UserV2_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserExists_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_uac_UserV2_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*AddUserV2_Email)(nil),
		(*AddUserV2_UserId)(nil),
	}
	file_uac_UserV2_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*GetUserV2_Email)(nil),
		(*GetUserV2_UserId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uac_UserV2_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uac_UserV2_proto_goTypes,
		DependencyIndexes: file_uac_UserV2_proto_depIdxs,
		EnumInfos:         file_uac_UserV2_proto_enumTypes,
		MessageInfos:      file_uac_UserV2_proto_msgTypes,
	}.Build()
	File_uac_UserV2_proto = out.File
	file_uac_UserV2_proto_rawDesc = nil
	file_uac_UserV2_proto_goTypes = nil
	file_uac_UserV2_proto_depIdxs = nil
}
