// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.2
// source: uac/RoleService.proto

package uac

import (
	context "context"
	common "github.com/VertaAI/modeldb/protos/gen/go/protos/public/common"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ServiceEnum_Service int32

const (
	ServiceEnum_UNKNOWN         ServiceEnum_Service = 0 // Service 0 should always cause an error
	ServiceEnum_ALL             ServiceEnum_Service = 1
	ServiceEnum_MODELDB_SERVICE ServiceEnum_Service = 4
)

// Enum value maps for ServiceEnum_Service.
var (
	ServiceEnum_Service_name = map[int32]string{
		0: "UNKNOWN",
		1: "ALL",
		4: "MODELDB_SERVICE",
	}
	ServiceEnum_Service_value = map[string]int32{
		"UNKNOWN":         0,
		"ALL":             1,
		"MODELDB_SERVICE": 4,
	}
)

func (x ServiceEnum_Service) Enum() *ServiceEnum_Service {
	p := new(ServiceEnum_Service)
	*p = x
	return p
}

func (x ServiceEnum_Service) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceEnum_Service) Descriptor() protoreflect.EnumDescriptor {
	return file_uac_RoleService_proto_enumTypes[0].Descriptor()
}

func (ServiceEnum_Service) Type() protoreflect.EnumType {
	return &file_uac_RoleService_proto_enumTypes[0]
}

func (x ServiceEnum_Service) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceEnum_Service.Descriptor instead.
func (ServiceEnum_Service) EnumDescriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{0, 0}
}

type ModelDBActionEnum_ModelDBServiceActions int32

const (
	ModelDBActionEnum_UNKNOWN     ModelDBActionEnum_ModelDBServiceActions = 0 // Action 0 should always cause an error
	ModelDBActionEnum_ALL         ModelDBActionEnum_ModelDBServiceActions = 1
	ModelDBActionEnum_CREATE      ModelDBActionEnum_ModelDBServiceActions = 2
	ModelDBActionEnum_READ        ModelDBActionEnum_ModelDBServiceActions = 3
	ModelDBActionEnum_UPDATE      ModelDBActionEnum_ModelDBServiceActions = 4
	ModelDBActionEnum_DELETE      ModelDBActionEnum_ModelDBServiceActions = 5
	ModelDBActionEnum_DEPLOY      ModelDBActionEnum_ModelDBServiceActions = 6
	ModelDBActionEnum_PUBLIC_READ ModelDBActionEnum_ModelDBServiceActions = 7
)

// Enum value maps for ModelDBActionEnum_ModelDBServiceActions.
var (
	ModelDBActionEnum_ModelDBServiceActions_name = map[int32]string{
		0: "UNKNOWN",
		1: "ALL",
		2: "CREATE",
		3: "READ",
		4: "UPDATE",
		5: "DELETE",
		6: "DEPLOY",
		7: "PUBLIC_READ",
	}
	ModelDBActionEnum_ModelDBServiceActions_value = map[string]int32{
		"UNKNOWN":     0,
		"ALL":         1,
		"CREATE":      2,
		"READ":        3,
		"UPDATE":      4,
		"DELETE":      5,
		"DEPLOY":      6,
		"PUBLIC_READ": 7,
	}
)

func (x ModelDBActionEnum_ModelDBServiceActions) Enum() *ModelDBActionEnum_ModelDBServiceActions {
	p := new(ModelDBActionEnum_ModelDBServiceActions)
	*p = x
	return p
}

func (x ModelDBActionEnum_ModelDBServiceActions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelDBActionEnum_ModelDBServiceActions) Descriptor() protoreflect.EnumDescriptor {
	return file_uac_RoleService_proto_enumTypes[1].Descriptor()
}

func (ModelDBActionEnum_ModelDBServiceActions) Type() protoreflect.EnumType {
	return &file_uac_RoleService_proto_enumTypes[1]
}

func (x ModelDBActionEnum_ModelDBServiceActions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelDBActionEnum_ModelDBServiceActions.Descriptor instead.
func (ModelDBActionEnum_ModelDBServiceActions) EnumDescriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{1, 0}
}

// List of possible services and actions
// Let's only use enum if we can update this list without changing UAC code
// I prefer enums instead of strings so that 1) we avoid bugs due to typos, 2) we have a comprehensive list somewhere
type ServiceEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServiceEnum) Reset() {
	*x = ServiceEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceEnum) ProtoMessage() {}

func (x *ServiceEnum) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceEnum.ProtoReflect.Descriptor instead.
func (*ServiceEnum) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{0}
}

type ModelDBActionEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModelDBActionEnum) Reset() {
	*x = ModelDBActionEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelDBActionEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelDBActionEnum) ProtoMessage() {}

func (x *ModelDBActionEnum) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelDBActionEnum.ProtoReflect.Descriptor instead.
func (*ModelDBActionEnum) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{1}
}

// An action describes a specific operation that can be performed on a service
type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service ServiceEnum_Service `protobuf:"varint,1,opt,name=service,proto3,enum=ai.verta.uac.ServiceEnum_Service" json:"service,omitempty"`
	// Types that are assignable to Action:
	//	*Action_ModeldbServiceAction
	Action isAction_Action `protobuf_oneof:"action"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{2}
}

func (x *Action) GetService() ServiceEnum_Service {
	if x != nil {
		return x.Service
	}
	return ServiceEnum_UNKNOWN
}

func (m *Action) GetAction() isAction_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *Action) GetModeldbServiceAction() ModelDBActionEnum_ModelDBServiceActions {
	if x, ok := x.GetAction().(*Action_ModeldbServiceAction); ok {
		return x.ModeldbServiceAction
	}
	return ModelDBActionEnum_UNKNOWN
}

type isAction_Action interface {
	isAction_Action()
}

type Action_ModeldbServiceAction struct {
	ModeldbServiceAction ModelDBActionEnum_ModelDBServiceActions `protobuf:"varint,4,opt,name=modeldb_service_action,json=modeldbServiceAction,proto3,enum=ai.verta.uac.ModelDBActionEnum_ModelDBServiceActions,oneof"`
}

func (*Action_ModeldbServiceAction) isAction_Action() {}

type ResourceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Resource:
	//	*ResourceType_ModeldbServiceResourceType
	Resource isResourceType_Resource `protobuf_oneof:"resource"`
}

func (x *ResourceType) Reset() {
	*x = ResourceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceType) ProtoMessage() {}

func (x *ResourceType) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceType.ProtoReflect.Descriptor instead.
func (*ResourceType) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{3}
}

func (m *ResourceType) GetResource() isResourceType_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (x *ResourceType) GetModeldbServiceResourceType() common.ModelDBResourceEnum_ModelDBServiceResourceTypes {
	if x, ok := x.GetResource().(*ResourceType_ModeldbServiceResourceType); ok {
		return x.ModeldbServiceResourceType
	}
	return common.ModelDBResourceEnum_UNKNOWN
}

type isResourceType_Resource interface {
	isResourceType_Resource()
}

type ResourceType_ModeldbServiceResourceType struct {
	ModeldbServiceResourceType common.ModelDBResourceEnum_ModelDBServiceResourceTypes `protobuf:"varint,3,opt,name=modeldb_service_resource_type,json=modeldbServiceResourceType,proto3,enum=ai.verta.common.ModelDBResourceEnum_ModelDBServiceResourceTypes,oneof"`
}

func (*ResourceType_ModeldbServiceResourceType) isResourceType_Resource() {}

// A resource describes a specific object in a service that can receive an action
type Resources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service ServiceEnum_Service `protobuf:"varint,1,opt,name=service,proto3,enum=ai.verta.uac.ServiceEnum_Service" json:"service,omitempty"`
	// Internal ID for the resource in the service, whose meaning doesn't matter for other services
	// This is optional. If empty, means all resources
	ResourceIds  []string      `protobuf:"bytes,2,rep,name=resource_ids,json=resourceIds,proto3" json:"resource_ids,omitempty"`
	ResourceType *ResourceType `protobuf:"bytes,6,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
}

func (x *Resources) Reset() {
	*x = Resources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{4}
}

func (x *Resources) GetService() ServiceEnum_Service {
	if x != nil {
		return x.Service
	}
	return ServiceEnum_UNKNOWN
}

func (x *Resources) GetResourceIds() []string {
	if x != nil {
		return x.ResourceIds
	}
	return nil
}

func (x *Resources) GetResourceType() *ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return nil
}

// Roles can be scoped by organization/team or global
// The uniqueness of the name is only ensured at the right scope
// Both Roles and RoleBindings have a scope. The most restrictive one will be used when checking for permissions
type RoleScope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId  string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
}

func (x *RoleScope) Reset() {
	*x = RoleScope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleScope) ProtoMessage() {}

func (x *RoleScope) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleScope.ProtoReflect.Descriptor instead.
func (*RoleScope) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{5}
}

func (x *RoleScope) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *RoleScope) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

// Allows grouping multiple resources and actions for more descriptive permissions
type ResourceActionGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*Resources `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	Actions   []*Action    `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *ResourceActionGroup) Reset() {
	*x = ResourceActionGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceActionGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceActionGroup) ProtoMessage() {}

func (x *ResourceActionGroup) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceActionGroup.ProtoReflect.Descriptor instead.
func (*ResourceActionGroup) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{6}
}

func (x *ResourceActionGroup) GetResources() []*Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ResourceActionGroup) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

// Defines a role that can perform actions on resources
type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // Unique within a scope
	Scope *RoleScope `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	// Allow multiple combinations at the same time
	ResourceActionGroups []*ResourceActionGroup `protobuf:"bytes,4,rep,name=resource_action_groups,json=resourceActionGroups,proto3" json:"resource_action_groups,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{7}
}

func (x *Role) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetScope() *RoleScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *Role) GetResourceActionGroups() []*ResourceActionGroup {
	if x != nil {
		return x.ResourceActionGroups
	}
	return nil
}

// Entities that can be bound to a role. All users in all scopes given are considered a match.
type Entities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	OrgIds  []string `protobuf:"bytes,2,rep,name=org_ids,json=orgIds,proto3" json:"org_ids,omitempty"`
	TeamIds []string `protobuf:"bytes,3,rep,name=team_ids,json=teamIds,proto3" json:"team_ids,omitempty"`
}

func (x *Entities) Reset() {
	*x = Entities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entities) ProtoMessage() {}

func (x *Entities) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entities.ProtoReflect.Descriptor instead.
func (*Entities) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{8}
}

func (x *Entities) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *Entities) GetOrgIds() []string {
	if x != nil {
		return x.OrgIds
	}
	return nil
}

func (x *Entities) GetTeamIds() []string {
	if x != nil {
		return x.TeamIds
	}
	return nil
}

// Binds a set of roles to a set of entities
type RoleBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`   // Unique within a scope
	Scope *RoleScope `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"` // Was unused before introducing role_name in RoleBinding
	// Binds all roles to all given entities
	Entities []*Entities `protobuf:"bytes,5,rep,name=entities,proto3" json:"entities,omitempty"`
	// We optionally allow a more specialized list of resources that the original one allowed by the roles
	Resources []*Resources `protobuf:"bytes,6,rep,name=resources,proto3" json:"resources,omitempty"`
	RoleId    string       `protobuf:"bytes,7,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	RoleName  string       `protobuf:"bytes,9,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	Public    bool         `protobuf:"varint,8,opt,name=public,proto3" json:"public,omitempty"`
}

func (x *RoleBinding) Reset() {
	*x = RoleBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleBinding) ProtoMessage() {}

func (x *RoleBinding) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleBinding.ProtoReflect.Descriptor instead.
func (*RoleBinding) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{9}
}

func (x *RoleBinding) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleBinding) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleBinding) GetScope() *RoleScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *RoleBinding) GetEntities() []*Entities {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *RoleBinding) GetResources() []*Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *RoleBinding) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *RoleBinding) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleBinding) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

// Service messages
type GetRoleById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRoleById) Reset() {
	*x = GetRoleById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleById) ProtoMessage() {}

func (x *GetRoleById) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleById.ProtoReflect.Descriptor instead.
func (*GetRoleById) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{10}
}

func (x *GetRoleById) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetRoleByName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Scope *RoleScope `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *GetRoleByName) Reset() {
	*x = GetRoleByName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleByName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleByName) ProtoMessage() {}

func (x *GetRoleByName) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleByName.ProtoReflect.Descriptor instead.
func (*GetRoleByName) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{11}
}

func (x *GetRoleByName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetRoleByName) GetScope() *RoleScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

type ListRoles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope *RoleScope `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *ListRoles) Reset() {
	*x = ListRoles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoles) ProtoMessage() {}

func (x *ListRoles) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoles.ProtoReflect.Descriptor instead.
func (*ListRoles) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{12}
}

func (x *ListRoles) GetScope() *RoleScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

type SetRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *SetRole) Reset() {
	*x = SetRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRole) ProtoMessage() {}

func (x *SetRole) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRole.ProtoReflect.Descriptor instead.
func (*SetRole) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{13}
}

func (x *SetRole) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type DeleteRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRole) Reset() {
	*x = DeleteRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRole) ProtoMessage() {}

func (x *DeleteRole) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRole.ProtoReflect.Descriptor instead.
func (*DeleteRole) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetRoleBindingById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRoleBindingById) Reset() {
	*x = GetRoleBindingById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleBindingById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleBindingById) ProtoMessage() {}

func (x *GetRoleBindingById) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleBindingById.ProtoReflect.Descriptor instead.
func (*GetRoleBindingById) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{15}
}

func (x *GetRoleBindingById) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetRoleBindingByName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Scope *RoleScope `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *GetRoleBindingByName) Reset() {
	*x = GetRoleBindingByName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleBindingByName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleBindingByName) ProtoMessage() {}

func (x *GetRoleBindingByName) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleBindingByName.ProtoReflect.Descriptor instead.
func (*GetRoleBindingByName) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{16}
}

func (x *GetRoleBindingByName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetRoleBindingByName) GetScope() *RoleScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

type ListRoleBindings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId string     `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Scope    *RoleScope `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
}

func (x *ListRoleBindings) Reset() {
	*x = ListRoleBindings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleBindings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleBindings) ProtoMessage() {}

func (x *ListRoleBindings) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleBindings.ProtoReflect.Descriptor instead.
func (*ListRoleBindings) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{17}
}

func (x *ListRoleBindings) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *ListRoleBindings) GetScope() *RoleScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

type SetRoleBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleBinding *RoleBinding `protobuf:"bytes,1,opt,name=role_binding,json=roleBinding,proto3" json:"role_binding,omitempty"`
}

func (x *SetRoleBinding) Reset() {
	*x = SetRoleBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRoleBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRoleBinding) ProtoMessage() {}

func (x *SetRoleBinding) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRoleBinding.ProtoReflect.Descriptor instead.
func (*SetRoleBinding) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{18}
}

func (x *SetRoleBinding) GetRoleBinding() *RoleBinding {
	if x != nil {
		return x.RoleBinding
	}
	return nil
}

type DeleteRoleBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRoleBinding) Reset() {
	*x = DeleteRoleBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleBinding) ProtoMessage() {}

func (x *DeleteRoleBinding) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleBinding.ProtoReflect.Descriptor instead.
func (*DeleteRoleBinding) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteRoleBinding) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteRoleBindings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleBindingNames []string `protobuf:"bytes,1,rep,name=roleBindingNames,proto3" json:"roleBindingNames,omitempty"`
}

func (x *DeleteRoleBindings) Reset() {
	*x = DeleteRoleBindings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleBindings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleBindings) ProtoMessage() {}

func (x *DeleteRoleBindings) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleBindings.ProtoReflect.Descriptor instead.
func (*DeleteRoleBindings) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteRoleBindings) GetRoleBindingNames() []string {
	if x != nil {
		return x.RoleBindingNames
	}
	return nil
}

type RemoveResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceIds  []string      `protobuf:"bytes,1,rep,name=resource_ids,json=resourceIds,proto3" json:"resource_ids,omitempty"` // project.id, experiment.id etc.
	ResourceType *ResourceType `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
}

func (x *RemoveResources) Reset() {
	*x = RemoveResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResources) ProtoMessage() {}

func (x *RemoveResources) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResources.ProtoReflect.Descriptor instead.
func (*RemoveResources) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{21}
}

func (x *RemoveResources) GetResourceIds() []string {
	if x != nil {
		return x.ResourceIds
	}
	return nil
}

func (x *RemoveResources) GetResourceType() *ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return nil
}

type GetRoleById_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *GetRoleById_Response) Reset() {
	*x = GetRoleById_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleById_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleById_Response) ProtoMessage() {}

func (x *GetRoleById_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleById_Response.ProtoReflect.Descriptor instead.
func (*GetRoleById_Response) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{10, 0}
}

func (x *GetRoleById_Response) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type GetRoleByName_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *GetRoleByName_Response) Reset() {
	*x = GetRoleByName_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleByName_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleByName_Response) ProtoMessage() {}

func (x *GetRoleByName_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleByName_Response.ProtoReflect.Descriptor instead.
func (*GetRoleByName_Response) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GetRoleByName_Response) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type ListRoles_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*Role `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *ListRoles_Response) Reset() {
	*x = ListRoles_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoles_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoles_Response) ProtoMessage() {}

func (x *ListRoles_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoles_Response.ProtoReflect.Descriptor instead.
func (*ListRoles_Response) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{12, 0}
}

func (x *ListRoles_Response) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

type SetRole_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *SetRole_Response) Reset() {
	*x = SetRole_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRole_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRole_Response) ProtoMessage() {}

func (x *SetRole_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRole_Response.ProtoReflect.Descriptor instead.
func (*SetRole_Response) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{13, 0}
}

func (x *SetRole_Response) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type DeleteRole_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteRole_Response) Reset() {
	*x = DeleteRole_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRole_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRole_Response) ProtoMessage() {}

func (x *DeleteRole_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRole_Response.ProtoReflect.Descriptor instead.
func (*DeleteRole_Response) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{14, 0}
}

func (x *DeleteRole_Response) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetRoleBindingById_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleBinding *RoleBinding `protobuf:"bytes,1,opt,name=role_binding,json=roleBinding,proto3" json:"role_binding,omitempty"`
}

func (x *GetRoleBindingById_Response) Reset() {
	*x = GetRoleBindingById_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleBindingById_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleBindingById_Response) ProtoMessage() {}

func (x *GetRoleBindingById_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleBindingById_Response.ProtoReflect.Descriptor instead.
func (*GetRoleBindingById_Response) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{15, 0}
}

func (x *GetRoleBindingById_Response) GetRoleBinding() *RoleBinding {
	if x != nil {
		return x.RoleBinding
	}
	return nil
}

type GetRoleBindingByName_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleBinding *RoleBinding `protobuf:"bytes,1,opt,name=role_binding,json=roleBinding,proto3" json:"role_binding,omitempty"`
}

func (x *GetRoleBindingByName_Response) Reset() {
	*x = GetRoleBindingByName_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleBindingByName_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleBindingByName_Response) ProtoMessage() {}

func (x *GetRoleBindingByName_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleBindingByName_Response.ProtoReflect.Descriptor instead.
func (*GetRoleBindingByName_Response) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{16, 0}
}

func (x *GetRoleBindingByName_Response) GetRoleBinding() *RoleBinding {
	if x != nil {
		return x.RoleBinding
	}
	return nil
}

type ListRoleBindings_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleBindings []*RoleBinding `protobuf:"bytes,1,rep,name=role_bindings,json=roleBindings,proto3" json:"role_bindings,omitempty"`
}

func (x *ListRoleBindings_Response) Reset() {
	*x = ListRoleBindings_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleBindings_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleBindings_Response) ProtoMessage() {}

func (x *ListRoleBindings_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleBindings_Response.ProtoReflect.Descriptor instead.
func (*ListRoleBindings_Response) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{17, 0}
}

func (x *ListRoleBindings_Response) GetRoleBindings() []*RoleBinding {
	if x != nil {
		return x.RoleBindings
	}
	return nil
}

type SetRoleBinding_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleBinding *RoleBinding `protobuf:"bytes,1,opt,name=role_binding,json=roleBinding,proto3" json:"role_binding,omitempty"`
}

func (x *SetRoleBinding_Response) Reset() {
	*x = SetRoleBinding_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRoleBinding_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRoleBinding_Response) ProtoMessage() {}

func (x *SetRoleBinding_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRoleBinding_Response.ProtoReflect.Descriptor instead.
func (*SetRoleBinding_Response) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{18, 0}
}

func (x *SetRoleBinding_Response) GetRoleBinding() *RoleBinding {
	if x != nil {
		return x.RoleBinding
	}
	return nil
}

type DeleteRoleBinding_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteRoleBinding_Response) Reset() {
	*x = DeleteRoleBinding_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleBinding_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleBinding_Response) ProtoMessage() {}

func (x *DeleteRoleBinding_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleBinding_Response.ProtoReflect.Descriptor instead.
func (*DeleteRoleBinding_Response) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{19, 0}
}

func (x *DeleteRoleBinding_Response) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteRoleBindings_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteRoleBindings_Response) Reset() {
	*x = DeleteRoleBindings_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleBindings_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleBindings_Response) ProtoMessage() {}

func (x *DeleteRoleBindings_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleBindings_Response.ProtoReflect.Descriptor instead.
func (*DeleteRoleBindings_Response) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{20, 0}
}

func (x *DeleteRoleBindings_Response) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type RemoveResources_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RemoveResources_Response) Reset() {
	*x = RemoveResources_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uac_RoleService_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveResources_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResources_Response) ProtoMessage() {}

func (x *RemoveResources_Response) ProtoReflect() protoreflect.Message {
	mi := &file_uac_RoleService_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResources_Response.ProtoReflect.Descriptor instead.
func (*RemoveResources_Response) Descriptor() ([]byte, []int) {
	return file_uac_RoleService_proto_rawDescGZIP(), []int{21, 0}
}

func (x *RemoveResources_Response) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

var File_uac_RoleService_proto protoreflect.FileDescriptor

var file_uac_RoleService_proto_rawDesc = []byte{
	0x0a, 0x15, 0x75, 0x61, 0x63, 0x2f, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x75, 0x61, 0x63, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x55, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x22, 0x46,
	0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x44, 0x42, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49,
	0x43, 0x45, 0x10, 0x04, 0x22, 0x04, 0x08, 0x02, 0x10, 0x02, 0x22, 0x04, 0x08, 0x03, 0x10, 0x03,
	0x22, 0x04, 0x08, 0x05, 0x10, 0x05, 0x22, 0x8d, 0x01, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x44, 0x42, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x22, 0x78, 0x0a, 0x15,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x42, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x41, 0x44, 0x10,
	0x03, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x04, 0x12, 0x0a, 0x0a,
	0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x50,
	0x4c, 0x4f, 0x59, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x5f,
	0x52, 0x45, 0x41, 0x44, 0x10, 0x07, 0x22, 0xd0, 0x01, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3b, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61,
	0x63, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6d,
	0x0a, 0x16, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x44, 0x42, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x42, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x14, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x4a, 0x04, 0x08,
	0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0xb4, 0x01, 0x0a, 0x0c, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x1d, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x40, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x42, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x42,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x48, 0x00, 0x52, 0x1a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4a, 0x04,
	0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05,
	0x22, 0xac, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x3b,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x3f,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x3b, 0x0a, 0x09, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06,
	0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x13,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52,
	0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x04, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x57, 0x0a, 0x16, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22,
	0x59, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x99, 0x02, 0x0a, 0x0b, 0x52,
	0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x32, 0x0a,
	0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x09, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22, 0x51, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x32, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2d, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x1a, 0x32,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x22, 0x70, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12,
	0x2d, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x1a, 0x34,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x22, 0x65, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x1a, 0x32, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x40, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x22, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6e, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x1a, 0x48, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0xa3, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x1a, 0x48, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x22, 0xaa, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x75, 0x61, 0x63, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x1a, 0x4a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x0d, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x22, 0x98, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x3c, 0x0a, 0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x1a, 0x48, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75,
	0x61, 0x63, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0b,
	0x72, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x47, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x1a, 0x22, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x64, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x6f,
	0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0x22, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x0f, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x1a, 0x22, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xc9, 0x0b, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x1a, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x72, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75,
	0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x1a, 0x24, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x62, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75,
	0x61, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x1a, 0x20, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x07, 0x73, 0x65,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x75, 0x61, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x1a, 0x1e, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x73,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x69, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x1a, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x3a, 0x01, 0x2a, 0x12, 0x86, 0x01, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x29, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x49, 0x64, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d,
	0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x49, 0x64, 0x12, 0x8e, 0x01,
	0x0a, 0x14, 0x67, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x2b, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12,
	0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x7e,
	0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61,
	0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x1a, 0x27, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61,
	0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x79,
	0x0a, 0x0e, 0x73, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x1c, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e,
	0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x25,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x53, 0x65,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x73, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x85, 0x01, 0x0a, 0x11, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x1f, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x1a, 0x28, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x01,
	0x2a, 0x12, 0x89, 0x01, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x29, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x82, 0x01,
	0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x1d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x1a, 0x26, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x75, 0x61, 0x63, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22,
	0x2a, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x42, 0x3e, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x56, 0x65, 0x72, 0x74, 0x61, 0x41, 0x49, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x75,
	0x61, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_uac_RoleService_proto_rawDescOnce sync.Once
	file_uac_RoleService_proto_rawDescData = file_uac_RoleService_proto_rawDesc
)

func file_uac_RoleService_proto_rawDescGZIP() []byte {
	file_uac_RoleService_proto_rawDescOnce.Do(func() {
		file_uac_RoleService_proto_rawDescData = protoimpl.X.CompressGZIP(file_uac_RoleService_proto_rawDescData)
	})
	return file_uac_RoleService_proto_rawDescData
}

var file_uac_RoleService_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_uac_RoleService_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_uac_RoleService_proto_goTypes = []interface{}{
	(ServiceEnum_Service)(0),                                    // 0: ai.verta.uac.ServiceEnum.Service
	(ModelDBActionEnum_ModelDBServiceActions)(0),                // 1: ai.verta.uac.ModelDBActionEnum.ModelDBServiceActions
	(*ServiceEnum)(nil),                                         // 2: ai.verta.uac.ServiceEnum
	(*ModelDBActionEnum)(nil),                                   // 3: ai.verta.uac.ModelDBActionEnum
	(*Action)(nil),                                              // 4: ai.verta.uac.Action
	(*ResourceType)(nil),                                        // 5: ai.verta.uac.ResourceType
	(*Resources)(nil),                                           // 6: ai.verta.uac.Resources
	(*RoleScope)(nil),                                           // 7: ai.verta.uac.RoleScope
	(*ResourceActionGroup)(nil),                                 // 8: ai.verta.uac.ResourceActionGroup
	(*Role)(nil),                                                // 9: ai.verta.uac.Role
	(*Entities)(nil),                                            // 10: ai.verta.uac.Entities
	(*RoleBinding)(nil),                                         // 11: ai.verta.uac.RoleBinding
	(*GetRoleById)(nil),                                         // 12: ai.verta.uac.GetRoleById
	(*GetRoleByName)(nil),                                       // 13: ai.verta.uac.GetRoleByName
	(*ListRoles)(nil),                                           // 14: ai.verta.uac.ListRoles
	(*SetRole)(nil),                                             // 15: ai.verta.uac.SetRole
	(*DeleteRole)(nil),                                          // 16: ai.verta.uac.DeleteRole
	(*GetRoleBindingById)(nil),                                  // 17: ai.verta.uac.GetRoleBindingById
	(*GetRoleBindingByName)(nil),                                // 18: ai.verta.uac.GetRoleBindingByName
	(*ListRoleBindings)(nil),                                    // 19: ai.verta.uac.ListRoleBindings
	(*SetRoleBinding)(nil),                                      // 20: ai.verta.uac.SetRoleBinding
	(*DeleteRoleBinding)(nil),                                   // 21: ai.verta.uac.DeleteRoleBinding
	(*DeleteRoleBindings)(nil),                                  // 22: ai.verta.uac.DeleteRoleBindings
	(*RemoveResources)(nil),                                     // 23: ai.verta.uac.RemoveResources
	(*GetRoleById_Response)(nil),                                // 24: ai.verta.uac.GetRoleById.Response
	(*GetRoleByName_Response)(nil),                              // 25: ai.verta.uac.GetRoleByName.Response
	(*ListRoles_Response)(nil),                                  // 26: ai.verta.uac.ListRoles.Response
	(*SetRole_Response)(nil),                                    // 27: ai.verta.uac.SetRole.Response
	(*DeleteRole_Response)(nil),                                 // 28: ai.verta.uac.DeleteRole.Response
	(*GetRoleBindingById_Response)(nil),                         // 29: ai.verta.uac.GetRoleBindingById.Response
	(*GetRoleBindingByName_Response)(nil),                       // 30: ai.verta.uac.GetRoleBindingByName.Response
	(*ListRoleBindings_Response)(nil),                           // 31: ai.verta.uac.ListRoleBindings.Response
	(*SetRoleBinding_Response)(nil),                             // 32: ai.verta.uac.SetRoleBinding.Response
	(*DeleteRoleBinding_Response)(nil),                          // 33: ai.verta.uac.DeleteRoleBinding.Response
	(*DeleteRoleBindings_Response)(nil),                         // 34: ai.verta.uac.DeleteRoleBindings.Response
	(*RemoveResources_Response)(nil),                            // 35: ai.verta.uac.RemoveResources.Response
	(common.ModelDBResourceEnum_ModelDBServiceResourceTypes)(0), // 36: ai.verta.common.ModelDBResourceEnum.ModelDBServiceResourceTypes
}
var file_uac_RoleService_proto_depIdxs = []int32{
	0,  // 0: ai.verta.uac.Action.service:type_name -> ai.verta.uac.ServiceEnum.Service
	1,  // 1: ai.verta.uac.Action.modeldb_service_action:type_name -> ai.verta.uac.ModelDBActionEnum.ModelDBServiceActions
	36, // 2: ai.verta.uac.ResourceType.modeldb_service_resource_type:type_name -> ai.verta.common.ModelDBResourceEnum.ModelDBServiceResourceTypes
	0,  // 3: ai.verta.uac.Resources.service:type_name -> ai.verta.uac.ServiceEnum.Service
	5,  // 4: ai.verta.uac.Resources.resource_type:type_name -> ai.verta.uac.ResourceType
	6,  // 5: ai.verta.uac.ResourceActionGroup.resources:type_name -> ai.verta.uac.Resources
	4,  // 6: ai.verta.uac.ResourceActionGroup.actions:type_name -> ai.verta.uac.Action
	7,  // 7: ai.verta.uac.Role.scope:type_name -> ai.verta.uac.RoleScope
	8,  // 8: ai.verta.uac.Role.resource_action_groups:type_name -> ai.verta.uac.ResourceActionGroup
	7,  // 9: ai.verta.uac.RoleBinding.scope:type_name -> ai.verta.uac.RoleScope
	10, // 10: ai.verta.uac.RoleBinding.entities:type_name -> ai.verta.uac.Entities
	6,  // 11: ai.verta.uac.RoleBinding.resources:type_name -> ai.verta.uac.Resources
	7,  // 12: ai.verta.uac.GetRoleByName.scope:type_name -> ai.verta.uac.RoleScope
	7,  // 13: ai.verta.uac.ListRoles.scope:type_name -> ai.verta.uac.RoleScope
	9,  // 14: ai.verta.uac.SetRole.role:type_name -> ai.verta.uac.Role
	7,  // 15: ai.verta.uac.GetRoleBindingByName.scope:type_name -> ai.verta.uac.RoleScope
	7,  // 16: ai.verta.uac.ListRoleBindings.scope:type_name -> ai.verta.uac.RoleScope
	11, // 17: ai.verta.uac.SetRoleBinding.role_binding:type_name -> ai.verta.uac.RoleBinding
	5,  // 18: ai.verta.uac.RemoveResources.resource_type:type_name -> ai.verta.uac.ResourceType
	9,  // 19: ai.verta.uac.GetRoleById.Response.role:type_name -> ai.verta.uac.Role
	9,  // 20: ai.verta.uac.GetRoleByName.Response.role:type_name -> ai.verta.uac.Role
	9,  // 21: ai.verta.uac.ListRoles.Response.roles:type_name -> ai.verta.uac.Role
	9,  // 22: ai.verta.uac.SetRole.Response.role:type_name -> ai.verta.uac.Role
	11, // 23: ai.verta.uac.GetRoleBindingById.Response.role_binding:type_name -> ai.verta.uac.RoleBinding
	11, // 24: ai.verta.uac.GetRoleBindingByName.Response.role_binding:type_name -> ai.verta.uac.RoleBinding
	11, // 25: ai.verta.uac.ListRoleBindings.Response.role_bindings:type_name -> ai.verta.uac.RoleBinding
	11, // 26: ai.verta.uac.SetRoleBinding.Response.role_binding:type_name -> ai.verta.uac.RoleBinding
	12, // 27: ai.verta.uac.RoleService.getRoleById:input_type -> ai.verta.uac.GetRoleById
	13, // 28: ai.verta.uac.RoleService.getRoleByName:input_type -> ai.verta.uac.GetRoleByName
	14, // 29: ai.verta.uac.RoleService.listRoles:input_type -> ai.verta.uac.ListRoles
	15, // 30: ai.verta.uac.RoleService.setRole:input_type -> ai.verta.uac.SetRole
	16, // 31: ai.verta.uac.RoleService.deleteRole:input_type -> ai.verta.uac.DeleteRole
	17, // 32: ai.verta.uac.RoleService.getBindingRoleById:input_type -> ai.verta.uac.GetRoleBindingById
	18, // 33: ai.verta.uac.RoleService.getRoleBindingByName:input_type -> ai.verta.uac.GetRoleBindingByName
	19, // 34: ai.verta.uac.RoleService.listRoleBindings:input_type -> ai.verta.uac.ListRoleBindings
	20, // 35: ai.verta.uac.RoleService.setRoleBinding:input_type -> ai.verta.uac.SetRoleBinding
	21, // 36: ai.verta.uac.RoleService.deleteRoleBinding:input_type -> ai.verta.uac.DeleteRoleBinding
	22, // 37: ai.verta.uac.RoleService.deleteRoleBindings:input_type -> ai.verta.uac.DeleteRoleBindings
	23, // 38: ai.verta.uac.RoleService.removeResources:input_type -> ai.verta.uac.RemoveResources
	24, // 39: ai.verta.uac.RoleService.getRoleById:output_type -> ai.verta.uac.GetRoleById.Response
	25, // 40: ai.verta.uac.RoleService.getRoleByName:output_type -> ai.verta.uac.GetRoleByName.Response
	26, // 41: ai.verta.uac.RoleService.listRoles:output_type -> ai.verta.uac.ListRoles.Response
	27, // 42: ai.verta.uac.RoleService.setRole:output_type -> ai.verta.uac.SetRole.Response
	28, // 43: ai.verta.uac.RoleService.deleteRole:output_type -> ai.verta.uac.DeleteRole.Response
	29, // 44: ai.verta.uac.RoleService.getBindingRoleById:output_type -> ai.verta.uac.GetRoleBindingById.Response
	30, // 45: ai.verta.uac.RoleService.getRoleBindingByName:output_type -> ai.verta.uac.GetRoleBindingByName.Response
	31, // 46: ai.verta.uac.RoleService.listRoleBindings:output_type -> ai.verta.uac.ListRoleBindings.Response
	32, // 47: ai.verta.uac.RoleService.setRoleBinding:output_type -> ai.verta.uac.SetRoleBinding.Response
	33, // 48: ai.verta.uac.RoleService.deleteRoleBinding:output_type -> ai.verta.uac.DeleteRoleBinding.Response
	34, // 49: ai.verta.uac.RoleService.deleteRoleBindings:output_type -> ai.verta.uac.DeleteRoleBindings.Response
	35, // 50: ai.verta.uac.RoleService.removeResources:output_type -> ai.verta.uac.RemoveResources.Response
	39, // [39:51] is the sub-list for method output_type
	27, // [27:39] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_uac_RoleService_proto_init() }
func file_uac_RoleService_proto_init() {
	if File_uac_RoleService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_uac_RoleService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelDBActionEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleScope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceActionGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleByName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleBindingById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleBindingByName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleBindings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRoleBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleBindings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleById_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleByName_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoles_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRole_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRole_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleBindingById_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleBindingByName_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleBindings_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRoleBinding_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleBinding_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleBindings_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uac_RoleService_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveResources_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_uac_RoleService_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Action_ModeldbServiceAction)(nil),
	}
	file_uac_RoleService_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ResourceType_ModeldbServiceResourceType)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uac_RoleService_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uac_RoleService_proto_goTypes,
		DependencyIndexes: file_uac_RoleService_proto_depIdxs,
		EnumInfos:         file_uac_RoleService_proto_enumTypes,
		MessageInfos:      file_uac_RoleService_proto_msgTypes,
	}.Build()
	File_uac_RoleService_proto = out.File
	file_uac_RoleService_proto_rawDesc = nil
	file_uac_RoleService_proto_goTypes = nil
	file_uac_RoleService_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RoleServiceClient is the client API for RoleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoleServiceClient interface {
	GetRoleById(ctx context.Context, in *GetRoleById, opts ...grpc.CallOption) (*GetRoleById_Response, error)
	GetRoleByName(ctx context.Context, in *GetRoleByName, opts ...grpc.CallOption) (*GetRoleByName_Response, error)
	ListRoles(ctx context.Context, in *ListRoles, opts ...grpc.CallOption) (*ListRoles_Response, error)
	SetRole(ctx context.Context, in *SetRole, opts ...grpc.CallOption) (*SetRole_Response, error)
	DeleteRole(ctx context.Context, in *DeleteRole, opts ...grpc.CallOption) (*DeleteRole_Response, error)
	GetBindingRoleById(ctx context.Context, in *GetRoleBindingById, opts ...grpc.CallOption) (*GetRoleBindingById_Response, error)
	GetRoleBindingByName(ctx context.Context, in *GetRoleBindingByName, opts ...grpc.CallOption) (*GetRoleBindingByName_Response, error)
	ListRoleBindings(ctx context.Context, in *ListRoleBindings, opts ...grpc.CallOption) (*ListRoleBindings_Response, error)
	SetRoleBinding(ctx context.Context, in *SetRoleBinding, opts ...grpc.CallOption) (*SetRoleBinding_Response, error)
	DeleteRoleBinding(ctx context.Context, in *DeleteRoleBinding, opts ...grpc.CallOption) (*DeleteRoleBinding_Response, error)
	DeleteRoleBindings(ctx context.Context, in *DeleteRoleBindings, opts ...grpc.CallOption) (*DeleteRoleBindings_Response, error)
	RemoveResources(ctx context.Context, in *RemoveResources, opts ...grpc.CallOption) (*RemoveResources_Response, error)
}

type roleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRoleServiceClient(cc grpc.ClientConnInterface) RoleServiceClient {
	return &roleServiceClient{cc}
}

func (c *roleServiceClient) GetRoleById(ctx context.Context, in *GetRoleById, opts ...grpc.CallOption) (*GetRoleById_Response, error) {
	out := new(GetRoleById_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.RoleService/getRoleById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) GetRoleByName(ctx context.Context, in *GetRoleByName, opts ...grpc.CallOption) (*GetRoleByName_Response, error) {
	out := new(GetRoleByName_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.RoleService/getRoleByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) ListRoles(ctx context.Context, in *ListRoles, opts ...grpc.CallOption) (*ListRoles_Response, error) {
	out := new(ListRoles_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.RoleService/listRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) SetRole(ctx context.Context, in *SetRole, opts ...grpc.CallOption) (*SetRole_Response, error) {
	out := new(SetRole_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.RoleService/setRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) DeleteRole(ctx context.Context, in *DeleteRole, opts ...grpc.CallOption) (*DeleteRole_Response, error) {
	out := new(DeleteRole_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.RoleService/deleteRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) GetBindingRoleById(ctx context.Context, in *GetRoleBindingById, opts ...grpc.CallOption) (*GetRoleBindingById_Response, error) {
	out := new(GetRoleBindingById_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.RoleService/getBindingRoleById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) GetRoleBindingByName(ctx context.Context, in *GetRoleBindingByName, opts ...grpc.CallOption) (*GetRoleBindingByName_Response, error) {
	out := new(GetRoleBindingByName_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.RoleService/getRoleBindingByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) ListRoleBindings(ctx context.Context, in *ListRoleBindings, opts ...grpc.CallOption) (*ListRoleBindings_Response, error) {
	out := new(ListRoleBindings_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.RoleService/listRoleBindings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) SetRoleBinding(ctx context.Context, in *SetRoleBinding, opts ...grpc.CallOption) (*SetRoleBinding_Response, error) {
	out := new(SetRoleBinding_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.RoleService/setRoleBinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) DeleteRoleBinding(ctx context.Context, in *DeleteRoleBinding, opts ...grpc.CallOption) (*DeleteRoleBinding_Response, error) {
	out := new(DeleteRoleBinding_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.RoleService/deleteRoleBinding", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) DeleteRoleBindings(ctx context.Context, in *DeleteRoleBindings, opts ...grpc.CallOption) (*DeleteRoleBindings_Response, error) {
	out := new(DeleteRoleBindings_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.RoleService/deleteRoleBindings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) RemoveResources(ctx context.Context, in *RemoveResources, opts ...grpc.CallOption) (*RemoveResources_Response, error) {
	out := new(RemoveResources_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.uac.RoleService/removeResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoleServiceServer is the server API for RoleService service.
type RoleServiceServer interface {
	GetRoleById(context.Context, *GetRoleById) (*GetRoleById_Response, error)
	GetRoleByName(context.Context, *GetRoleByName) (*GetRoleByName_Response, error)
	ListRoles(context.Context, *ListRoles) (*ListRoles_Response, error)
	SetRole(context.Context, *SetRole) (*SetRole_Response, error)
	DeleteRole(context.Context, *DeleteRole) (*DeleteRole_Response, error)
	GetBindingRoleById(context.Context, *GetRoleBindingById) (*GetRoleBindingById_Response, error)
	GetRoleBindingByName(context.Context, *GetRoleBindingByName) (*GetRoleBindingByName_Response, error)
	ListRoleBindings(context.Context, *ListRoleBindings) (*ListRoleBindings_Response, error)
	SetRoleBinding(context.Context, *SetRoleBinding) (*SetRoleBinding_Response, error)
	DeleteRoleBinding(context.Context, *DeleteRoleBinding) (*DeleteRoleBinding_Response, error)
	DeleteRoleBindings(context.Context, *DeleteRoleBindings) (*DeleteRoleBindings_Response, error)
	RemoveResources(context.Context, *RemoveResources) (*RemoveResources_Response, error)
}

// UnimplementedRoleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRoleServiceServer struct {
}

func (*UnimplementedRoleServiceServer) GetRoleById(context.Context, *GetRoleById) (*GetRoleById_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoleById not implemented")
}
func (*UnimplementedRoleServiceServer) GetRoleByName(context.Context, *GetRoleByName) (*GetRoleByName_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoleByName not implemented")
}
func (*UnimplementedRoleServiceServer) ListRoles(context.Context, *ListRoles) (*ListRoles_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRoles not implemented")
}
func (*UnimplementedRoleServiceServer) SetRole(context.Context, *SetRole) (*SetRole_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRole not implemented")
}
func (*UnimplementedRoleServiceServer) DeleteRole(context.Context, *DeleteRole) (*DeleteRole_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRole not implemented")
}
func (*UnimplementedRoleServiceServer) GetBindingRoleById(context.Context, *GetRoleBindingById) (*GetRoleBindingById_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBindingRoleById not implemented")
}
func (*UnimplementedRoleServiceServer) GetRoleBindingByName(context.Context, *GetRoleBindingByName) (*GetRoleBindingByName_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoleBindingByName not implemented")
}
func (*UnimplementedRoleServiceServer) ListRoleBindings(context.Context, *ListRoleBindings) (*ListRoleBindings_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRoleBindings not implemented")
}
func (*UnimplementedRoleServiceServer) SetRoleBinding(context.Context, *SetRoleBinding) (*SetRoleBinding_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRoleBinding not implemented")
}
func (*UnimplementedRoleServiceServer) DeleteRoleBinding(context.Context, *DeleteRoleBinding) (*DeleteRoleBinding_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRoleBinding not implemented")
}
func (*UnimplementedRoleServiceServer) DeleteRoleBindings(context.Context, *DeleteRoleBindings) (*DeleteRoleBindings_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRoleBindings not implemented")
}
func (*UnimplementedRoleServiceServer) RemoveResources(context.Context, *RemoveResources) (*RemoveResources_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveResources not implemented")
}

func RegisterRoleServiceServer(s *grpc.Server, srv RoleServiceServer) {
	s.RegisterService(&_RoleService_serviceDesc, srv)
}

func _RoleService_GetRoleById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoleById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).GetRoleById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.RoleService/GetRoleById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).GetRoleById(ctx, req.(*GetRoleById))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_GetRoleByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoleByName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).GetRoleByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.RoleService/GetRoleByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).GetRoleByName(ctx, req.(*GetRoleByName))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_ListRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRoles)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).ListRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.RoleService/ListRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).ListRoles(ctx, req.(*ListRoles))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_SetRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRole)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).SetRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.RoleService/SetRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).SetRole(ctx, req.(*SetRole))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_DeleteRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRole)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).DeleteRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.RoleService/DeleteRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).DeleteRole(ctx, req.(*DeleteRole))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_GetBindingRoleById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoleBindingById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).GetBindingRoleById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.RoleService/GetBindingRoleById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).GetBindingRoleById(ctx, req.(*GetRoleBindingById))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_GetRoleBindingByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoleBindingByName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).GetRoleBindingByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.RoleService/GetRoleBindingByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).GetRoleBindingByName(ctx, req.(*GetRoleBindingByName))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_ListRoleBindings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRoleBindings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).ListRoleBindings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.RoleService/ListRoleBindings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).ListRoleBindings(ctx, req.(*ListRoleBindings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_SetRoleBinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRoleBinding)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).SetRoleBinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.RoleService/SetRoleBinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).SetRoleBinding(ctx, req.(*SetRoleBinding))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_DeleteRoleBinding_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRoleBinding)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).DeleteRoleBinding(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.RoleService/DeleteRoleBinding",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).DeleteRoleBinding(ctx, req.(*DeleteRoleBinding))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_DeleteRoleBindings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRoleBindings)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).DeleteRoleBindings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.RoleService/DeleteRoleBindings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).DeleteRoleBindings(ctx, req.(*DeleteRoleBindings))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_RemoveResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveResources)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).RemoveResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.uac.RoleService/RemoveResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).RemoveResources(ctx, req.(*RemoveResources))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ai.verta.uac.RoleService",
	HandlerType: (*RoleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getRoleById",
			Handler:    _RoleService_GetRoleById_Handler,
		},
		{
			MethodName: "getRoleByName",
			Handler:    _RoleService_GetRoleByName_Handler,
		},
		{
			MethodName: "listRoles",
			Handler:    _RoleService_ListRoles_Handler,
		},
		{
			MethodName: "setRole",
			Handler:    _RoleService_SetRole_Handler,
		},
		{
			MethodName: "deleteRole",
			Handler:    _RoleService_DeleteRole_Handler,
		},
		{
			MethodName: "getBindingRoleById",
			Handler:    _RoleService_GetBindingRoleById_Handler,
		},
		{
			MethodName: "getRoleBindingByName",
			Handler:    _RoleService_GetRoleBindingByName_Handler,
		},
		{
			MethodName: "listRoleBindings",
			Handler:    _RoleService_ListRoleBindings_Handler,
		},
		{
			MethodName: "setRoleBinding",
			Handler:    _RoleService_SetRoleBinding_Handler,
		},
		{
			MethodName: "deleteRoleBinding",
			Handler:    _RoleService_DeleteRoleBinding_Handler,
		},
		{
			MethodName: "deleteRoleBindings",
			Handler:    _RoleService_DeleteRoleBindings_Handler,
		},
		{
			MethodName: "removeResources",
			Handler:    _RoleService_RemoveResources_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "uac/RoleService.proto",
}
