// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.2
// source: monitoring/DeploymentIntegration.proto

package monitoring

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FeatureDataInModelVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Feature information
	FeatureName string `protobuf:"bytes,1,opt,name=feature_name,json=featureName,proto3" json:"feature_name,omitempty"`
	// Profiler info
	// Name of the python class that should be used for this profiler
	ProfilerName string `protobuf:"bytes,2,opt,name=profiler_name,json=profilerName,proto3" json:"profiler_name,omitempty"`
	// String serialization to the json that should be passed to the profiler constructor.
	// For example, if it's called like Profiler(foo="bar", baz=1), then this field has
	// {"foo": "bar", "baz"=1} in it.
	ProfilerParameters string `protobuf:"bytes,3,opt,name=profiler_parameters,json=profilerParameters,proto3" json:"profiler_parameters,omitempty"`
	// Summary information
	SummaryName     string `protobuf:"bytes,4,opt,name=summary_name,json=summaryName,proto3" json:"summary_name,omitempty"` // Must be unique for all FeatureDataInModelVersion in a given model version
	SummaryTypeName string `protobuf:"bytes,5,opt,name=summary_type_name,json=summaryTypeName,proto3" json:"summary_type_name,omitempty"`
	// Summary sample information. These fields are the same used during sample creation
	Labels                  map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Content                 string            `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAtMillis         uint64            `protobuf:"varint,8,opt,name=created_at_millis,json=createdAtMillis,proto3" json:"created_at_millis,omitempty"`
	TimeWindowStartAtMillis uint64            `protobuf:"varint,9,opt,name=time_window_start_at_millis,json=timeWindowStartAtMillis,proto3" json:"time_window_start_at_millis,omitempty"`
	TimeWindowEndAtMillis   uint64            `protobuf:"varint,10,opt,name=time_window_end_at_millis,json=timeWindowEndAtMillis,proto3" json:"time_window_end_at_millis,omitempty"`
}

func (x *FeatureDataInModelVersion) Reset() {
	*x = FeatureDataInModelVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DeploymentIntegration_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureDataInModelVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureDataInModelVersion) ProtoMessage() {}

func (x *FeatureDataInModelVersion) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DeploymentIntegration_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureDataInModelVersion.ProtoReflect.Descriptor instead.
func (*FeatureDataInModelVersion) Descriptor() ([]byte, []int) {
	return file_monitoring_DeploymentIntegration_proto_rawDescGZIP(), []int{0}
}

func (x *FeatureDataInModelVersion) GetFeatureName() string {
	if x != nil {
		return x.FeatureName
	}
	return ""
}

func (x *FeatureDataInModelVersion) GetProfilerName() string {
	if x != nil {
		return x.ProfilerName
	}
	return ""
}

func (x *FeatureDataInModelVersion) GetProfilerParameters() string {
	if x != nil {
		return x.ProfilerParameters
	}
	return ""
}

func (x *FeatureDataInModelVersion) GetSummaryName() string {
	if x != nil {
		return x.SummaryName
	}
	return ""
}

func (x *FeatureDataInModelVersion) GetSummaryTypeName() string {
	if x != nil {
		return x.SummaryTypeName
	}
	return ""
}

func (x *FeatureDataInModelVersion) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *FeatureDataInModelVersion) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *FeatureDataInModelVersion) GetCreatedAtMillis() uint64 {
	if x != nil {
		return x.CreatedAtMillis
	}
	return 0
}

func (x *FeatureDataInModelVersion) GetTimeWindowStartAtMillis() uint64 {
	if x != nil {
		return x.TimeWindowStartAtMillis
	}
	return 0
}

func (x *FeatureDataInModelVersion) GetTimeWindowEndAtMillis() uint64 {
	if x != nil {
		return x.TimeWindowEndAtMillis
	}
	return 0
}

type FeatureDataInProfiler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Feature information
	FeatureName string `protobuf:"bytes,1,opt,name=feature_name,json=featureName,proto3" json:"feature_name,omitempty"`
	// From FeatureDataInModelVersion
	ProfilerName       string `protobuf:"bytes,2,opt,name=profiler_name,json=profilerName,proto3" json:"profiler_name,omitempty"`
	ProfilerParameters string `protobuf:"bytes,3,opt,name=profiler_parameters,json=profilerParameters,proto3" json:"profiler_parameters,omitempty"`
	// From a summary created during deployment
	SummaryId uint64 `protobuf:"varint,4,opt,name=summary_id,json=summaryId,proto3" json:"summary_id,omitempty"`
	// From FeatureDataInModelVersion plus changes from deployment
	Labels           map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ReferenceContent string            `protobuf:"bytes,6,opt,name=reference_content,json=referenceContent,proto3" json:"reference_content,omitempty"`
}

func (x *FeatureDataInProfiler) Reset() {
	*x = FeatureDataInProfiler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_monitoring_DeploymentIntegration_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureDataInProfiler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureDataInProfiler) ProtoMessage() {}

func (x *FeatureDataInProfiler) ProtoReflect() protoreflect.Message {
	mi := &file_monitoring_DeploymentIntegration_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureDataInProfiler.ProtoReflect.Descriptor instead.
func (*FeatureDataInProfiler) Descriptor() ([]byte, []int) {
	return file_monitoring_DeploymentIntegration_proto_rawDescGZIP(), []int{1}
}

func (x *FeatureDataInProfiler) GetFeatureName() string {
	if x != nil {
		return x.FeatureName
	}
	return ""
}

func (x *FeatureDataInProfiler) GetProfilerName() string {
	if x != nil {
		return x.ProfilerName
	}
	return ""
}

func (x *FeatureDataInProfiler) GetProfilerParameters() string {
	if x != nil {
		return x.ProfilerParameters
	}
	return ""
}

func (x *FeatureDataInProfiler) GetSummaryId() uint64 {
	if x != nil {
		return x.SummaryId
	}
	return 0
}

func (x *FeatureDataInProfiler) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *FeatureDataInProfiler) GetReferenceContent() string {
	if x != nil {
		return x.ReferenceContent
	}
	return ""
}

var File_monitoring_DeploymentIntegration_proto protoreflect.FileDescriptor

var file_monitoring_DeploymentIntegration_proto_rawDesc = []byte{
	0x0a, 0x26, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2f, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x22, 0xb0, 0x04,
	0x0a, 0x19, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x5f,
	0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x3c, 0x0a,
	0x1b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x61, 0x74, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x17, 0x74, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x38, 0x0a, 0x19, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x61,
	0x74, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15,
	0x74, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x4d,
	0x69, 0x6c, 0x6c, 0x69, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xe7, 0x02, 0x0a, 0x15, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x4e, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a,
	0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x45, 0x50, 0x01, 0x5a, 0x41,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x56, 0x65, 0x72, 0x74, 0x61,
	0x41, 0x49, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_monitoring_DeploymentIntegration_proto_rawDescOnce sync.Once
	file_monitoring_DeploymentIntegration_proto_rawDescData = file_monitoring_DeploymentIntegration_proto_rawDesc
)

func file_monitoring_DeploymentIntegration_proto_rawDescGZIP() []byte {
	file_monitoring_DeploymentIntegration_proto_rawDescOnce.Do(func() {
		file_monitoring_DeploymentIntegration_proto_rawDescData = protoimpl.X.CompressGZIP(file_monitoring_DeploymentIntegration_proto_rawDescData)
	})
	return file_monitoring_DeploymentIntegration_proto_rawDescData
}

var file_monitoring_DeploymentIntegration_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_monitoring_DeploymentIntegration_proto_goTypes = []interface{}{
	(*FeatureDataInModelVersion)(nil), // 0: ai.verta.monitoring.FeatureDataInModelVersion
	(*FeatureDataInProfiler)(nil),     // 1: ai.verta.monitoring.FeatureDataInProfiler
	nil,                               // 2: ai.verta.monitoring.FeatureDataInModelVersion.LabelsEntry
	nil,                               // 3: ai.verta.monitoring.FeatureDataInProfiler.LabelsEntry
}
var file_monitoring_DeploymentIntegration_proto_depIdxs = []int32{
	2, // 0: ai.verta.monitoring.FeatureDataInModelVersion.labels:type_name -> ai.verta.monitoring.FeatureDataInModelVersion.LabelsEntry
	3, // 1: ai.verta.monitoring.FeatureDataInProfiler.labels:type_name -> ai.verta.monitoring.FeatureDataInProfiler.LabelsEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_monitoring_DeploymentIntegration_proto_init() }
func file_monitoring_DeploymentIntegration_proto_init() {
	if File_monitoring_DeploymentIntegration_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_monitoring_DeploymentIntegration_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureDataInModelVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_monitoring_DeploymentIntegration_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureDataInProfiler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_monitoring_DeploymentIntegration_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_monitoring_DeploymentIntegration_proto_goTypes,
		DependencyIndexes: file_monitoring_DeploymentIntegration_proto_depIdxs,
		MessageInfos:      file_monitoring_DeploymentIntegration_proto_msgTypes,
	}.Build()
	File_monitoring_DeploymentIntegration_proto = out.File
	file_monitoring_DeploymentIntegration_proto_rawDesc = nil
	file_monitoring_DeploymentIntegration_proto_goTypes = nil
	file_monitoring_DeploymentIntegration_proto_depIdxs = nil
}
