// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/public/artifactstore/ArtifactStore.proto

package artifactstore

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StoreArtifact struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreArtifact) Reset()         { *m = StoreArtifact{} }
func (m *StoreArtifact) String() string { return proto.CompactTextString(m) }
func (*StoreArtifact) ProtoMessage()    {}
func (*StoreArtifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_e15ee9116cd619b2, []int{0}
}

func (m *StoreArtifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreArtifact.Unmarshal(m, b)
}
func (m *StoreArtifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreArtifact.Marshal(b, m, deterministic)
}
func (m *StoreArtifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreArtifact.Merge(m, src)
}
func (m *StoreArtifact) XXX_Size() int {
	return xxx_messageInfo_StoreArtifact.Size(m)
}
func (m *StoreArtifact) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreArtifact.DiscardUnknown(m)
}

var xxx_messageInfo_StoreArtifact proto.InternalMessageInfo

func (m *StoreArtifact) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StoreArtifact) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type StoreArtifact_Response struct {
	ArtifactStoreKey     string   `protobuf:"bytes,1,opt,name=artifact_store_key,json=artifactStoreKey,proto3" json:"artifact_store_key,omitempty"`
	ArtifactStorePath    string   `protobuf:"bytes,2,opt,name=artifact_store_path,json=artifactStorePath,proto3" json:"artifact_store_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreArtifact_Response) Reset()         { *m = StoreArtifact_Response{} }
func (m *StoreArtifact_Response) String() string { return proto.CompactTextString(m) }
func (*StoreArtifact_Response) ProtoMessage()    {}
func (*StoreArtifact_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_e15ee9116cd619b2, []int{0, 0}
}

func (m *StoreArtifact_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreArtifact_Response.Unmarshal(m, b)
}
func (m *StoreArtifact_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreArtifact_Response.Marshal(b, m, deterministic)
}
func (m *StoreArtifact_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreArtifact_Response.Merge(m, src)
}
func (m *StoreArtifact_Response) XXX_Size() int {
	return xxx_messageInfo_StoreArtifact_Response.Size(m)
}
func (m *StoreArtifact_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreArtifact_Response.DiscardUnknown(m)
}

var xxx_messageInfo_StoreArtifact_Response proto.InternalMessageInfo

func (m *StoreArtifact_Response) GetArtifactStoreKey() string {
	if m != nil {
		return m.ArtifactStoreKey
	}
	return ""
}

func (m *StoreArtifact_Response) GetArtifactStorePath() string {
	if m != nil {
		return m.ArtifactStorePath
	}
	return ""
}

type StoreArtifactWithStream struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	ClientFile           []byte   `protobuf:"bytes,2,opt,name=client_file,json=clientFile,proto3" json:"client_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreArtifactWithStream) Reset()         { *m = StoreArtifactWithStream{} }
func (m *StoreArtifactWithStream) String() string { return proto.CompactTextString(m) }
func (*StoreArtifactWithStream) ProtoMessage()    {}
func (*StoreArtifactWithStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_e15ee9116cd619b2, []int{1}
}

func (m *StoreArtifactWithStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreArtifactWithStream.Unmarshal(m, b)
}
func (m *StoreArtifactWithStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreArtifactWithStream.Marshal(b, m, deterministic)
}
func (m *StoreArtifactWithStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreArtifactWithStream.Merge(m, src)
}
func (m *StoreArtifactWithStream) XXX_Size() int {
	return xxx_messageInfo_StoreArtifactWithStream.Size(m)
}
func (m *StoreArtifactWithStream) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreArtifactWithStream.DiscardUnknown(m)
}

var xxx_messageInfo_StoreArtifactWithStream proto.InternalMessageInfo

func (m *StoreArtifactWithStream) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StoreArtifactWithStream) GetClientFile() []byte {
	if m != nil {
		return m.ClientFile
	}
	return nil
}

type StoreArtifactWithStream_Response struct {
	CloudFileKey         string   `protobuf:"bytes,1,opt,name=cloud_file_key,json=cloudFileKey,proto3" json:"cloud_file_key,omitempty"`
	CloudFilePath        string   `protobuf:"bytes,2,opt,name=cloud_file_path,json=cloudFilePath,proto3" json:"cloud_file_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreArtifactWithStream_Response) Reset()         { *m = StoreArtifactWithStream_Response{} }
func (m *StoreArtifactWithStream_Response) String() string { return proto.CompactTextString(m) }
func (*StoreArtifactWithStream_Response) ProtoMessage()    {}
func (*StoreArtifactWithStream_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_e15ee9116cd619b2, []int{1, 0}
}

func (m *StoreArtifactWithStream_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreArtifactWithStream_Response.Unmarshal(m, b)
}
func (m *StoreArtifactWithStream_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreArtifactWithStream_Response.Marshal(b, m, deterministic)
}
func (m *StoreArtifactWithStream_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreArtifactWithStream_Response.Merge(m, src)
}
func (m *StoreArtifactWithStream_Response) XXX_Size() int {
	return xxx_messageInfo_StoreArtifactWithStream_Response.Size(m)
}
func (m *StoreArtifactWithStream_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreArtifactWithStream_Response.DiscardUnknown(m)
}

var xxx_messageInfo_StoreArtifactWithStream_Response proto.InternalMessageInfo

func (m *StoreArtifactWithStream_Response) GetCloudFileKey() string {
	if m != nil {
		return m.CloudFileKey
	}
	return ""
}

func (m *StoreArtifactWithStream_Response) GetCloudFilePath() string {
	if m != nil {
		return m.CloudFilePath
	}
	return ""
}

type GetArtifact struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetArtifact) Reset()         { *m = GetArtifact{} }
func (m *GetArtifact) String() string { return proto.CompactTextString(m) }
func (*GetArtifact) ProtoMessage()    {}
func (*GetArtifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_e15ee9116cd619b2, []int{2}
}

func (m *GetArtifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArtifact.Unmarshal(m, b)
}
func (m *GetArtifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArtifact.Marshal(b, m, deterministic)
}
func (m *GetArtifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArtifact.Merge(m, src)
}
func (m *GetArtifact) XXX_Size() int {
	return xxx_messageInfo_GetArtifact.Size(m)
}
func (m *GetArtifact) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArtifact.DiscardUnknown(m)
}

var xxx_messageInfo_GetArtifact proto.InternalMessageInfo

func (m *GetArtifact) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetArtifact_Response struct {
	Contents             []byte   `protobuf:"bytes,1,opt,name=contents,proto3" json:"contents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetArtifact_Response) Reset()         { *m = GetArtifact_Response{} }
func (m *GetArtifact_Response) String() string { return proto.CompactTextString(m) }
func (*GetArtifact_Response) ProtoMessage()    {}
func (*GetArtifact_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_e15ee9116cd619b2, []int{2, 0}
}

func (m *GetArtifact_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArtifact_Response.Unmarshal(m, b)
}
func (m *GetArtifact_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArtifact_Response.Marshal(b, m, deterministic)
}
func (m *GetArtifact_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArtifact_Response.Merge(m, src)
}
func (m *GetArtifact_Response) XXX_Size() int {
	return xxx_messageInfo_GetArtifact_Response.Size(m)
}
func (m *GetArtifact_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArtifact_Response.DiscardUnknown(m)
}

var xxx_messageInfo_GetArtifact_Response proto.InternalMessageInfo

func (m *GetArtifact_Response) GetContents() []byte {
	if m != nil {
		return m.Contents
	}
	return nil
}

type DeleteArtifact struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteArtifact) Reset()         { *m = DeleteArtifact{} }
func (m *DeleteArtifact) String() string { return proto.CompactTextString(m) }
func (*DeleteArtifact) ProtoMessage()    {}
func (*DeleteArtifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_e15ee9116cd619b2, []int{3}
}

func (m *DeleteArtifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteArtifact.Unmarshal(m, b)
}
func (m *DeleteArtifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteArtifact.Marshal(b, m, deterministic)
}
func (m *DeleteArtifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteArtifact.Merge(m, src)
}
func (m *DeleteArtifact) XXX_Size() int {
	return xxx_messageInfo_DeleteArtifact.Size(m)
}
func (m *DeleteArtifact) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteArtifact.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteArtifact proto.InternalMessageInfo

func (m *DeleteArtifact) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type DeleteArtifact_Response struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteArtifact_Response) Reset()         { *m = DeleteArtifact_Response{} }
func (m *DeleteArtifact_Response) String() string { return proto.CompactTextString(m) }
func (*DeleteArtifact_Response) ProtoMessage()    {}
func (*DeleteArtifact_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_e15ee9116cd619b2, []int{3, 0}
}

func (m *DeleteArtifact_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteArtifact_Response.Unmarshal(m, b)
}
func (m *DeleteArtifact_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteArtifact_Response.Marshal(b, m, deterministic)
}
func (m *DeleteArtifact_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteArtifact_Response.Merge(m, src)
}
func (m *DeleteArtifact_Response) XXX_Size() int {
	return xxx_messageInfo_DeleteArtifact_Response.Size(m)
}
func (m *DeleteArtifact_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteArtifact_Response.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteArtifact_Response proto.InternalMessageInfo

func (m *DeleteArtifact_Response) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func init() {
	proto.RegisterType((*StoreArtifact)(nil), "ai.verta.artifactstore.StoreArtifact")
	proto.RegisterType((*StoreArtifact_Response)(nil), "ai.verta.artifactstore.StoreArtifact.Response")
	proto.RegisterType((*StoreArtifactWithStream)(nil), "ai.verta.artifactstore.StoreArtifactWithStream")
	proto.RegisterType((*StoreArtifactWithStream_Response)(nil), "ai.verta.artifactstore.StoreArtifactWithStream.Response")
	proto.RegisterType((*GetArtifact)(nil), "ai.verta.artifactstore.GetArtifact")
	proto.RegisterType((*GetArtifact_Response)(nil), "ai.verta.artifactstore.GetArtifact.Response")
	proto.RegisterType((*DeleteArtifact)(nil), "ai.verta.artifactstore.DeleteArtifact")
	proto.RegisterType((*DeleteArtifact_Response)(nil), "ai.verta.artifactstore.DeleteArtifact.Response")
}

func init() {
	proto.RegisterFile("protos/public/artifactstore/ArtifactStore.proto", fileDescriptor_e15ee9116cd619b2)
}

var fileDescriptor_e15ee9116cd619b2 = []byte{
	// 505 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xcf, 0x6a, 0x14, 0x4d,
	0x14, 0xc5, 0xa9, 0x7c, 0x21, 0xcc, 0x77, 0xe7, 0x8f, 0xb1, 0x84, 0x64, 0x28, 0x85, 0x0c, 0x6d,
	0x32, 0x68, 0x08, 0x5d, 0xa8, 0x1b, 0xc9, 0x2e, 0x12, 0x12, 0xc5, 0x4d, 0xe8, 0x80, 0x8a, 0x9b,
	0xa1, 0xa6, 0xa7, 0xd2, 0x5d, 0xd8, 0xd3, 0xd5, 0x74, 0xdd, 0x09, 0x64, 0x9b, 0xbd, 0x0b, 0xf1,
	0x01, 0xdc, 0xf9, 0x06, 0x3e, 0x89, 0xaf, 0xe0, 0x03, 0xf8, 0x08, 0xd2, 0x35, 0x99, 0xe9, 0x2a,
	0x49, 0x87, 0x71, 0xd7, 0xb7, 0xfa, 0xdc, 0x73, 0x7e, 0xd4, 0xbd, 0x14, 0xf0, 0xa2, 0xd4, 0xa8,
	0x0d, 0x2f, 0x66, 0xe3, 0x4c, 0xc5, 0x5c, 0x94, 0xa8, 0x2e, 0x44, 0x8c, 0x06, 0x75, 0x29, 0xf9,
	0xd1, 0x4d, 0x75, 0x5e, 0x55, 0xa1, 0x55, 0xd2, 0x2d, 0xa1, 0xc2, 0x4b, 0x59, 0xa2, 0x08, 0x3d,
	0x2d, 0x7b, 0x94, 0x68, 0x9d, 0x64, 0x92, 0x8b, 0x42, 0x71, 0x91, 0xe7, 0x1a, 0x05, 0x2a, 0x9d,
	0x9b, 0x79, 0x57, 0xf0, 0x8d, 0x40, 0xd7, 0xba, 0x2c, 0x2c, 0xe9, 0x26, 0xfc, 0xf7, 0x49, 0x5e,
	0xf5, 0xc9, 0x80, 0x3c, 0xf9, 0x3f, 0xaa, 0x3e, 0x29, 0x85, 0xf5, 0x42, 0x60, 0xda, 0x5f, 0xb3,
	0x47, 0xf6, 0x9b, 0xa5, 0xd0, 0x8a, 0xa4, 0x29, 0x74, 0x6e, 0x24, 0x3d, 0x00, 0xba, 0x88, 0x1c,
	0xd9, 0xcc, 0x51, 0x6d, 0xb0, 0x29, 0x5c, 0xd4, 0xb7, 0xf2, 0x8a, 0x86, 0xf0, 0xe0, 0x2f, 0xb5,
	0x63, 0x7e, 0xdf, 0x93, 0x9f, 0x09, 0x4c, 0x83, 0xef, 0x04, 0xb6, 0x3d, 0xc2, 0xf7, 0x0a, 0xd3,
	0x73, 0x2c, 0xa5, 0x98, 0xde, 0xc2, 0xba, 0x03, 0xed, 0x38, 0x53, 0x32, 0xc7, 0xd1, 0x85, 0xca,
	0xa4, 0x75, 0xed, 0x44, 0x30, 0x3f, 0x3a, 0x51, 0x99, 0x64, 0x1f, 0x1c, 0xf0, 0x5d, 0xe8, 0xc5,
	0x99, 0x9e, 0x4d, 0xac, 0xd6, 0x81, 0xee, 0xd8, 0xd3, 0x4a, 0x5e, 0x01, 0x0f, 0xe1, 0x9e, 0xa3,
	0x72, 0x60, 0xbb, 0x4b, 0x99, 0x05, 0x3d, 0x85, 0xf6, 0xa9, 0xc4, 0xe6, 0x7b, 0x64, 0x43, 0x27,
	0x9a, 0x41, 0x2b, 0xd6, 0x39, 0xca, 0x1c, 0x8d, 0x95, 0x74, 0xa2, 0x65, 0x1d, 0x9c, 0x40, 0xef,
	0x58, 0x66, 0x12, 0xef, 0x98, 0x09, 0x0b, 0x1c, 0xaf, 0x2d, 0xd8, 0x30, 0x28, 0x70, 0x36, 0x77,
	0x6a, 0x45, 0x37, 0xd5, 0xf3, 0xdf, 0xeb, 0xd0, 0xf5, 0x36, 0x85, 0x7e, 0x26, 0xd0, 0x35, 0xde,
	0xb4, 0xf7, 0xc2, 0xdb, 0xd7, 0x26, 0xf4, 0xae, 0x9c, 0x85, 0x2b, 0xc9, 0xc2, 0x05, 0x52, 0xb0,
	0x77, 0xfd, 0xf3, 0xd7, 0xd7, 0xb5, 0x9d, 0x80, 0xf1, 0xcb, 0x67, 0xcb, 0xdd, 0xe5, 0x5e, 0xf4,
	0x21, 0xd9, 0xa7, 0x3f, 0x08, 0x6c, 0x9b, 0x86, 0xd9, 0xf2, 0x95, 0x22, 0xeb, 0x06, 0xf6, 0xf2,
	0x1f, 0x1b, 0x6a, 0x5a, 0x6e, 0x69, 0x9f, 0x06, 0xbb, 0xcd, 0xb4, 0x75, 0x5b, 0xc5, 0x7d, 0x4d,
	0xa0, 0x9d, 0x38, 0xb3, 0x7e, 0xdc, 0x14, 0xed, 0x2c, 0x04, 0x3b, 0x58, 0x41, 0x54, 0x33, 0x0d,
	0x2c, 0x13, 0xa3, 0x7d, 0x8f, 0xc9, 0x0d, 0xfd, 0x42, 0xa0, 0x37, 0xf1, 0xf7, 0x64, 0xd8, 0x14,
	0xe1, 0xef, 0x13, 0xe3, 0xab, 0xe9, 0x6a, 0x9a, 0xa1, 0xa5, 0x19, 0x04, 0x0f, 0x3d, 0x1a, 0x3f,
	0xfd, 0x90, 0xec, 0xbf, 0x7a, 0x7d, 0x46, 0x3e, 0x1e, 0x27, 0x0a, 0xd3, 0xd9, 0x38, 0x8c, 0xf5,
	0x94, 0xbf, 0xab, 0x32, 0x8e, 0xde, 0xf0, 0xa9, 0x9e, 0xc8, 0x6c, 0x32, 0x5e, 0x3c, 0x6a, 0x89,
	0xcc, 0x79, 0xa2, 0xef, 0x7a, 0xe2, 0xc6, 0x1b, 0xf6, 0xe7, 0x8b, 0x3f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x50, 0x39, 0x2d, 0x59, 0x08, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ArtifactStoreClient is the client API for ArtifactStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArtifactStoreClient interface {
	StoreArtifact(ctx context.Context, in *StoreArtifact, opts ...grpc.CallOption) (*StoreArtifact_Response, error)
	StoreArtifactWithStream(ctx context.Context, in *StoreArtifactWithStream, opts ...grpc.CallOption) (*StoreArtifactWithStream_Response, error)
	GetArtifact(ctx context.Context, in *GetArtifact, opts ...grpc.CallOption) (*GetArtifact_Response, error)
	DeleteArtifact(ctx context.Context, in *DeleteArtifact, opts ...grpc.CallOption) (*DeleteArtifact_Response, error)
}

type artifactStoreClient struct {
	cc *grpc.ClientConn
}

func NewArtifactStoreClient(cc *grpc.ClientConn) ArtifactStoreClient {
	return &artifactStoreClient{cc}
}

func (c *artifactStoreClient) StoreArtifact(ctx context.Context, in *StoreArtifact, opts ...grpc.CallOption) (*StoreArtifact_Response, error) {
	out := new(StoreArtifact_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.artifactstore.ArtifactStore/storeArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactStoreClient) StoreArtifactWithStream(ctx context.Context, in *StoreArtifactWithStream, opts ...grpc.CallOption) (*StoreArtifactWithStream_Response, error) {
	out := new(StoreArtifactWithStream_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.artifactstore.ArtifactStore/storeArtifactWithStream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactStoreClient) GetArtifact(ctx context.Context, in *GetArtifact, opts ...grpc.CallOption) (*GetArtifact_Response, error) {
	out := new(GetArtifact_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.artifactstore.ArtifactStore/getArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *artifactStoreClient) DeleteArtifact(ctx context.Context, in *DeleteArtifact, opts ...grpc.CallOption) (*DeleteArtifact_Response, error) {
	out := new(DeleteArtifact_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.artifactstore.ArtifactStore/deleteArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArtifactStoreServer is the server API for ArtifactStore service.
type ArtifactStoreServer interface {
	StoreArtifact(context.Context, *StoreArtifact) (*StoreArtifact_Response, error)
	StoreArtifactWithStream(context.Context, *StoreArtifactWithStream) (*StoreArtifactWithStream_Response, error)
	GetArtifact(context.Context, *GetArtifact) (*GetArtifact_Response, error)
	DeleteArtifact(context.Context, *DeleteArtifact) (*DeleteArtifact_Response, error)
}

// UnimplementedArtifactStoreServer can be embedded to have forward compatible implementations.
type UnimplementedArtifactStoreServer struct {
}

func (*UnimplementedArtifactStoreServer) StoreArtifact(ctx context.Context, req *StoreArtifact) (*StoreArtifact_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StoreArtifact not implemented")
}
func (*UnimplementedArtifactStoreServer) StoreArtifactWithStream(ctx context.Context, req *StoreArtifactWithStream) (*StoreArtifactWithStream_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StoreArtifactWithStream not implemented")
}
func (*UnimplementedArtifactStoreServer) GetArtifact(ctx context.Context, req *GetArtifact) (*GetArtifact_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArtifact not implemented")
}
func (*UnimplementedArtifactStoreServer) DeleteArtifact(ctx context.Context, req *DeleteArtifact) (*DeleteArtifact_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteArtifact not implemented")
}

func RegisterArtifactStoreServer(s *grpc.Server, srv ArtifactStoreServer) {
	s.RegisterService(&_ArtifactStore_serviceDesc, srv)
}

func _ArtifactStore_StoreArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreArtifact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactStoreServer).StoreArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.artifactstore.ArtifactStore/StoreArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactStoreServer).StoreArtifact(ctx, req.(*StoreArtifact))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactStore_StoreArtifactWithStream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreArtifactWithStream)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactStoreServer).StoreArtifactWithStream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.artifactstore.ArtifactStore/StoreArtifactWithStream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactStoreServer).StoreArtifactWithStream(ctx, req.(*StoreArtifactWithStream))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactStore_GetArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArtifact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactStoreServer).GetArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.artifactstore.ArtifactStore/GetArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactStoreServer).GetArtifact(ctx, req.(*GetArtifact))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArtifactStore_DeleteArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteArtifact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactStoreServer).DeleteArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.artifactstore.ArtifactStore/DeleteArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactStoreServer).DeleteArtifact(ctx, req.(*DeleteArtifact))
	}
	return interceptor(ctx, in, info, handler)
}

var _ArtifactStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ai.verta.artifactstore.ArtifactStore",
	HandlerType: (*ArtifactStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "storeArtifact",
			Handler:    _ArtifactStore_StoreArtifact_Handler,
		},
		{
			MethodName: "storeArtifactWithStream",
			Handler:    _ArtifactStore_StoreArtifactWithStream_Handler,
		},
		{
			MethodName: "getArtifact",
			Handler:    _ArtifactStore_GetArtifact_Handler,
		},
		{
			MethodName: "deleteArtifact",
			Handler:    _ArtifactStore_DeleteArtifact_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/public/artifactstore/ArtifactStore.proto",
}
