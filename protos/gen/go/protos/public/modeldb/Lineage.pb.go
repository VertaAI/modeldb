// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.2
// source: modeldb/Lineage.proto

package modeldb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LineageEntryEnum_LineageEntryType int32

const (
	LineageEntryEnum_UNKNOWN         LineageEntryEnum_LineageEntryType = 0 // Type 0 should always cause an error
	LineageEntryEnum_EXPERIMENT_RUN  LineageEntryEnum_LineageEntryType = 1
	LineageEntryEnum_DATASET_VERSION LineageEntryEnum_LineageEntryType = 2
)

// Enum value maps for LineageEntryEnum_LineageEntryType.
var (
	LineageEntryEnum_LineageEntryType_name = map[int32]string{
		0: "UNKNOWN",
		1: "EXPERIMENT_RUN",
		2: "DATASET_VERSION",
	}
	LineageEntryEnum_LineageEntryType_value = map[string]int32{
		"UNKNOWN":         0,
		"EXPERIMENT_RUN":  1,
		"DATASET_VERSION": 2,
	}
)

func (x LineageEntryEnum_LineageEntryType) Enum() *LineageEntryEnum_LineageEntryType {
	p := new(LineageEntryEnum_LineageEntryType)
	*p = x
	return p
}

func (x LineageEntryEnum_LineageEntryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LineageEntryEnum_LineageEntryType) Descriptor() protoreflect.EnumDescriptor {
	return file_modeldb_Lineage_proto_enumTypes[0].Descriptor()
}

func (LineageEntryEnum_LineageEntryType) Type() protoreflect.EnumType {
	return &file_modeldb_Lineage_proto_enumTypes[0]
}

func (x LineageEntryEnum_LineageEntryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LineageEntryEnum_LineageEntryType.Descriptor instead.
func (LineageEntryEnum_LineageEntryType) EnumDescriptor() ([]byte, []int) {
	return file_modeldb_Lineage_proto_rawDescGZIP(), []int{0, 0}
}

// We can have multiple types being recorded in the lineage system. These are the types that we allow.
type LineageEntryEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LineageEntryEnum) Reset() {
	*x = LineageEntryEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_Lineage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineageEntryEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineageEntryEnum) ProtoMessage() {}

func (x *LineageEntryEnum) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_Lineage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineageEntryEnum.ProtoReflect.Descriptor instead.
func (*LineageEntryEnum) Descriptor() ([]byte, []int) {
	return file_modeldb_Lineage_proto_rawDescGZIP(), []int{0}
}

type LineageEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type LineageEntryEnum_LineageEntryType `protobuf:"varint,1,opt,name=type,proto3,enum=ai.verta.modeldb.LineageEntryEnum_LineageEntryType" json:"type,omitempty"`
	// Types that are assignable to Description:
	//	*LineageEntry_ExternalId
	Description isLineageEntry_Description `protobuf_oneof:"description"`
}

func (x *LineageEntry) Reset() {
	*x = LineageEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_Lineage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineageEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineageEntry) ProtoMessage() {}

func (x *LineageEntry) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_Lineage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineageEntry.ProtoReflect.Descriptor instead.
func (*LineageEntry) Descriptor() ([]byte, []int) {
	return file_modeldb_Lineage_proto_rawDescGZIP(), []int{1}
}

func (x *LineageEntry) GetType() LineageEntryEnum_LineageEntryType {
	if x != nil {
		return x.Type
	}
	return LineageEntryEnum_UNKNOWN
}

func (m *LineageEntry) GetDescription() isLineageEntry_Description {
	if m != nil {
		return m.Description
	}
	return nil
}

func (x *LineageEntry) GetExternalId() string {
	if x, ok := x.GetDescription().(*LineageEntry_ExternalId); ok {
		return x.ExternalId
	}
	return ""
}

type isLineageEntry_Description interface {
	isLineageEntry_Description()
}

type LineageEntry_ExternalId struct {
	// External ID of the item for the given type, if compatible
	ExternalId string `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3,oneof"`
}

func (*LineageEntry_ExternalId) isLineageEntry_Description() {}

// Represent a set of lineage items, essentially an array so that it can be embedded on other proto messages.
type LineageEntryBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*LineageEntry `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *LineageEntryBatch) Reset() {
	*x = LineageEntryBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_Lineage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineageEntryBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineageEntryBatch) ProtoMessage() {}

func (x *LineageEntryBatch) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_Lineage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineageEntryBatch.ProtoReflect.Descriptor instead.
func (*LineageEntryBatch) Descriptor() ([]byte, []int) {
	return file_modeldb_Lineage_proto_rawDescGZIP(), []int{2}
}

func (x *LineageEntryBatch) GetItems() []*LineageEntry {
	if x != nil {
		return x.Items
	}
	return nil
}

// Add every item of "input" as a parent of every item on "output".
type AddLineage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input  []*LineageEntry `protobuf:"bytes,1,rep,name=input,proto3" json:"input,omitempty"`
	Output []*LineageEntry `protobuf:"bytes,2,rep,name=output,proto3" json:"output,omitempty"`
}

func (x *AddLineage) Reset() {
	*x = AddLineage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_Lineage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLineage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLineage) ProtoMessage() {}

func (x *AddLineage) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_Lineage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLineage.ProtoReflect.Descriptor instead.
func (*AddLineage) Descriptor() ([]byte, []int) {
	return file_modeldb_Lineage_proto_rawDescGZIP(), []int{3}
}

func (x *AddLineage) GetInput() []*LineageEntry {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *AddLineage) GetOutput() []*LineageEntry {
	if x != nil {
		return x.Output
	}
	return nil
}

// Delete every item of "input" as a parent of every item on "output".
type DeleteLineage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input  []*LineageEntry `protobuf:"bytes,1,rep,name=input,proto3" json:"input,omitempty"`
	Output []*LineageEntry `protobuf:"bytes,2,rep,name=output,proto3" json:"output,omitempty"`
}

func (x *DeleteLineage) Reset() {
	*x = DeleteLineage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_Lineage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLineage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLineage) ProtoMessage() {}

func (x *DeleteLineage) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_Lineage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLineage.ProtoReflect.Descriptor instead.
func (*DeleteLineage) Descriptor() ([]byte, []int) {
	return file_modeldb_Lineage_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteLineage) GetInput() []*LineageEntry {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *DeleteLineage) GetOutput() []*LineageEntry {
	if x != nil {
		return x.Output
	}
	return nil
}

// For each item provided, list its inputs.
// This operation is batched by default. If "items" contains N elements,
// then Response.inputs will contain N elements, where each element
// is the set of inputs for the corresponding i-th item provided in the
// request.
type FindAllInputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*LineageEntry `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *FindAllInputs) Reset() {
	*x = FindAllInputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_Lineage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllInputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllInputs) ProtoMessage() {}

func (x *FindAllInputs) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_Lineage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllInputs.ProtoReflect.Descriptor instead.
func (*FindAllInputs) Descriptor() ([]byte, []int) {
	return file_modeldb_Lineage_proto_rawDescGZIP(), []int{5}
}

func (x *FindAllInputs) GetItems() []*LineageEntry {
	if x != nil {
		return x.Items
	}
	return nil
}

// For each item provided, list its outputs.
// This operation is batched by default. If "items" contains N elements,
// then Response.outputs will contain N elements, where each element
// is the set of outputs for the corresponding i-th item provided in the
// request.
type FindAllOutputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*LineageEntry `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *FindAllOutputs) Reset() {
	*x = FindAllOutputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_Lineage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllOutputs) ProtoMessage() {}

func (x *FindAllOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_Lineage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllOutputs.ProtoReflect.Descriptor instead.
func (*FindAllOutputs) Descriptor() ([]byte, []int) {
	return file_modeldb_Lineage_proto_rawDescGZIP(), []int{6}
}

func (x *FindAllOutputs) GetItems() []*LineageEntry {
	if x != nil {
		return x.Items
	}
	return nil
}

// For each item provided, list its inputs and outputs.
// This operation is batched by default. If "items" contains N elements,
// then Response.inputs and Response.outputs will contain N elements each, where each element
// is the set of inputs and outputs for the corresponding i-th item provided in the
// request.
type FindAllInputsOutputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*LineageEntry `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *FindAllInputsOutputs) Reset() {
	*x = FindAllInputsOutputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_Lineage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllInputsOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllInputsOutputs) ProtoMessage() {}

func (x *FindAllInputsOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_Lineage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllInputsOutputs.ProtoReflect.Descriptor instead.
func (*FindAllInputsOutputs) Descriptor() ([]byte, []int) {
	return file_modeldb_Lineage_proto_rawDescGZIP(), []int{7}
}

func (x *FindAllInputsOutputs) GetItems() []*LineageEntry {
	if x != nil {
		return x.Items
	}
	return nil
}

type AddLineage_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AddLineage_Response) Reset() {
	*x = AddLineage_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_Lineage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLineage_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLineage_Response) ProtoMessage() {}

func (x *AddLineage_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_Lineage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLineage_Response.ProtoReflect.Descriptor instead.
func (*AddLineage_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_Lineage_proto_rawDescGZIP(), []int{3, 0}
}

func (x *AddLineage_Response) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeleteLineage_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteLineage_Response) Reset() {
	*x = DeleteLineage_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_Lineage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLineage_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLineage_Response) ProtoMessage() {}

func (x *DeleteLineage_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_Lineage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLineage_Response.ProtoReflect.Descriptor instead.
func (*DeleteLineage_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_Lineage_proto_rawDescGZIP(), []int{4, 0}
}

func (x *DeleteLineage_Response) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type FindAllInputs_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs []*LineageEntryBatch `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
}

func (x *FindAllInputs_Response) Reset() {
	*x = FindAllInputs_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_Lineage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllInputs_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllInputs_Response) ProtoMessage() {}

func (x *FindAllInputs_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_Lineage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllInputs_Response.ProtoReflect.Descriptor instead.
func (*FindAllInputs_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_Lineage_proto_rawDescGZIP(), []int{5, 0}
}

func (x *FindAllInputs_Response) GetInputs() []*LineageEntryBatch {
	if x != nil {
		return x.Inputs
	}
	return nil
}

type FindAllOutputs_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outputs []*LineageEntryBatch `protobuf:"bytes,1,rep,name=outputs,proto3" json:"outputs,omitempty"`
}

func (x *FindAllOutputs_Response) Reset() {
	*x = FindAllOutputs_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_Lineage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllOutputs_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllOutputs_Response) ProtoMessage() {}

func (x *FindAllOutputs_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_Lineage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllOutputs_Response.ProtoReflect.Descriptor instead.
func (*FindAllOutputs_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_Lineage_proto_rawDescGZIP(), []int{6, 0}
}

func (x *FindAllOutputs_Response) GetOutputs() []*LineageEntryBatch {
	if x != nil {
		return x.Outputs
	}
	return nil
}

type FindAllInputsOutputs_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs  []*LineageEntryBatch `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs []*LineageEntryBatch `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
}

func (x *FindAllInputsOutputs_Response) Reset() {
	*x = FindAllInputsOutputs_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_Lineage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllInputsOutputs_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllInputsOutputs_Response) ProtoMessage() {}

func (x *FindAllInputsOutputs_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_Lineage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllInputsOutputs_Response.ProtoReflect.Descriptor instead.
func (*FindAllInputsOutputs_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_Lineage_proto_rawDescGZIP(), []int{7, 0}
}

func (x *FindAllInputsOutputs_Response) GetInputs() []*LineageEntryBatch {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *FindAllInputsOutputs_Response) GetOutputs() []*LineageEntryBatch {
	if x != nil {
		return x.Outputs
	}
	return nil
}

var File_modeldb_Lineage_proto protoreflect.FileDescriptor

var file_modeldb_Lineage_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2f, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5c, 0x0a, 0x10, 0x4c, 0x69, 0x6e, 0x65, 0x61,
	0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x22, 0x48, 0x0a, 0x10, 0x4c,
	0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x45, 0x58, 0x50, 0x45, 0x52, 0x49, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x55, 0x4e, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x44, 0x41, 0x54, 0x41, 0x53, 0x45, 0x54, 0x5f, 0x56, 0x45, 0x52, 0x53,
	0x49, 0x4f, 0x4e, 0x10, 0x02, 0x22, 0x89, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x47, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x21, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x49, 0x0a, 0x11, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x9e, 0x01, 0x0a,
	0x0a, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x4c, 0x69,
	0x6e, 0x65, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x36, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x1a, 0x22, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa1, 0x01,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x12,
	0x34, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x1a, 0x22, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x8e, 0x01, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x47, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x49, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65,
	0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x07, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0xd5, 0x01, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x41,
	0x6c, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12,
	0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x86, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12,
	0x3d, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x32, 0xb2,
	0x05, 0x0a, 0x0e, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x74, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x12,
	0x1c, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x1a, 0x25, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76,
	0x31, 0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x64, 0x64, 0x4c, 0x69, 0x6e,
	0x65, 0x61, 0x67, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x80, 0x01, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x1a, 0x28, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76,
	0x31, 0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x80, 0x01, 0x0a, 0x0d, 0x66,
	0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x1a, 0x28, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22,
	0x19, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x2f, 0x66, 0x69, 0x6e,
	0x64, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x84, 0x01,
	0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73,
	0x12, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x1a, 0x29, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x61,
	0x67, 0x65, 0x2f, 0x66, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x73, 0x3a, 0x01, 0x2a, 0x12, 0x9c, 0x01, 0x0a, 0x14, 0x66, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x26, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x73, 0x1a, 0x2f, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20,
	0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x67, 0x65, 0x2f, 0x66, 0x69, 0x6e, 0x64,
	0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73,
	0x3a, 0x01, 0x2a, 0x42, 0x42, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x56, 0x65, 0x72, 0x74, 0x61, 0x41, 0x49, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_modeldb_Lineage_proto_rawDescOnce sync.Once
	file_modeldb_Lineage_proto_rawDescData = file_modeldb_Lineage_proto_rawDesc
)

func file_modeldb_Lineage_proto_rawDescGZIP() []byte {
	file_modeldb_Lineage_proto_rawDescOnce.Do(func() {
		file_modeldb_Lineage_proto_rawDescData = protoimpl.X.CompressGZIP(file_modeldb_Lineage_proto_rawDescData)
	})
	return file_modeldb_Lineage_proto_rawDescData
}

var file_modeldb_Lineage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_modeldb_Lineage_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_modeldb_Lineage_proto_goTypes = []interface{}{
	(LineageEntryEnum_LineageEntryType)(0), // 0: ai.verta.modeldb.LineageEntryEnum.LineageEntryType
	(*LineageEntryEnum)(nil),               // 1: ai.verta.modeldb.LineageEntryEnum
	(*LineageEntry)(nil),                   // 2: ai.verta.modeldb.LineageEntry
	(*LineageEntryBatch)(nil),              // 3: ai.verta.modeldb.LineageEntryBatch
	(*AddLineage)(nil),                     // 4: ai.verta.modeldb.AddLineage
	(*DeleteLineage)(nil),                  // 5: ai.verta.modeldb.DeleteLineage
	(*FindAllInputs)(nil),                  // 6: ai.verta.modeldb.FindAllInputs
	(*FindAllOutputs)(nil),                 // 7: ai.verta.modeldb.FindAllOutputs
	(*FindAllInputsOutputs)(nil),           // 8: ai.verta.modeldb.FindAllInputsOutputs
	(*AddLineage_Response)(nil),            // 9: ai.verta.modeldb.AddLineage.Response
	(*DeleteLineage_Response)(nil),         // 10: ai.verta.modeldb.DeleteLineage.Response
	(*FindAllInputs_Response)(nil),         // 11: ai.verta.modeldb.FindAllInputs.Response
	(*FindAllOutputs_Response)(nil),        // 12: ai.verta.modeldb.FindAllOutputs.Response
	(*FindAllInputsOutputs_Response)(nil),  // 13: ai.verta.modeldb.FindAllInputsOutputs.Response
}
var file_modeldb_Lineage_proto_depIdxs = []int32{
	0,  // 0: ai.verta.modeldb.LineageEntry.type:type_name -> ai.verta.modeldb.LineageEntryEnum.LineageEntryType
	2,  // 1: ai.verta.modeldb.LineageEntryBatch.items:type_name -> ai.verta.modeldb.LineageEntry
	2,  // 2: ai.verta.modeldb.AddLineage.input:type_name -> ai.verta.modeldb.LineageEntry
	2,  // 3: ai.verta.modeldb.AddLineage.output:type_name -> ai.verta.modeldb.LineageEntry
	2,  // 4: ai.verta.modeldb.DeleteLineage.input:type_name -> ai.verta.modeldb.LineageEntry
	2,  // 5: ai.verta.modeldb.DeleteLineage.output:type_name -> ai.verta.modeldb.LineageEntry
	2,  // 6: ai.verta.modeldb.FindAllInputs.items:type_name -> ai.verta.modeldb.LineageEntry
	2,  // 7: ai.verta.modeldb.FindAllOutputs.items:type_name -> ai.verta.modeldb.LineageEntry
	2,  // 8: ai.verta.modeldb.FindAllInputsOutputs.items:type_name -> ai.verta.modeldb.LineageEntry
	3,  // 9: ai.verta.modeldb.FindAllInputs.Response.inputs:type_name -> ai.verta.modeldb.LineageEntryBatch
	3,  // 10: ai.verta.modeldb.FindAllOutputs.Response.outputs:type_name -> ai.verta.modeldb.LineageEntryBatch
	3,  // 11: ai.verta.modeldb.FindAllInputsOutputs.Response.inputs:type_name -> ai.verta.modeldb.LineageEntryBatch
	3,  // 12: ai.verta.modeldb.FindAllInputsOutputs.Response.outputs:type_name -> ai.verta.modeldb.LineageEntryBatch
	4,  // 13: ai.verta.modeldb.LineageService.addLineage:input_type -> ai.verta.modeldb.AddLineage
	5,  // 14: ai.verta.modeldb.LineageService.deleteLineage:input_type -> ai.verta.modeldb.DeleteLineage
	6,  // 15: ai.verta.modeldb.LineageService.findAllInputs:input_type -> ai.verta.modeldb.FindAllInputs
	7,  // 16: ai.verta.modeldb.LineageService.findAllOutputs:input_type -> ai.verta.modeldb.FindAllOutputs
	8,  // 17: ai.verta.modeldb.LineageService.findAllInputsOutputs:input_type -> ai.verta.modeldb.FindAllInputsOutputs
	9,  // 18: ai.verta.modeldb.LineageService.addLineage:output_type -> ai.verta.modeldb.AddLineage.Response
	10, // 19: ai.verta.modeldb.LineageService.deleteLineage:output_type -> ai.verta.modeldb.DeleteLineage.Response
	11, // 20: ai.verta.modeldb.LineageService.findAllInputs:output_type -> ai.verta.modeldb.FindAllInputs.Response
	12, // 21: ai.verta.modeldb.LineageService.findAllOutputs:output_type -> ai.verta.modeldb.FindAllOutputs.Response
	13, // 22: ai.verta.modeldb.LineageService.findAllInputsOutputs:output_type -> ai.verta.modeldb.FindAllInputsOutputs.Response
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_modeldb_Lineage_proto_init() }
func file_modeldb_Lineage_proto_init() {
	if File_modeldb_Lineage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_modeldb_Lineage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineageEntryEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_Lineage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineageEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_Lineage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineageEntryBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_Lineage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLineage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_Lineage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLineage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_Lineage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllInputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_Lineage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllOutputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_Lineage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllInputsOutputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_Lineage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLineage_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_Lineage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLineage_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_Lineage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllInputs_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_Lineage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllOutputs_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_Lineage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllInputsOutputs_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_modeldb_Lineage_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*LineageEntry_ExternalId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_modeldb_Lineage_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_modeldb_Lineage_proto_goTypes,
		DependencyIndexes: file_modeldb_Lineage_proto_depIdxs,
		EnumInfos:         file_modeldb_Lineage_proto_enumTypes,
		MessageInfos:      file_modeldb_Lineage_proto_msgTypes,
	}.Build()
	File_modeldb_Lineage_proto = out.File
	file_modeldb_Lineage_proto_rawDesc = nil
	file_modeldb_Lineage_proto_goTypes = nil
	file_modeldb_Lineage_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LineageServiceClient is the client API for LineageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LineageServiceClient interface {
	AddLineage(ctx context.Context, in *AddLineage, opts ...grpc.CallOption) (*AddLineage_Response, error)
	DeleteLineage(ctx context.Context, in *DeleteLineage, opts ...grpc.CallOption) (*DeleteLineage_Response, error)
	FindAllInputs(ctx context.Context, in *FindAllInputs, opts ...grpc.CallOption) (*FindAllInputs_Response, error)
	FindAllOutputs(ctx context.Context, in *FindAllOutputs, opts ...grpc.CallOption) (*FindAllOutputs_Response, error)
	FindAllInputsOutputs(ctx context.Context, in *FindAllInputsOutputs, opts ...grpc.CallOption) (*FindAllInputsOutputs_Response, error)
}

type lineageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLineageServiceClient(cc grpc.ClientConnInterface) LineageServiceClient {
	return &lineageServiceClient{cc}
}

func (c *lineageServiceClient) AddLineage(ctx context.Context, in *AddLineage, opts ...grpc.CallOption) (*AddLineage_Response, error) {
	out := new(AddLineage_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.LineageService/addLineage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lineageServiceClient) DeleteLineage(ctx context.Context, in *DeleteLineage, opts ...grpc.CallOption) (*DeleteLineage_Response, error) {
	out := new(DeleteLineage_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.LineageService/deleteLineage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lineageServiceClient) FindAllInputs(ctx context.Context, in *FindAllInputs, opts ...grpc.CallOption) (*FindAllInputs_Response, error) {
	out := new(FindAllInputs_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.LineageService/findAllInputs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lineageServiceClient) FindAllOutputs(ctx context.Context, in *FindAllOutputs, opts ...grpc.CallOption) (*FindAllOutputs_Response, error) {
	out := new(FindAllOutputs_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.LineageService/findAllOutputs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lineageServiceClient) FindAllInputsOutputs(ctx context.Context, in *FindAllInputsOutputs, opts ...grpc.CallOption) (*FindAllInputsOutputs_Response, error) {
	out := new(FindAllInputsOutputs_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.LineageService/findAllInputsOutputs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LineageServiceServer is the server API for LineageService service.
type LineageServiceServer interface {
	AddLineage(context.Context, *AddLineage) (*AddLineage_Response, error)
	DeleteLineage(context.Context, *DeleteLineage) (*DeleteLineage_Response, error)
	FindAllInputs(context.Context, *FindAllInputs) (*FindAllInputs_Response, error)
	FindAllOutputs(context.Context, *FindAllOutputs) (*FindAllOutputs_Response, error)
	FindAllInputsOutputs(context.Context, *FindAllInputsOutputs) (*FindAllInputsOutputs_Response, error)
}

// UnimplementedLineageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLineageServiceServer struct {
}

func (*UnimplementedLineageServiceServer) AddLineage(context.Context, *AddLineage) (*AddLineage_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddLineage not implemented")
}
func (*UnimplementedLineageServiceServer) DeleteLineage(context.Context, *DeleteLineage) (*DeleteLineage_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLineage not implemented")
}
func (*UnimplementedLineageServiceServer) FindAllInputs(context.Context, *FindAllInputs) (*FindAllInputs_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAllInputs not implemented")
}
func (*UnimplementedLineageServiceServer) FindAllOutputs(context.Context, *FindAllOutputs) (*FindAllOutputs_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAllOutputs not implemented")
}
func (*UnimplementedLineageServiceServer) FindAllInputsOutputs(context.Context, *FindAllInputsOutputs) (*FindAllInputsOutputs_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAllInputsOutputs not implemented")
}

func RegisterLineageServiceServer(s *grpc.Server, srv LineageServiceServer) {
	s.RegisterService(&_LineageService_serviceDesc, srv)
}

func _LineageService_AddLineage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddLineage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LineageServiceServer).AddLineage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.LineageService/AddLineage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LineageServiceServer).AddLineage(ctx, req.(*AddLineage))
	}
	return interceptor(ctx, in, info, handler)
}

func _LineageService_DeleteLineage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLineage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LineageServiceServer).DeleteLineage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.LineageService/DeleteLineage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LineageServiceServer).DeleteLineage(ctx, req.(*DeleteLineage))
	}
	return interceptor(ctx, in, info, handler)
}

func _LineageService_FindAllInputs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindAllInputs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LineageServiceServer).FindAllInputs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.LineageService/FindAllInputs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LineageServiceServer).FindAllInputs(ctx, req.(*FindAllInputs))
	}
	return interceptor(ctx, in, info, handler)
}

func _LineageService_FindAllOutputs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindAllOutputs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LineageServiceServer).FindAllOutputs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.LineageService/FindAllOutputs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LineageServiceServer).FindAllOutputs(ctx, req.(*FindAllOutputs))
	}
	return interceptor(ctx, in, info, handler)
}

func _LineageService_FindAllInputsOutputs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindAllInputsOutputs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LineageServiceServer).FindAllInputsOutputs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.LineageService/FindAllInputsOutputs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LineageServiceServer).FindAllInputsOutputs(ctx, req.(*FindAllInputsOutputs))
	}
	return interceptor(ctx, in, info, handler)
}

var _LineageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ai.verta.modeldb.LineageService",
	HandlerType: (*LineageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addLineage",
			Handler:    _LineageService_AddLineage_Handler,
		},
		{
			MethodName: "deleteLineage",
			Handler:    _LineageService_DeleteLineage_Handler,
		},
		{
			MethodName: "findAllInputs",
			Handler:    _LineageService_FindAllInputs_Handler,
		},
		{
			MethodName: "findAllOutputs",
			Handler:    _LineageService_FindAllOutputs_Handler,
		},
		{
			MethodName: "findAllInputsOutputs",
			Handler:    _LineageService_FindAllInputsOutputs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "modeldb/Lineage.proto",
}
