// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.2
// source: modeldb/ProjectService.proto

package modeldb

import (
	context "context"
	common "github.com/VertaAI/modeldb/protos/gen/go/protos/public/common"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ProjectVisibility int32

const (
	ProjectVisibility_PRIVATE           ProjectVisibility = 0
	ProjectVisibility_PUBLIC            ProjectVisibility = 1
	ProjectVisibility_ORG_SCOPED_PUBLIC ProjectVisibility = 2
)

// Enum value maps for ProjectVisibility.
var (
	ProjectVisibility_name = map[int32]string{
		0: "PRIVATE",
		1: "PUBLIC",
		2: "ORG_SCOPED_PUBLIC",
	}
	ProjectVisibility_value = map[string]int32{
		"PRIVATE":           0,
		"PUBLIC":            1,
		"ORG_SCOPED_PUBLIC": 2,
	}
)

func (x ProjectVisibility) Enum() *ProjectVisibility {
	p := new(ProjectVisibility)
	*p = x
	return p
}

func (x ProjectVisibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProjectVisibility) Descriptor() protoreflect.EnumDescriptor {
	return file_modeldb_ProjectService_proto_enumTypes[0].Descriptor()
}

func (ProjectVisibility) Type() protoreflect.EnumType {
	return &file_modeldb_ProjectService_proto_enumTypes[0]
}

func (x ProjectVisibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProjectVisibility.Descriptor instead.
func (ProjectVisibility) EnumDescriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{0}
}

type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                string                                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description         string                                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DateCreated         uint64                                 `protobuf:"varint,4,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	DateUpdated         uint64                                 `protobuf:"varint,5,opt,name=date_updated,json=dateUpdated,proto3" json:"date_updated,omitempty"`
	ShortName           string                                 `protobuf:"bytes,6,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	ReadmeText          string                                 `protobuf:"bytes,7,opt,name=readme_text,json=readmeText,proto3" json:"readme_text,omitempty"`
	ProjectVisibility   ProjectVisibility                      `protobuf:"varint,8,opt,name=project_visibility,json=projectVisibility,proto3,enum=ai.verta.modeldb.ProjectVisibility" json:"project_visibility,omitempty"`
	WorkspaceId         string                                 `protobuf:"bytes,9,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	WorkspaceType       common.WorkspaceTypeEnum_WorkspaceType `protobuf:"varint,10,opt,name=workspace_type,json=workspaceType,proto3,enum=ai.verta.common.WorkspaceTypeEnum_WorkspaceType" json:"workspace_type,omitempty"`
	Attributes          []*common.KeyValue                     `protobuf:"bytes,20,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Tags                []string                               `protobuf:"bytes,21,rep,name=tags,proto3" json:"tags,omitempty"`
	Owner               string                                 `protobuf:"bytes,22,opt,name=owner,proto3" json:"owner,omitempty"`
	CodeVersionSnapshot *CodeVersion                           `protobuf:"bytes,23,opt,name=code_version_snapshot,json=codeVersionSnapshot,proto3" json:"code_version_snapshot,omitempty"`
	Artifacts           []*common.Artifact                     `protobuf:"bytes,24,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{0}
}

func (x *Project) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Project) GetDateCreated() uint64 {
	if x != nil {
		return x.DateCreated
	}
	return 0
}

func (x *Project) GetDateUpdated() uint64 {
	if x != nil {
		return x.DateUpdated
	}
	return 0
}

func (x *Project) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Project) GetReadmeText() string {
	if x != nil {
		return x.ReadmeText
	}
	return ""
}

func (x *Project) GetProjectVisibility() ProjectVisibility {
	if x != nil {
		return x.ProjectVisibility
	}
	return ProjectVisibility_PRIVATE
}

func (x *Project) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *Project) GetWorkspaceType() common.WorkspaceTypeEnum_WorkspaceType {
	if x != nil {
		return x.WorkspaceType
	}
	return common.WorkspaceTypeEnum_UNKNOWN
}

func (x *Project) GetAttributes() []*common.KeyValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Project) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Project) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Project) GetCodeVersionSnapshot() *CodeVersion {
	if x != nil {
		return x.CodeVersionSnapshot
	}
	return nil
}

func (x *Project) GetArtifacts() []*common.Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

type CreateProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description       string             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Attributes        []*common.KeyValue `protobuf:"bytes,3,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Tags              []string           `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	ReadmeText        string             `protobuf:"bytes,5,opt,name=readme_text,json=readmeText,proto3" json:"readme_text,omitempty"`
	ProjectVisibility ProjectVisibility  `protobuf:"varint,6,opt,name=project_visibility,json=projectVisibility,proto3,enum=ai.verta.modeldb.ProjectVisibility" json:"project_visibility,omitempty"`
	Artifacts         []*common.Artifact `protobuf:"bytes,7,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	WorkspaceName     string             `protobuf:"bytes,8,opt,name=workspace_name,json=workspaceName,proto3" json:"workspace_name,omitempty"`
	DateCreated       int64              `protobuf:"varint,9,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
}

func (x *CreateProject) Reset() {
	*x = CreateProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProject) ProtoMessage() {}

func (x *CreateProject) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProject.ProtoReflect.Descriptor instead.
func (*CreateProject) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{1}
}

func (x *CreateProject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProject) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateProject) GetAttributes() []*common.KeyValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *CreateProject) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateProject) GetReadmeText() string {
	if x != nil {
		return x.ReadmeText
	}
	return ""
}

func (x *CreateProject) GetProjectVisibility() ProjectVisibility {
	if x != nil {
		return x.ProjectVisibility
	}
	return ProjectVisibility_PRIVATE
}

func (x *CreateProject) GetArtifacts() []*common.Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *CreateProject) GetWorkspaceName() string {
	if x != nil {
		return x.WorkspaceName
	}
	return ""
}

func (x *CreateProject) GetDateCreated() int64 {
	if x != nil {
		return x.DateCreated
	}
	return 0
}

type DeleteProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteProject) Reset() {
	*x = DeleteProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProject) ProtoMessage() {}

func (x *DeleteProject) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProject.ProtoReflect.Descriptor instead.
func (*DeleteProject) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteProject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateProjectName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateProjectName) Reset() {
	*x = UpdateProjectName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectName) ProtoMessage() {}

func (x *UpdateProjectName) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectName.ProtoReflect.Descriptor instead.
func (*UpdateProjectName) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateProjectName) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateProjectName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateProjectDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateProjectDescription) Reset() {
	*x = UpdateProjectDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectDescription) ProtoMessage() {}

func (x *UpdateProjectDescription) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectDescription.ProtoReflect.Descriptor instead.
func (*UpdateProjectDescription) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateProjectDescription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateProjectDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AddProjectTags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tags []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *AddProjectTags) Reset() {
	*x = AddProjectTags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectTags) ProtoMessage() {}

func (x *AddProjectTags) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectTags.ProtoReflect.Descriptor instead.
func (*AddProjectTags) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{5}
}

func (x *AddProjectTags) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddProjectTags) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type DeleteProjectTags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tags      []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	DeleteAll bool     `protobuf:"varint,3,opt,name=delete_all,json=deleteAll,proto3" json:"delete_all,omitempty"`
}

func (x *DeleteProjectTags) Reset() {
	*x = DeleteProjectTags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectTags) ProtoMessage() {}

func (x *DeleteProjectTags) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectTags.ProtoReflect.Descriptor instead.
func (*DeleteProjectTags) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteProjectTags) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteProjectTags) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *DeleteProjectTags) GetDeleteAll() bool {
	if x != nil {
		return x.DeleteAll
	}
	return false
}

type AddProjectTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tag string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *AddProjectTag) Reset() {
	*x = AddProjectTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectTag) ProtoMessage() {}

func (x *AddProjectTag) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectTag.ProtoReflect.Descriptor instead.
func (*AddProjectTag) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{7}
}

func (x *AddProjectTag) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddProjectTag) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type DeleteProjectTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tag string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *DeleteProjectTag) Reset() {
	*x = DeleteProjectTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectTag) ProtoMessage() {}

func (x *DeleteProjectTag) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectTag.ProtoReflect.Descriptor instead.
func (*DeleteProjectTag) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteProjectTag) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteProjectTag) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type GetProjectAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProjectAttributes) Reset() {
	*x = GetProjectAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectAttributes) ProtoMessage() {}

func (x *GetProjectAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectAttributes.ProtoReflect.Descriptor instead.
func (*GetProjectAttributes) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{9}
}

func (x *GetProjectAttributes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddProjectAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Attributes []*common.KeyValue `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *AddProjectAttributes) Reset() {
	*x = AddProjectAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectAttributes) ProtoMessage() {}

func (x *AddProjectAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectAttributes.ProtoReflect.Descriptor instead.
func (*AddProjectAttributes) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{10}
}

func (x *AddProjectAttributes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddProjectAttributes) GetAttributes() []*common.KeyValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type UpdateProjectAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Attribute *common.KeyValue `protobuf:"bytes,2,opt,name=attribute,proto3" json:"attribute,omitempty"`
}

func (x *UpdateProjectAttributes) Reset() {
	*x = UpdateProjectAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectAttributes) ProtoMessage() {}

func (x *UpdateProjectAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectAttributes.ProtoReflect.Descriptor instead.
func (*UpdateProjectAttributes) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateProjectAttributes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateProjectAttributes) GetAttribute() *common.KeyValue {
	if x != nil {
		return x.Attribute
	}
	return nil
}

type DeleteProjectAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AttributeKeys []string `protobuf:"bytes,2,rep,name=attribute_keys,json=attributeKeys,proto3" json:"attribute_keys,omitempty"`
	DeleteAll     bool     `protobuf:"varint,3,opt,name=delete_all,json=deleteAll,proto3" json:"delete_all,omitempty"`
}

func (x *DeleteProjectAttributes) Reset() {
	*x = DeleteProjectAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectAttributes) ProtoMessage() {}

func (x *DeleteProjectAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectAttributes.ProtoReflect.Descriptor instead.
func (*DeleteProjectAttributes) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteProjectAttributes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteProjectAttributes) GetAttributeKeys() []string {
	if x != nil {
		return x.AttributeKeys
	}
	return nil
}

func (x *DeleteProjectAttributes) GetDeleteAll() bool {
	if x != nil {
		return x.DeleteAll
	}
	return false
}

// code version
type LogProjectCodeVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CodeVersion *CodeVersion `protobuf:"bytes,2,opt,name=code_version,json=codeVersion,proto3" json:"code_version,omitempty"`
}

func (x *LogProjectCodeVersion) Reset() {
	*x = LogProjectCodeVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogProjectCodeVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogProjectCodeVersion) ProtoMessage() {}

func (x *LogProjectCodeVersion) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogProjectCodeVersion.ProtoReflect.Descriptor instead.
func (*LogProjectCodeVersion) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{13}
}

func (x *LogProjectCodeVersion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LogProjectCodeVersion) GetCodeVersion() *CodeVersion {
	if x != nil {
		return x.CodeVersion
	}
	return nil
}

type GetProjectCodeVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProjectCodeVersion) Reset() {
	*x = GetProjectCodeVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectCodeVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectCodeVersion) ProtoMessage() {}

func (x *GetProjectCodeVersion) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectCodeVersion.ProtoReflect.Descriptor instead.
func (*GetProjectCodeVersion) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{14}
}

func (x *GetProjectCodeVersion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber    int32  `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageLimit     int32  `protobuf:"varint,2,opt,name=page_limit,json=pageLimit,proto3" json:"page_limit,omitempty"`
	Ascending     bool   `protobuf:"varint,3,opt,name=ascending,proto3" json:"ascending,omitempty"`
	SortKey       string `protobuf:"bytes,4,opt,name=sort_key,json=sortKey,proto3" json:"sort_key,omitempty"`
	WorkspaceName string `protobuf:"bytes,5,opt,name=workspace_name,json=workspaceName,proto3" json:"workspace_name,omitempty"`
}

func (x *GetProjects) Reset() {
	*x = GetProjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjects) ProtoMessage() {}

func (x *GetProjects) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjects.ProtoReflect.Descriptor instead.
func (*GetProjects) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{15}
}

func (x *GetProjects) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetProjects) GetPageLimit() int32 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

func (x *GetProjects) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

func (x *GetProjects) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *GetProjects) GetWorkspaceName() string {
	if x != nil {
		return x.WorkspaceName
	}
	return ""
}

type GetPublicProjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WorkspaceName string `protobuf:"bytes,2,opt,name=workspace_name,json=workspaceName,proto3" json:"workspace_name,omitempty"`
}

func (x *GetPublicProjects) Reset() {
	*x = GetPublicProjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicProjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicProjects) ProtoMessage() {}

func (x *GetPublicProjects) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicProjects.ProtoReflect.Descriptor instead.
func (*GetPublicProjects) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{16}
}

func (x *GetPublicProjects) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetPublicProjects) GetWorkspaceName() string {
	if x != nil {
		return x.WorkspaceName
	}
	return ""
}

type GetProjectById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProjectById) Reset() {
	*x = GetProjectById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectById) ProtoMessage() {}

func (x *GetProjectById) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectById.ProtoReflect.Descriptor instead.
func (*GetProjectById) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{17}
}

func (x *GetProjectById) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProjectByName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	WorkspaceName string `protobuf:"bytes,2,opt,name=workspace_name,json=workspaceName,proto3" json:"workspace_name,omitempty"`
}

func (x *GetProjectByName) Reset() {
	*x = GetProjectByName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectByName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectByName) ProtoMessage() {}

func (x *GetProjectByName) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectByName.ProtoReflect.Descriptor instead.
func (*GetProjectByName) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{18}
}

func (x *GetProjectByName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetProjectByName) GetWorkspaceName() string {
	if x != nil {
		return x.WorkspaceName
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{19}
}

type VerifyConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *VerifyConnectionResponse) Reset() {
	*x = VerifyConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyConnectionResponse) ProtoMessage() {}

func (x *VerifyConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyConnectionResponse.ProtoReflect.Descriptor instead.
func (*VerifyConnectionResponse) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{20}
}

func (x *VerifyConnectionResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type DeepCopyProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeepCopyProject) Reset() {
	*x = DeepCopyProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeepCopyProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepCopyProject) ProtoMessage() {}

func (x *DeepCopyProject) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepCopyProject.ProtoReflect.Descriptor instead.
func (*DeepCopyProject) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{21}
}

func (x *DeepCopyProject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MetricsSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	MinValue float64 `protobuf:"fixed64,2,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	MaxValue float64 `protobuf:"fixed64,3,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
}

func (x *MetricsSummary) Reset() {
	*x = MetricsSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsSummary) ProtoMessage() {}

func (x *MetricsSummary) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsSummary.ProtoReflect.Descriptor instead.
func (*MetricsSummary) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{22}
}

func (x *MetricsSummary) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MetricsSummary) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *MetricsSummary) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

type LastModifiedExperimentRunSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LastUpdatedTime uint64 `protobuf:"varint,2,opt,name=last_updated_time,json=lastUpdatedTime,proto3" json:"last_updated_time,omitempty"`
}

func (x *LastModifiedExperimentRunSummary) Reset() {
	*x = LastModifiedExperimentRunSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LastModifiedExperimentRunSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastModifiedExperimentRunSummary) ProtoMessage() {}

func (x *LastModifiedExperimentRunSummary) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastModifiedExperimentRunSummary.ProtoReflect.Descriptor instead.
func (*LastModifiedExperimentRunSummary) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{23}
}

func (x *LastModifiedExperimentRunSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LastModifiedExperimentRunSummary) GetLastUpdatedTime() uint64 {
	if x != nil {
		return x.LastUpdatedTime
	}
	return 0
}

type GetSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId string `protobuf:"bytes,1,opt,name=entityId,proto3" json:"entityId,omitempty"`
}

func (x *GetSummary) Reset() {
	*x = GetSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummary) ProtoMessage() {}

func (x *GetSummary) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummary.ProtoReflect.Descriptor instead.
func (*GetSummary) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{24}
}

func (x *GetSummary) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

type SetProjectReadme struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ReadmeText string `protobuf:"bytes,2,opt,name=readme_text,json=readmeText,proto3" json:"readme_text,omitempty"`
}

func (x *SetProjectReadme) Reset() {
	*x = SetProjectReadme{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProjectReadme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProjectReadme) ProtoMessage() {}

func (x *SetProjectReadme) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProjectReadme.ProtoReflect.Descriptor instead.
func (*SetProjectReadme) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{25}
}

func (x *SetProjectReadme) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetProjectReadme) GetReadmeText() string {
	if x != nil {
		return x.ReadmeText
	}
	return ""
}

type GetProjectReadme struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProjectReadme) Reset() {
	*x = GetProjectReadme{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectReadme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectReadme) ProtoMessage() {}

func (x *GetProjectReadme) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectReadme.ProtoReflect.Descriptor instead.
func (*GetProjectReadme) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{26}
}

func (x *GetProjectReadme) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SetProjectVisibilty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectVisibility ProjectVisibility `protobuf:"varint,2,opt,name=project_visibility,json=projectVisibility,proto3,enum=ai.verta.modeldb.ProjectVisibility" json:"project_visibility,omitempty"`
}

func (x *SetProjectVisibilty) Reset() {
	*x = SetProjectVisibilty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProjectVisibilty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProjectVisibilty) ProtoMessage() {}

func (x *SetProjectVisibilty) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProjectVisibilty.ProtoReflect.Descriptor instead.
func (*SetProjectVisibilty) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{27}
}

func (x *SetProjectVisibilty) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetProjectVisibilty) GetProjectVisibility() ProjectVisibility {
	if x != nil {
		return x.ProjectVisibility
	}
	return ProjectVisibility_PRIVATE
}

type SetProjectShortName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShortName string `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
}

func (x *SetProjectShortName) Reset() {
	*x = SetProjectShortName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProjectShortName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProjectShortName) ProtoMessage() {}

func (x *SetProjectShortName) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProjectShortName.ProtoReflect.Descriptor instead.
func (*SetProjectShortName) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{28}
}

func (x *SetProjectShortName) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetProjectShortName) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

type GetProjectShortName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetProjectShortName) Reset() {
	*x = GetProjectShortName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectShortName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectShortName) ProtoMessage() {}

func (x *GetProjectShortName) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectShortName.ProtoReflect.Descriptor instead.
func (*GetProjectShortName) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{29}
}

func (x *GetProjectShortName) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FindProjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectIds    []string                `protobuf:"bytes,1,rep,name=project_ids,json=projectIds,proto3" json:"project_ids,omitempty"`
	Predicates    []*common.KeyValueQuery `protobuf:"bytes,2,rep,name=predicates,proto3" json:"predicates,omitempty"`
	IdsOnly       bool                    `protobuf:"varint,3,opt,name=ids_only,json=idsOnly,proto3" json:"ids_only,omitempty"` // whether to return full experiment runs or ids only
	WorkspaceName string                  `protobuf:"bytes,8,opt,name=workspace_name,json=workspaceName,proto3" json:"workspace_name,omitempty"`
	//For pagination
	PageNumber int32  `protobuf:"varint,4,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageLimit  int32  `protobuf:"varint,5,opt,name=page_limit,json=pageLimit,proto3" json:"page_limit,omitempty"`
	Ascending  bool   `protobuf:"varint,6,opt,name=ascending,proto3" json:"ascending,omitempty"`
	SortKey    string `protobuf:"bytes,7,opt,name=sort_key,json=sortKey,proto3" json:"sort_key,omitempty"`
}

func (x *FindProjects) Reset() {
	*x = FindProjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindProjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindProjects) ProtoMessage() {}

func (x *FindProjects) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindProjects.ProtoReflect.Descriptor instead.
func (*FindProjects) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{30}
}

func (x *FindProjects) GetProjectIds() []string {
	if x != nil {
		return x.ProjectIds
	}
	return nil
}

func (x *FindProjects) GetPredicates() []*common.KeyValueQuery {
	if x != nil {
		return x.Predicates
	}
	return nil
}

func (x *FindProjects) GetIdsOnly() bool {
	if x != nil {
		return x.IdsOnly
	}
	return false
}

func (x *FindProjects) GetWorkspaceName() string {
	if x != nil {
		return x.WorkspaceName
	}
	return ""
}

func (x *FindProjects) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *FindProjects) GetPageLimit() int32 {
	if x != nil {
		return x.PageLimit
	}
	return 0
}

func (x *FindProjects) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

func (x *FindProjects) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

// artifacts
type LogProjectArtifacts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Artifacts []*common.Artifact `protobuf:"bytes,2,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
}

func (x *LogProjectArtifacts) Reset() {
	*x = LogProjectArtifacts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogProjectArtifacts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogProjectArtifacts) ProtoMessage() {}

func (x *LogProjectArtifacts) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogProjectArtifacts.ProtoReflect.Descriptor instead.
func (*LogProjectArtifacts) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{31}
}

func (x *LogProjectArtifacts) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LogProjectArtifacts) GetArtifacts() []*common.Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

type DeleteProjectArtifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DeleteProjectArtifact) Reset() {
	*x = DeleteProjectArtifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectArtifact) ProtoMessage() {}

func (x *DeleteProjectArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectArtifact.ProtoReflect.Descriptor instead.
func (*DeleteProjectArtifact) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteProjectArtifact) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteProjectArtifact) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DeleteProjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteProjects) Reset() {
	*x = DeleteProjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjects) ProtoMessage() {}

func (x *DeleteProjects) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjects.ProtoReflect.Descriptor instead.
func (*DeleteProjects) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteProjects) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type SetProjectWorkspace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceName string `protobuf:"bytes,2,opt,name=workspace_name,json=workspaceName,proto3" json:"workspace_name,omitempty"`
}

func (x *SetProjectWorkspace) Reset() {
	*x = SetProjectWorkspace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProjectWorkspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProjectWorkspace) ProtoMessage() {}

func (x *SetProjectWorkspace) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProjectWorkspace.ProtoReflect.Descriptor instead.
func (*SetProjectWorkspace) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{34}
}

func (x *SetProjectWorkspace) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetProjectWorkspace) GetWorkspaceName() string {
	if x != nil {
		return x.WorkspaceName
	}
	return ""
}

type CreateProject_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *CreateProject_Response) Reset() {
	*x = CreateProject_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProject_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProject_Response) ProtoMessage() {}

func (x *CreateProject_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProject_Response.ProtoReflect.Descriptor instead.
func (*CreateProject_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CreateProject_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type DeleteProject_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteProject_Response) Reset() {
	*x = DeleteProject_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProject_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProject_Response) ProtoMessage() {}

func (x *DeleteProject_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProject_Response.ProtoReflect.Descriptor instead.
func (*DeleteProject_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{2, 0}
}

func (x *DeleteProject_Response) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UpdateProjectName_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *UpdateProjectName_Response) Reset() {
	*x = UpdateProjectName_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectName_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectName_Response) ProtoMessage() {}

func (x *UpdateProjectName_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectName_Response.ProtoReflect.Descriptor instead.
func (*UpdateProjectName_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{3, 0}
}

func (x *UpdateProjectName_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type UpdateProjectDescription_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *UpdateProjectDescription_Response) Reset() {
	*x = UpdateProjectDescription_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectDescription_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectDescription_Response) ProtoMessage() {}

func (x *UpdateProjectDescription_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectDescription_Response.ProtoReflect.Descriptor instead.
func (*UpdateProjectDescription_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{4, 0}
}

func (x *UpdateProjectDescription_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type AddProjectTags_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *AddProjectTags_Response) Reset() {
	*x = AddProjectTags_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectTags_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectTags_Response) ProtoMessage() {}

func (x *AddProjectTags_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectTags_Response.ProtoReflect.Descriptor instead.
func (*AddProjectTags_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{5, 0}
}

func (x *AddProjectTags_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type DeleteProjectTags_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *DeleteProjectTags_Response) Reset() {
	*x = DeleteProjectTags_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectTags_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectTags_Response) ProtoMessage() {}

func (x *DeleteProjectTags_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectTags_Response.ProtoReflect.Descriptor instead.
func (*DeleteProjectTags_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{6, 0}
}

func (x *DeleteProjectTags_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type AddProjectTag_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *AddProjectTag_Response) Reset() {
	*x = AddProjectTag_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectTag_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectTag_Response) ProtoMessage() {}

func (x *AddProjectTag_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectTag_Response.ProtoReflect.Descriptor instead.
func (*AddProjectTag_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{7, 0}
}

func (x *AddProjectTag_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type DeleteProjectTag_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *DeleteProjectTag_Response) Reset() {
	*x = DeleteProjectTag_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectTag_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectTag_Response) ProtoMessage() {}

func (x *DeleteProjectTag_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectTag_Response.ProtoReflect.Descriptor instead.
func (*DeleteProjectTag_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{8, 0}
}

func (x *DeleteProjectTag_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type GetProjectAttributes_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes []*common.KeyValue `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *GetProjectAttributes_Response) Reset() {
	*x = GetProjectAttributes_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectAttributes_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectAttributes_Response) ProtoMessage() {}

func (x *GetProjectAttributes_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectAttributes_Response.ProtoReflect.Descriptor instead.
func (*GetProjectAttributes_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{9, 0}
}

func (x *GetProjectAttributes_Response) GetAttributes() []*common.KeyValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type AddProjectAttributes_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *AddProjectAttributes_Response) Reset() {
	*x = AddProjectAttributes_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProjectAttributes_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProjectAttributes_Response) ProtoMessage() {}

func (x *AddProjectAttributes_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProjectAttributes_Response.ProtoReflect.Descriptor instead.
func (*AddProjectAttributes_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{10, 0}
}

func (x *AddProjectAttributes_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type UpdateProjectAttributes_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *UpdateProjectAttributes_Response) Reset() {
	*x = UpdateProjectAttributes_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectAttributes_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectAttributes_Response) ProtoMessage() {}

func (x *UpdateProjectAttributes_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectAttributes_Response.ProtoReflect.Descriptor instead.
func (*UpdateProjectAttributes_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{11, 0}
}

func (x *UpdateProjectAttributes_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type DeleteProjectAttributes_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *DeleteProjectAttributes_Response) Reset() {
	*x = DeleteProjectAttributes_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectAttributes_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectAttributes_Response) ProtoMessage() {}

func (x *DeleteProjectAttributes_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectAttributes_Response.ProtoReflect.Descriptor instead.
func (*DeleteProjectAttributes_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{12, 0}
}

func (x *DeleteProjectAttributes_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type LogProjectCodeVersion_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *LogProjectCodeVersion_Response) Reset() {
	*x = LogProjectCodeVersion_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogProjectCodeVersion_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogProjectCodeVersion_Response) ProtoMessage() {}

func (x *LogProjectCodeVersion_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogProjectCodeVersion_Response.ProtoReflect.Descriptor instead.
func (*LogProjectCodeVersion_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{13, 0}
}

func (x *LogProjectCodeVersion_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type GetProjectCodeVersion_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeVersion *CodeVersion `protobuf:"bytes,1,opt,name=code_version,json=codeVersion,proto3" json:"code_version,omitempty"`
}

func (x *GetProjectCodeVersion_Response) Reset() {
	*x = GetProjectCodeVersion_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectCodeVersion_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectCodeVersion_Response) ProtoMessage() {}

func (x *GetProjectCodeVersion_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectCodeVersion_Response.ProtoReflect.Descriptor instead.
func (*GetProjectCodeVersion_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{14, 0}
}

func (x *GetProjectCodeVersion_Response) GetCodeVersion() *CodeVersion {
	if x != nil {
		return x.CodeVersion
	}
	return nil
}

type GetProjects_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Projects     []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	TotalRecords int64      `protobuf:"varint,2,opt,name=total_records,json=totalRecords,proto3" json:"total_records,omitempty"`
}

func (x *GetProjects_Response) Reset() {
	*x = GetProjects_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjects_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjects_Response) ProtoMessage() {}

func (x *GetProjects_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjects_Response.ProtoReflect.Descriptor instead.
func (*GetProjects_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{15, 0}
}

func (x *GetProjects_Response) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *GetProjects_Response) GetTotalRecords() int64 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

type GetPublicProjects_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Projects []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
}

func (x *GetPublicProjects_Response) Reset() {
	*x = GetPublicProjects_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicProjects_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicProjects_Response) ProtoMessage() {}

func (x *GetPublicProjects_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicProjects_Response.ProtoReflect.Descriptor instead.
func (*GetPublicProjects_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{16, 0}
}

func (x *GetPublicProjects_Response) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

type GetProjectById_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *GetProjectById_Response) Reset() {
	*x = GetProjectById_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectById_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectById_Response) ProtoMessage() {}

func (x *GetProjectById_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectById_Response.ProtoReflect.Descriptor instead.
func (*GetProjectById_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{17, 0}
}

func (x *GetProjectById_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type GetProjectByName_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectByUser  *Project   `protobuf:"bytes,1,opt,name=project_by_user,json=projectByUser,proto3" json:"project_by_user,omitempty"`
	SharedProjects []*Project `protobuf:"bytes,2,rep,name=shared_projects,json=sharedProjects,proto3" json:"shared_projects,omitempty"` // because of collaboration, this might be multiple projects w/same name
}

func (x *GetProjectByName_Response) Reset() {
	*x = GetProjectByName_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectByName_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectByName_Response) ProtoMessage() {}

func (x *GetProjectByName_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectByName_Response.ProtoReflect.Descriptor instead.
func (*GetProjectByName_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{18, 0}
}

func (x *GetProjectByName_Response) GetProjectByUser() *Project {
	if x != nil {
		return x.ProjectByUser
	}
	return nil
}

func (x *GetProjectByName_Response) GetSharedProjects() []*Project {
	if x != nil {
		return x.SharedProjects
	}
	return nil
}

type DeepCopyProject_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *DeepCopyProject_Response) Reset() {
	*x = DeepCopyProject_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeepCopyProject_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepCopyProject_Response) ProtoMessage() {}

func (x *DeepCopyProject_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepCopyProject_Response.ProtoReflect.Descriptor instead.
func (*DeepCopyProject_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{21, 0}
}

func (x *DeepCopyProject_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type GetSummary_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                             string                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LastUpdatedTime                  uint64                            `protobuf:"varint,2,opt,name=last_updated_time,json=lastUpdatedTime,proto3" json:"last_updated_time,omitempty"`
	TotalExperiment                  int64                             `protobuf:"varint,3,opt,name=total_experiment,json=totalExperiment,proto3" json:"total_experiment,omitempty"`
	TotalExperimentRuns              int64                             `protobuf:"varint,4,opt,name=total_experiment_runs,json=totalExperimentRuns,proto3" json:"total_experiment_runs,omitempty"`
	LastModifiedExperimentRunSummary *LastModifiedExperimentRunSummary `protobuf:"bytes,5,opt,name=last_modified_experimentRun_summary,json=lastModifiedExperimentRunSummary,proto3" json:"last_modified_experimentRun_summary,omitempty"`
	Metrics                          []*MetricsSummary                 `protobuf:"bytes,6,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *GetSummary_Response) Reset() {
	*x = GetSummary_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSummary_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummary_Response) ProtoMessage() {}

func (x *GetSummary_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummary_Response.ProtoReflect.Descriptor instead.
func (*GetSummary_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{24, 0}
}

func (x *GetSummary_Response) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSummary_Response) GetLastUpdatedTime() uint64 {
	if x != nil {
		return x.LastUpdatedTime
	}
	return 0
}

func (x *GetSummary_Response) GetTotalExperiment() int64 {
	if x != nil {
		return x.TotalExperiment
	}
	return 0
}

func (x *GetSummary_Response) GetTotalExperimentRuns() int64 {
	if x != nil {
		return x.TotalExperimentRuns
	}
	return 0
}

func (x *GetSummary_Response) GetLastModifiedExperimentRunSummary() *LastModifiedExperimentRunSummary {
	if x != nil {
		return x.LastModifiedExperimentRunSummary
	}
	return nil
}

func (x *GetSummary_Response) GetMetrics() []*MetricsSummary {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type SetProjectReadme_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *SetProjectReadme_Response) Reset() {
	*x = SetProjectReadme_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProjectReadme_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProjectReadme_Response) ProtoMessage() {}

func (x *SetProjectReadme_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProjectReadme_Response.ProtoReflect.Descriptor instead.
func (*SetProjectReadme_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{25, 0}
}

func (x *SetProjectReadme_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type GetProjectReadme_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadmeText string `protobuf:"bytes,1,opt,name=readme_text,json=readmeText,proto3" json:"readme_text,omitempty"`
}

func (x *GetProjectReadme_Response) Reset() {
	*x = GetProjectReadme_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectReadme_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectReadme_Response) ProtoMessage() {}

func (x *GetProjectReadme_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectReadme_Response.ProtoReflect.Descriptor instead.
func (*GetProjectReadme_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{26, 0}
}

func (x *GetProjectReadme_Response) GetReadmeText() string {
	if x != nil {
		return x.ReadmeText
	}
	return ""
}

type SetProjectVisibilty_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *SetProjectVisibilty_Response) Reset() {
	*x = SetProjectVisibilty_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProjectVisibilty_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProjectVisibilty_Response) ProtoMessage() {}

func (x *SetProjectVisibilty_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProjectVisibilty_Response.ProtoReflect.Descriptor instead.
func (*SetProjectVisibilty_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{27, 0}
}

func (x *SetProjectVisibilty_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type SetProjectShortName_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *SetProjectShortName_Response) Reset() {
	*x = SetProjectShortName_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProjectShortName_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProjectShortName_Response) ProtoMessage() {}

func (x *SetProjectShortName_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProjectShortName_Response.ProtoReflect.Descriptor instead.
func (*SetProjectShortName_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{28, 0}
}

func (x *SetProjectShortName_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type GetProjectShortName_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortName string `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
}

func (x *GetProjectShortName_Response) Reset() {
	*x = GetProjectShortName_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectShortName_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectShortName_Response) ProtoMessage() {}

func (x *GetProjectShortName_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectShortName_Response.ProtoReflect.Descriptor instead.
func (*GetProjectShortName_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{29, 0}
}

func (x *GetProjectShortName_Response) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

type FindProjects_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Projects     []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	TotalRecords int64      `protobuf:"varint,2,opt,name=total_records,json=totalRecords,proto3" json:"total_records,omitempty"`
}

func (x *FindProjects_Response) Reset() {
	*x = FindProjects_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindProjects_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindProjects_Response) ProtoMessage() {}

func (x *FindProjects_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindProjects_Response.ProtoReflect.Descriptor instead.
func (*FindProjects_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{30, 0}
}

func (x *FindProjects_Response) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *FindProjects_Response) GetTotalRecords() int64 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

type LogProjectArtifacts_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *LogProjectArtifacts_Response) Reset() {
	*x = LogProjectArtifacts_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogProjectArtifacts_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogProjectArtifacts_Response) ProtoMessage() {}

func (x *LogProjectArtifacts_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogProjectArtifacts_Response.ProtoReflect.Descriptor instead.
func (*LogProjectArtifacts_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{31, 0}
}

func (x *LogProjectArtifacts_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type DeleteProjectArtifact_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *DeleteProjectArtifact_Response) Reset() {
	*x = DeleteProjectArtifact_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectArtifact_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectArtifact_Response) ProtoMessage() {}

func (x *DeleteProjectArtifact_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectArtifact_Response.ProtoReflect.Descriptor instead.
func (*DeleteProjectArtifact_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{32, 0}
}

func (x *DeleteProjectArtifact_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type DeleteProjects_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteProjects_Response) Reset() {
	*x = DeleteProjects_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjects_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjects_Response) ProtoMessage() {}

func (x *DeleteProjects_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjects_Response.ProtoReflect.Descriptor instead.
func (*DeleteProjects_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{33, 0}
}

func (x *DeleteProjects_Response) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SetProjectWorkspace_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *SetProjectWorkspace_Response) Reset() {
	*x = SetProjectWorkspace_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modeldb_ProjectService_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProjectWorkspace_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProjectWorkspace_Response) ProtoMessage() {}

func (x *SetProjectWorkspace_Response) ProtoReflect() protoreflect.Message {
	mi := &file_modeldb_ProjectService_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProjectWorkspace_Response.ProtoReflect.Descriptor instead.
func (*SetProjectWorkspace_Response) Descriptor() ([]byte, []int) {
	return file_modeldb_ProjectService_proto_rawDescGZIP(), []int{34, 0}
}

func (x *SetProjectWorkspace_Response) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

var File_modeldb_ProjectService_proto protoreflect.FileDescriptor

var file_modeldb_ProjectService_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x62, 0x2f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x05, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x52, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x14, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x15, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73,
	0x22, 0xcd, 0x03, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x6d,
	0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x61, 0x64, 0x6d, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x52, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x09,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x1a,
	0x3f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0x43, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x1a, 0x22, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x78, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x3f,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0x8d, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3f,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0x75, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x67,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x3f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x1a,
	0x3f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0x72, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x1a, 0x3f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x22, 0x75, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x1a, 0x3f, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x6d, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x1a, 0x45, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x14, 0x41,
	0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x3f,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0xa3, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x1a, 0x3f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x1a, 0x3f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x15, 0x4c, 0x6f, 0x67,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x3f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x75, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x4c,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x62, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x63, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x95, 0x02, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6f,
	0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x66, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x41, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x61, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a,
	0x3f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0xe1, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x1a, 0x91, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x42, 0x0a, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x32, 0x0a,
	0x18, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x62, 0x0a, 0x0f, 0x44, 0x65, 0x65, 0x70, 0x43, 0x6f, 0x70, 0x79, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x1a, 0x3f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x5c, 0x0a, 0x0e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x62, 0x0a, 0x20, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x94, 0x03, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x1a, 0xe9, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x75, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x73, 0x12, 0x81,
	0x01, 0x0a, 0x23, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x5f, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e,
	0x4c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x20, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x3a, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x84,
	0x01, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61,
	0x64, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x1a, 0x3f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x4f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x2b, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x64,
	0x6d, 0x65, 0x54, 0x65, 0x78, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x74, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x52,
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x1a, 0x3f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x3f, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x50, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x1a, 0x29, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x92, 0x03,
	0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12,
	0x3e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x64, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x64, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x1a, 0x66, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x13, 0x4c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x73, 0x1a, 0x3f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x22, 0x7a, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a,
	0x3f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0x46, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x1a, 0x22, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x3f, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2a, 0x43, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55,
	0x42, 0x4c, 0x49, 0x43, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x52, 0x47, 0x5f, 0x53, 0x43,
	0x4f, 0x50, 0x45, 0x44, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x02, 0x32, 0x8e, 0x26,
	0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x80, 0x01, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0x75, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x1a, 0x26, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x67,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x8d, 0x01, 0x0a, 0x11, 0x67,
	0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x1a, 0x2c, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x0e, 0x67,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x20, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x1a,
	0x29, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f,
	0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x89,
	0x01, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x2b, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x0d, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x28, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x2a,
	0x19, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x90, 0x01,
	0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x2c, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x01, 0x2a,
	0x12, 0xac, 0x01, 0x0a, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x33, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x22, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12,
	0x84, 0x01, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61,
	0x67, 0x73, 0x12, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x61, 0x67, 0x73, 0x1a, 0x29, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x61, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2f, 0x61, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x61, 0x67, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x73, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x67, 0x73, 0x1a, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12,
	0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x67, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x90, 0x01, 0x0a, 0x11,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x67,
	0x73, 0x12, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x61, 0x67, 0x73, 0x1a, 0x2c, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x2a, 0x1d, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x67, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x80,
	0x01, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x67,
	0x12, 0x1f, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61,
	0x67, 0x1a, 0x28, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x61, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2f, 0x61, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x67, 0x3a, 0x01,
	0x2a, 0x12, 0x8c, 0x01, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x61, 0x67, 0x12, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x67, 0x1a, 0x2b, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x67, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x2a,
	0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x67, 0x3a, 0x01, 0x2a,
	0x12, 0xa8, 0x01, 0x0a, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x32, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x28, 0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x8b, 0x01, 0x0a, 0x14,
	0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x28, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x9c, 0x01, 0x0a, 0x14, 0x61, 0x64,
	0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x26, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x2f, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x41, 0x64,
	0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2f, 0x61, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xa8, 0x01, 0x0a, 0x17, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a,
	0x32, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x2a, 0x23, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0xa0, 0x01, 0x0a, 0x15, 0x6c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e,
	0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62,
	0x2e, 0x4c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x30, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74,
	0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26,
	0x22, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6c, 0x6f,
	0x67, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x9d, 0x01, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x27, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x30, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2f, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x7d, 0x0a, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x88, 0x01, 0x0a, 0x0f, 0x64, 0x65, 0x65, 0x70, 0x43, 0x6f,
	0x70, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x44, 0x65, 0x65,
	0x70, 0x43, 0x6f, 0x70, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x2a, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e,
	0x44, 0x65, 0x65, 0x70, 0x43, 0x6f, 0x70, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x64, 0x65,
	0x65, 0x70, 0x43, 0x6f, 0x70, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x71, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1c,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x1a, 0x25, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x8c, 0x01, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65,
	0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x1a, 0x2b, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e,
	0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x64, 0x6d, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x21, 0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x73,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0x89, 0x01, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x1a, 0x2b, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e,
	0x12, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x67, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x12, 0x9a,
	0x01, 0x0a, 0x14, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x25, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x74, 0x79, 0x1a, 0x2e,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x62, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0x98, 0x01, 0x0a, 0x13,
	0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x25, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x2e, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x53, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x24, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f,
	0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x95, 0x01, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x2e, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x90,
	0x01, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x46, 0x6f, 0x72, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x46, 0x6f,
	0x72, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x69, 0x2e, 0x76,
	0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x72, 0x6c, 0x46, 0x6f, 0x72, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22,
	0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x67, 0x65, 0x74,
	0x55, 0x72, 0x6c, 0x46, 0x6f, 0x72, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x3a, 0x01,
	0x2a, 0x12, 0x7c, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x12, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x1a, 0x27, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f,
	0x66, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12,
	0x8a, 0x01, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73,
	0x12, 0x25, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x64, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x1a, 0x2e, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72,
	0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22,
	0x18, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6c, 0x6f, 0x67,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x79, 0x0a, 0x0c,
	0x67, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x1a, 0x27, 0x2e, 0x61,
	0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x92, 0x01, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x27, 0x2e, 0x61, 0x69, 0x2e,
	0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x2a, 0x1a, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x84, 0x01, 0x0a,
	0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12,
	0x20, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x1a, 0x29, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x64, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x2a, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0x98, 0x01, 0x0a, 0x13, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x25, 0x2e, 0x61, 0x69,
	0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x53,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x1a, 0x2e, 0x2e, 0x61, 0x69, 0x2e, 0x76, 0x65, 0x72, 0x74, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x64, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0x42,
	0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x56,
	0x65, 0x72, 0x74, 0x61, 0x41, 0x49, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x64, 0x62, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x64, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_modeldb_ProjectService_proto_rawDescOnce sync.Once
	file_modeldb_ProjectService_proto_rawDescData = file_modeldb_ProjectService_proto_rawDesc
)

func file_modeldb_ProjectService_proto_rawDescGZIP() []byte {
	file_modeldb_ProjectService_proto_rawDescOnce.Do(func() {
		file_modeldb_ProjectService_proto_rawDescData = protoimpl.X.CompressGZIP(file_modeldb_ProjectService_proto_rawDescData)
	})
	return file_modeldb_ProjectService_proto_rawDescData
}

var file_modeldb_ProjectService_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_modeldb_ProjectService_proto_msgTypes = make([]protoimpl.MessageInfo, 65)
var file_modeldb_ProjectService_proto_goTypes = []interface{}{
	(ProjectVisibility)(0),                      // 0: ai.verta.modeldb.ProjectVisibility
	(*Project)(nil),                             // 1: ai.verta.modeldb.Project
	(*CreateProject)(nil),                       // 2: ai.verta.modeldb.CreateProject
	(*DeleteProject)(nil),                       // 3: ai.verta.modeldb.DeleteProject
	(*UpdateProjectName)(nil),                   // 4: ai.verta.modeldb.UpdateProjectName
	(*UpdateProjectDescription)(nil),            // 5: ai.verta.modeldb.UpdateProjectDescription
	(*AddProjectTags)(nil),                      // 6: ai.verta.modeldb.AddProjectTags
	(*DeleteProjectTags)(nil),                   // 7: ai.verta.modeldb.DeleteProjectTags
	(*AddProjectTag)(nil),                       // 8: ai.verta.modeldb.AddProjectTag
	(*DeleteProjectTag)(nil),                    // 9: ai.verta.modeldb.DeleteProjectTag
	(*GetProjectAttributes)(nil),                // 10: ai.verta.modeldb.GetProjectAttributes
	(*AddProjectAttributes)(nil),                // 11: ai.verta.modeldb.AddProjectAttributes
	(*UpdateProjectAttributes)(nil),             // 12: ai.verta.modeldb.UpdateProjectAttributes
	(*DeleteProjectAttributes)(nil),             // 13: ai.verta.modeldb.DeleteProjectAttributes
	(*LogProjectCodeVersion)(nil),               // 14: ai.verta.modeldb.LogProjectCodeVersion
	(*GetProjectCodeVersion)(nil),               // 15: ai.verta.modeldb.GetProjectCodeVersion
	(*GetProjects)(nil),                         // 16: ai.verta.modeldb.GetProjects
	(*GetPublicProjects)(nil),                   // 17: ai.verta.modeldb.GetPublicProjects
	(*GetProjectById)(nil),                      // 18: ai.verta.modeldb.GetProjectById
	(*GetProjectByName)(nil),                    // 19: ai.verta.modeldb.GetProjectByName
	(*Empty)(nil),                               // 20: ai.verta.modeldb.Empty
	(*VerifyConnectionResponse)(nil),            // 21: ai.verta.modeldb.VerifyConnectionResponse
	(*DeepCopyProject)(nil),                     // 22: ai.verta.modeldb.DeepCopyProject
	(*MetricsSummary)(nil),                      // 23: ai.verta.modeldb.MetricsSummary
	(*LastModifiedExperimentRunSummary)(nil),    // 24: ai.verta.modeldb.LastModifiedExperimentRunSummary
	(*GetSummary)(nil),                          // 25: ai.verta.modeldb.GetSummary
	(*SetProjectReadme)(nil),                    // 26: ai.verta.modeldb.SetProjectReadme
	(*GetProjectReadme)(nil),                    // 27: ai.verta.modeldb.GetProjectReadme
	(*SetProjectVisibilty)(nil),                 // 28: ai.verta.modeldb.SetProjectVisibilty
	(*SetProjectShortName)(nil),                 // 29: ai.verta.modeldb.SetProjectShortName
	(*GetProjectShortName)(nil),                 // 30: ai.verta.modeldb.GetProjectShortName
	(*FindProjects)(nil),                        // 31: ai.verta.modeldb.FindProjects
	(*LogProjectArtifacts)(nil),                 // 32: ai.verta.modeldb.LogProjectArtifacts
	(*DeleteProjectArtifact)(nil),               // 33: ai.verta.modeldb.DeleteProjectArtifact
	(*DeleteProjects)(nil),                      // 34: ai.verta.modeldb.DeleteProjects
	(*SetProjectWorkspace)(nil),                 // 35: ai.verta.modeldb.SetProjectWorkspace
	(*CreateProject_Response)(nil),              // 36: ai.verta.modeldb.CreateProject.Response
	(*DeleteProject_Response)(nil),              // 37: ai.verta.modeldb.DeleteProject.Response
	(*UpdateProjectName_Response)(nil),          // 38: ai.verta.modeldb.UpdateProjectName.Response
	(*UpdateProjectDescription_Response)(nil),   // 39: ai.verta.modeldb.UpdateProjectDescription.Response
	(*AddProjectTags_Response)(nil),             // 40: ai.verta.modeldb.AddProjectTags.Response
	(*DeleteProjectTags_Response)(nil),          // 41: ai.verta.modeldb.DeleteProjectTags.Response
	(*AddProjectTag_Response)(nil),              // 42: ai.verta.modeldb.AddProjectTag.Response
	(*DeleteProjectTag_Response)(nil),           // 43: ai.verta.modeldb.DeleteProjectTag.Response
	(*GetProjectAttributes_Response)(nil),       // 44: ai.verta.modeldb.GetProjectAttributes.Response
	(*AddProjectAttributes_Response)(nil),       // 45: ai.verta.modeldb.AddProjectAttributes.Response
	(*UpdateProjectAttributes_Response)(nil),    // 46: ai.verta.modeldb.UpdateProjectAttributes.Response
	(*DeleteProjectAttributes_Response)(nil),    // 47: ai.verta.modeldb.DeleteProjectAttributes.Response
	(*LogProjectCodeVersion_Response)(nil),      // 48: ai.verta.modeldb.LogProjectCodeVersion.Response
	(*GetProjectCodeVersion_Response)(nil),      // 49: ai.verta.modeldb.GetProjectCodeVersion.Response
	(*GetProjects_Response)(nil),                // 50: ai.verta.modeldb.GetProjects.Response
	(*GetPublicProjects_Response)(nil),          // 51: ai.verta.modeldb.GetPublicProjects.Response
	(*GetProjectById_Response)(nil),             // 52: ai.verta.modeldb.GetProjectById.Response
	(*GetProjectByName_Response)(nil),           // 53: ai.verta.modeldb.GetProjectByName.Response
	(*DeepCopyProject_Response)(nil),            // 54: ai.verta.modeldb.DeepCopyProject.Response
	(*GetSummary_Response)(nil),                 // 55: ai.verta.modeldb.GetSummary.Response
	(*SetProjectReadme_Response)(nil),           // 56: ai.verta.modeldb.SetProjectReadme.Response
	(*GetProjectReadme_Response)(nil),           // 57: ai.verta.modeldb.GetProjectReadme.Response
	(*SetProjectVisibilty_Response)(nil),        // 58: ai.verta.modeldb.SetProjectVisibilty.Response
	(*SetProjectShortName_Response)(nil),        // 59: ai.verta.modeldb.SetProjectShortName.Response
	(*GetProjectShortName_Response)(nil),        // 60: ai.verta.modeldb.GetProjectShortName.Response
	(*FindProjects_Response)(nil),               // 61: ai.verta.modeldb.FindProjects.Response
	(*LogProjectArtifacts_Response)(nil),        // 62: ai.verta.modeldb.LogProjectArtifacts.Response
	(*DeleteProjectArtifact_Response)(nil),      // 63: ai.verta.modeldb.DeleteProjectArtifact.Response
	(*DeleteProjects_Response)(nil),             // 64: ai.verta.modeldb.DeleteProjects.Response
	(*SetProjectWorkspace_Response)(nil),        // 65: ai.verta.modeldb.SetProjectWorkspace.Response
	(common.WorkspaceTypeEnum_WorkspaceType)(0), // 66: ai.verta.common.WorkspaceTypeEnum.WorkspaceType
	(*common.KeyValue)(nil),                     // 67: ai.verta.common.KeyValue
	(*CodeVersion)(nil),                         // 68: ai.verta.modeldb.CodeVersion
	(*common.Artifact)(nil),                     // 69: ai.verta.common.Artifact
	(*common.KeyValueQuery)(nil),                // 70: ai.verta.common.KeyValueQuery
	(*GetTags)(nil),                             // 71: ai.verta.modeldb.GetTags
	(*GetAttributes)(nil),                       // 72: ai.verta.modeldb.GetAttributes
	(*GetUrlForArtifact)(nil),                   // 73: ai.verta.modeldb.GetUrlForArtifact
	(*GetArtifacts)(nil),                        // 74: ai.verta.modeldb.GetArtifacts
	(*GetTags_Response)(nil),                    // 75: ai.verta.modeldb.GetTags.Response
	(*GetAttributes_Response)(nil),              // 76: ai.verta.modeldb.GetAttributes.Response
	(*GetUrlForArtifact_Response)(nil),          // 77: ai.verta.modeldb.GetUrlForArtifact.Response
	(*GetArtifacts_Response)(nil),               // 78: ai.verta.modeldb.GetArtifacts.Response
}
var file_modeldb_ProjectService_proto_depIdxs = []int32{
	0,  // 0: ai.verta.modeldb.Project.project_visibility:type_name -> ai.verta.modeldb.ProjectVisibility
	66, // 1: ai.verta.modeldb.Project.workspace_type:type_name -> ai.verta.common.WorkspaceTypeEnum.WorkspaceType
	67, // 2: ai.verta.modeldb.Project.attributes:type_name -> ai.verta.common.KeyValue
	68, // 3: ai.verta.modeldb.Project.code_version_snapshot:type_name -> ai.verta.modeldb.CodeVersion
	69, // 4: ai.verta.modeldb.Project.artifacts:type_name -> ai.verta.common.Artifact
	67, // 5: ai.verta.modeldb.CreateProject.attributes:type_name -> ai.verta.common.KeyValue
	0,  // 6: ai.verta.modeldb.CreateProject.project_visibility:type_name -> ai.verta.modeldb.ProjectVisibility
	69, // 7: ai.verta.modeldb.CreateProject.artifacts:type_name -> ai.verta.common.Artifact
	67, // 8: ai.verta.modeldb.AddProjectAttributes.attributes:type_name -> ai.verta.common.KeyValue
	67, // 9: ai.verta.modeldb.UpdateProjectAttributes.attribute:type_name -> ai.verta.common.KeyValue
	68, // 10: ai.verta.modeldb.LogProjectCodeVersion.code_version:type_name -> ai.verta.modeldb.CodeVersion
	0,  // 11: ai.verta.modeldb.SetProjectVisibilty.project_visibility:type_name -> ai.verta.modeldb.ProjectVisibility
	70, // 12: ai.verta.modeldb.FindProjects.predicates:type_name -> ai.verta.common.KeyValueQuery
	69, // 13: ai.verta.modeldb.LogProjectArtifacts.artifacts:type_name -> ai.verta.common.Artifact
	1,  // 14: ai.verta.modeldb.CreateProject.Response.project:type_name -> ai.verta.modeldb.Project
	1,  // 15: ai.verta.modeldb.UpdateProjectName.Response.project:type_name -> ai.verta.modeldb.Project
	1,  // 16: ai.verta.modeldb.UpdateProjectDescription.Response.project:type_name -> ai.verta.modeldb.Project
	1,  // 17: ai.verta.modeldb.AddProjectTags.Response.project:type_name -> ai.verta.modeldb.Project
	1,  // 18: ai.verta.modeldb.DeleteProjectTags.Response.project:type_name -> ai.verta.modeldb.Project
	1,  // 19: ai.verta.modeldb.AddProjectTag.Response.project:type_name -> ai.verta.modeldb.Project
	1,  // 20: ai.verta.modeldb.DeleteProjectTag.Response.project:type_name -> ai.verta.modeldb.Project
	67, // 21: ai.verta.modeldb.GetProjectAttributes.Response.attributes:type_name -> ai.verta.common.KeyValue
	1,  // 22: ai.verta.modeldb.AddProjectAttributes.Response.project:type_name -> ai.verta.modeldb.Project
	1,  // 23: ai.verta.modeldb.UpdateProjectAttributes.Response.project:type_name -> ai.verta.modeldb.Project
	1,  // 24: ai.verta.modeldb.DeleteProjectAttributes.Response.project:type_name -> ai.verta.modeldb.Project
	1,  // 25: ai.verta.modeldb.LogProjectCodeVersion.Response.project:type_name -> ai.verta.modeldb.Project
	68, // 26: ai.verta.modeldb.GetProjectCodeVersion.Response.code_version:type_name -> ai.verta.modeldb.CodeVersion
	1,  // 27: ai.verta.modeldb.GetProjects.Response.projects:type_name -> ai.verta.modeldb.Project
	1,  // 28: ai.verta.modeldb.GetPublicProjects.Response.projects:type_name -> ai.verta.modeldb.Project
	1,  // 29: ai.verta.modeldb.GetProjectById.Response.project:type_name -> ai.verta.modeldb.Project
	1,  // 30: ai.verta.modeldb.GetProjectByName.Response.project_by_user:type_name -> ai.verta.modeldb.Project
	1,  // 31: ai.verta.modeldb.GetProjectByName.Response.shared_projects:type_name -> ai.verta.modeldb.Project
	1,  // 32: ai.verta.modeldb.DeepCopyProject.Response.project:type_name -> ai.verta.modeldb.Project
	24, // 33: ai.verta.modeldb.GetSummary.Response.last_modified_experimentRun_summary:type_name -> ai.verta.modeldb.LastModifiedExperimentRunSummary
	23, // 34: ai.verta.modeldb.GetSummary.Response.metrics:type_name -> ai.verta.modeldb.MetricsSummary
	1,  // 35: ai.verta.modeldb.SetProjectReadme.Response.project:type_name -> ai.verta.modeldb.Project
	1,  // 36: ai.verta.modeldb.SetProjectVisibilty.Response.project:type_name -> ai.verta.modeldb.Project
	1,  // 37: ai.verta.modeldb.SetProjectShortName.Response.project:type_name -> ai.verta.modeldb.Project
	1,  // 38: ai.verta.modeldb.FindProjects.Response.projects:type_name -> ai.verta.modeldb.Project
	1,  // 39: ai.verta.modeldb.LogProjectArtifacts.Response.project:type_name -> ai.verta.modeldb.Project
	1,  // 40: ai.verta.modeldb.DeleteProjectArtifact.Response.project:type_name -> ai.verta.modeldb.Project
	1,  // 41: ai.verta.modeldb.SetProjectWorkspace.Response.project:type_name -> ai.verta.modeldb.Project
	2,  // 42: ai.verta.modeldb.ProjectService.createProject:input_type -> ai.verta.modeldb.CreateProject
	16, // 43: ai.verta.modeldb.ProjectService.getProjects:input_type -> ai.verta.modeldb.GetProjects
	17, // 44: ai.verta.modeldb.ProjectService.getPublicProjects:input_type -> ai.verta.modeldb.GetPublicProjects
	18, // 45: ai.verta.modeldb.ProjectService.getProjectById:input_type -> ai.verta.modeldb.GetProjectById
	19, // 46: ai.verta.modeldb.ProjectService.getProjectByName:input_type -> ai.verta.modeldb.GetProjectByName
	3,  // 47: ai.verta.modeldb.ProjectService.deleteProject:input_type -> ai.verta.modeldb.DeleteProject
	4,  // 48: ai.verta.modeldb.ProjectService.updateProjectName:input_type -> ai.verta.modeldb.UpdateProjectName
	5,  // 49: ai.verta.modeldb.ProjectService.updateProjectDescription:input_type -> ai.verta.modeldb.UpdateProjectDescription
	6,  // 50: ai.verta.modeldb.ProjectService.addProjectTags:input_type -> ai.verta.modeldb.AddProjectTags
	71, // 51: ai.verta.modeldb.ProjectService.getProjectTags:input_type -> ai.verta.modeldb.GetTags
	7,  // 52: ai.verta.modeldb.ProjectService.deleteProjectTags:input_type -> ai.verta.modeldb.DeleteProjectTags
	8,  // 53: ai.verta.modeldb.ProjectService.addProjectTag:input_type -> ai.verta.modeldb.AddProjectTag
	9,  // 54: ai.verta.modeldb.ProjectService.deleteProjectTag:input_type -> ai.verta.modeldb.DeleteProjectTag
	12, // 55: ai.verta.modeldb.ProjectService.updateProjectAttributes:input_type -> ai.verta.modeldb.UpdateProjectAttributes
	72, // 56: ai.verta.modeldb.ProjectService.getProjectAttributes:input_type -> ai.verta.modeldb.GetAttributes
	11, // 57: ai.verta.modeldb.ProjectService.addProjectAttributes:input_type -> ai.verta.modeldb.AddProjectAttributes
	13, // 58: ai.verta.modeldb.ProjectService.deleteProjectAttributes:input_type -> ai.verta.modeldb.DeleteProjectAttributes
	14, // 59: ai.verta.modeldb.ProjectService.logProjectCodeVersion:input_type -> ai.verta.modeldb.LogProjectCodeVersion
	15, // 60: ai.verta.modeldb.ProjectService.getProjectCodeVersion:input_type -> ai.verta.modeldb.GetProjectCodeVersion
	20, // 61: ai.verta.modeldb.ProjectService.verifyConnection:input_type -> ai.verta.modeldb.Empty
	22, // 62: ai.verta.modeldb.ProjectService.deepCopyProject:input_type -> ai.verta.modeldb.DeepCopyProject
	25, // 63: ai.verta.modeldb.ProjectService.getSummary:input_type -> ai.verta.modeldb.GetSummary
	26, // 64: ai.verta.modeldb.ProjectService.setProjectReadme:input_type -> ai.verta.modeldb.SetProjectReadme
	27, // 65: ai.verta.modeldb.ProjectService.getProjectReadme:input_type -> ai.verta.modeldb.GetProjectReadme
	28, // 66: ai.verta.modeldb.ProjectService.setProjectVisibility:input_type -> ai.verta.modeldb.SetProjectVisibilty
	29, // 67: ai.verta.modeldb.ProjectService.setProjectShortName:input_type -> ai.verta.modeldb.SetProjectShortName
	30, // 68: ai.verta.modeldb.ProjectService.getProjectShortName:input_type -> ai.verta.modeldb.GetProjectShortName
	73, // 69: ai.verta.modeldb.ProjectService.getUrlForArtifact:input_type -> ai.verta.modeldb.GetUrlForArtifact
	31, // 70: ai.verta.modeldb.ProjectService.findProjects:input_type -> ai.verta.modeldb.FindProjects
	32, // 71: ai.verta.modeldb.ProjectService.logArtifacts:input_type -> ai.verta.modeldb.LogProjectArtifacts
	74, // 72: ai.verta.modeldb.ProjectService.getArtifacts:input_type -> ai.verta.modeldb.GetArtifacts
	33, // 73: ai.verta.modeldb.ProjectService.deleteArtifact:input_type -> ai.verta.modeldb.DeleteProjectArtifact
	34, // 74: ai.verta.modeldb.ProjectService.deleteProjects:input_type -> ai.verta.modeldb.DeleteProjects
	35, // 75: ai.verta.modeldb.ProjectService.setProjectWorkspace:input_type -> ai.verta.modeldb.SetProjectWorkspace
	36, // 76: ai.verta.modeldb.ProjectService.createProject:output_type -> ai.verta.modeldb.CreateProject.Response
	50, // 77: ai.verta.modeldb.ProjectService.getProjects:output_type -> ai.verta.modeldb.GetProjects.Response
	51, // 78: ai.verta.modeldb.ProjectService.getPublicProjects:output_type -> ai.verta.modeldb.GetPublicProjects.Response
	52, // 79: ai.verta.modeldb.ProjectService.getProjectById:output_type -> ai.verta.modeldb.GetProjectById.Response
	53, // 80: ai.verta.modeldb.ProjectService.getProjectByName:output_type -> ai.verta.modeldb.GetProjectByName.Response
	37, // 81: ai.verta.modeldb.ProjectService.deleteProject:output_type -> ai.verta.modeldb.DeleteProject.Response
	38, // 82: ai.verta.modeldb.ProjectService.updateProjectName:output_type -> ai.verta.modeldb.UpdateProjectName.Response
	39, // 83: ai.verta.modeldb.ProjectService.updateProjectDescription:output_type -> ai.verta.modeldb.UpdateProjectDescription.Response
	40, // 84: ai.verta.modeldb.ProjectService.addProjectTags:output_type -> ai.verta.modeldb.AddProjectTags.Response
	75, // 85: ai.verta.modeldb.ProjectService.getProjectTags:output_type -> ai.verta.modeldb.GetTags.Response
	41, // 86: ai.verta.modeldb.ProjectService.deleteProjectTags:output_type -> ai.verta.modeldb.DeleteProjectTags.Response
	42, // 87: ai.verta.modeldb.ProjectService.addProjectTag:output_type -> ai.verta.modeldb.AddProjectTag.Response
	43, // 88: ai.verta.modeldb.ProjectService.deleteProjectTag:output_type -> ai.verta.modeldb.DeleteProjectTag.Response
	46, // 89: ai.verta.modeldb.ProjectService.updateProjectAttributes:output_type -> ai.verta.modeldb.UpdateProjectAttributes.Response
	76, // 90: ai.verta.modeldb.ProjectService.getProjectAttributes:output_type -> ai.verta.modeldb.GetAttributes.Response
	45, // 91: ai.verta.modeldb.ProjectService.addProjectAttributes:output_type -> ai.verta.modeldb.AddProjectAttributes.Response
	47, // 92: ai.verta.modeldb.ProjectService.deleteProjectAttributes:output_type -> ai.verta.modeldb.DeleteProjectAttributes.Response
	48, // 93: ai.verta.modeldb.ProjectService.logProjectCodeVersion:output_type -> ai.verta.modeldb.LogProjectCodeVersion.Response
	49, // 94: ai.verta.modeldb.ProjectService.getProjectCodeVersion:output_type -> ai.verta.modeldb.GetProjectCodeVersion.Response
	21, // 95: ai.verta.modeldb.ProjectService.verifyConnection:output_type -> ai.verta.modeldb.VerifyConnectionResponse
	54, // 96: ai.verta.modeldb.ProjectService.deepCopyProject:output_type -> ai.verta.modeldb.DeepCopyProject.Response
	55, // 97: ai.verta.modeldb.ProjectService.getSummary:output_type -> ai.verta.modeldb.GetSummary.Response
	56, // 98: ai.verta.modeldb.ProjectService.setProjectReadme:output_type -> ai.verta.modeldb.SetProjectReadme.Response
	57, // 99: ai.verta.modeldb.ProjectService.getProjectReadme:output_type -> ai.verta.modeldb.GetProjectReadme.Response
	58, // 100: ai.verta.modeldb.ProjectService.setProjectVisibility:output_type -> ai.verta.modeldb.SetProjectVisibilty.Response
	59, // 101: ai.verta.modeldb.ProjectService.setProjectShortName:output_type -> ai.verta.modeldb.SetProjectShortName.Response
	60, // 102: ai.verta.modeldb.ProjectService.getProjectShortName:output_type -> ai.verta.modeldb.GetProjectShortName.Response
	77, // 103: ai.verta.modeldb.ProjectService.getUrlForArtifact:output_type -> ai.verta.modeldb.GetUrlForArtifact.Response
	61, // 104: ai.verta.modeldb.ProjectService.findProjects:output_type -> ai.verta.modeldb.FindProjects.Response
	62, // 105: ai.verta.modeldb.ProjectService.logArtifacts:output_type -> ai.verta.modeldb.LogProjectArtifacts.Response
	78, // 106: ai.verta.modeldb.ProjectService.getArtifacts:output_type -> ai.verta.modeldb.GetArtifacts.Response
	63, // 107: ai.verta.modeldb.ProjectService.deleteArtifact:output_type -> ai.verta.modeldb.DeleteProjectArtifact.Response
	64, // 108: ai.verta.modeldb.ProjectService.deleteProjects:output_type -> ai.verta.modeldb.DeleteProjects.Response
	65, // 109: ai.verta.modeldb.ProjectService.setProjectWorkspace:output_type -> ai.verta.modeldb.SetProjectWorkspace.Response
	76, // [76:110] is the sub-list for method output_type
	42, // [42:76] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_modeldb_ProjectService_proto_init() }
func file_modeldb_ProjectService_proto_init() {
	if File_modeldb_ProjectService_proto != nil {
		return
	}
	file_modeldb_CommonService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_modeldb_ProjectService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectTags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectTags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogProjectCodeVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectCodeVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicProjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectByName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeepCopyProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LastModifiedExperimentRunSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProjectReadme); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectReadme); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProjectVisibilty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProjectShortName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectShortName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindProjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogProjectArtifacts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectArtifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProjectWorkspace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProject_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProject_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectName_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectDescription_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectTags_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectTags_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectTag_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectTag_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectAttributes_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProjectAttributes_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectAttributes_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectAttributes_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogProjectCodeVersion_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectCodeVersion_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjects_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicProjects_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectById_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectByName_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeepCopyProject_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSummary_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProjectReadme_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectReadme_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProjectVisibilty_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProjectShortName_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectShortName_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindProjects_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogProjectArtifacts_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectArtifact_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjects_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modeldb_ProjectService_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProjectWorkspace_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_modeldb_ProjectService_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   65,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_modeldb_ProjectService_proto_goTypes,
		DependencyIndexes: file_modeldb_ProjectService_proto_depIdxs,
		EnumInfos:         file_modeldb_ProjectService_proto_enumTypes,
		MessageInfos:      file_modeldb_ProjectService_proto_msgTypes,
	}.Build()
	File_modeldb_ProjectService_proto = out.File
	file_modeldb_ProjectService_proto_rawDesc = nil
	file_modeldb_ProjectService_proto_goTypes = nil
	file_modeldb_ProjectService_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProjectServiceClient is the client API for ProjectService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectServiceClient interface {
	CreateProject(ctx context.Context, in *CreateProject, opts ...grpc.CallOption) (*CreateProject_Response, error)
	GetProjects(ctx context.Context, in *GetProjects, opts ...grpc.CallOption) (*GetProjects_Response, error)
	GetPublicProjects(ctx context.Context, in *GetPublicProjects, opts ...grpc.CallOption) (*GetPublicProjects_Response, error)
	GetProjectById(ctx context.Context, in *GetProjectById, opts ...grpc.CallOption) (*GetProjectById_Response, error)
	GetProjectByName(ctx context.Context, in *GetProjectByName, opts ...grpc.CallOption) (*GetProjectByName_Response, error)
	DeleteProject(ctx context.Context, in *DeleteProject, opts ...grpc.CallOption) (*DeleteProject_Response, error)
	UpdateProjectName(ctx context.Context, in *UpdateProjectName, opts ...grpc.CallOption) (*UpdateProjectName_Response, error)
	UpdateProjectDescription(ctx context.Context, in *UpdateProjectDescription, opts ...grpc.CallOption) (*UpdateProjectDescription_Response, error)
	AddProjectTags(ctx context.Context, in *AddProjectTags, opts ...grpc.CallOption) (*AddProjectTags_Response, error)
	GetProjectTags(ctx context.Context, in *GetTags, opts ...grpc.CallOption) (*GetTags_Response, error)
	DeleteProjectTags(ctx context.Context, in *DeleteProjectTags, opts ...grpc.CallOption) (*DeleteProjectTags_Response, error)
	AddProjectTag(ctx context.Context, in *AddProjectTag, opts ...grpc.CallOption) (*AddProjectTag_Response, error)
	DeleteProjectTag(ctx context.Context, in *DeleteProjectTag, opts ...grpc.CallOption) (*DeleteProjectTag_Response, error)
	UpdateProjectAttributes(ctx context.Context, in *UpdateProjectAttributes, opts ...grpc.CallOption) (*UpdateProjectAttributes_Response, error)
	GetProjectAttributes(ctx context.Context, in *GetAttributes, opts ...grpc.CallOption) (*GetAttributes_Response, error)
	AddProjectAttributes(ctx context.Context, in *AddProjectAttributes, opts ...grpc.CallOption) (*AddProjectAttributes_Response, error)
	DeleteProjectAttributes(ctx context.Context, in *DeleteProjectAttributes, opts ...grpc.CallOption) (*DeleteProjectAttributes_Response, error)
	// code version
	LogProjectCodeVersion(ctx context.Context, in *LogProjectCodeVersion, opts ...grpc.CallOption) (*LogProjectCodeVersion_Response, error)
	GetProjectCodeVersion(ctx context.Context, in *GetProjectCodeVersion, opts ...grpc.CallOption) (*GetProjectCodeVersion_Response, error)
	VerifyConnection(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VerifyConnectionResponse, error)
	DeepCopyProject(ctx context.Context, in *DeepCopyProject, opts ...grpc.CallOption) (*DeepCopyProject_Response, error)
	GetSummary(ctx context.Context, in *GetSummary, opts ...grpc.CallOption) (*GetSummary_Response, error)
	SetProjectReadme(ctx context.Context, in *SetProjectReadme, opts ...grpc.CallOption) (*SetProjectReadme_Response, error)
	GetProjectReadme(ctx context.Context, in *GetProjectReadme, opts ...grpc.CallOption) (*GetProjectReadme_Response, error)
	SetProjectVisibility(ctx context.Context, in *SetProjectVisibilty, opts ...grpc.CallOption) (*SetProjectVisibilty_Response, error)
	SetProjectShortName(ctx context.Context, in *SetProjectShortName, opts ...grpc.CallOption) (*SetProjectShortName_Response, error)
	GetProjectShortName(ctx context.Context, in *GetProjectShortName, opts ...grpc.CallOption) (*GetProjectShortName_Response, error)
	// artifacts
	GetUrlForArtifact(ctx context.Context, in *GetUrlForArtifact, opts ...grpc.CallOption) (*GetUrlForArtifact_Response, error)
	// queries
	FindProjects(ctx context.Context, in *FindProjects, opts ...grpc.CallOption) (*FindProjects_Response, error)
	// artifacts
	LogArtifacts(ctx context.Context, in *LogProjectArtifacts, opts ...grpc.CallOption) (*LogProjectArtifacts_Response, error)
	GetArtifacts(ctx context.Context, in *GetArtifacts, opts ...grpc.CallOption) (*GetArtifacts_Response, error)
	DeleteArtifact(ctx context.Context, in *DeleteProjectArtifact, opts ...grpc.CallOption) (*DeleteProjectArtifact_Response, error)
	DeleteProjects(ctx context.Context, in *DeleteProjects, opts ...grpc.CallOption) (*DeleteProjects_Response, error)
	SetProjectWorkspace(ctx context.Context, in *SetProjectWorkspace, opts ...grpc.CallOption) (*SetProjectWorkspace_Response, error)
}

type projectServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProjectServiceClient(cc grpc.ClientConnInterface) ProjectServiceClient {
	return &projectServiceClient{cc}
}

func (c *projectServiceClient) CreateProject(ctx context.Context, in *CreateProject, opts ...grpc.CallOption) (*CreateProject_Response, error) {
	out := new(CreateProject_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/createProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetProjects(ctx context.Context, in *GetProjects, opts ...grpc.CallOption) (*GetProjects_Response, error) {
	out := new(GetProjects_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/getProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetPublicProjects(ctx context.Context, in *GetPublicProjects, opts ...grpc.CallOption) (*GetPublicProjects_Response, error) {
	out := new(GetPublicProjects_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/getPublicProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetProjectById(ctx context.Context, in *GetProjectById, opts ...grpc.CallOption) (*GetProjectById_Response, error) {
	out := new(GetProjectById_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/getProjectById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetProjectByName(ctx context.Context, in *GetProjectByName, opts ...grpc.CallOption) (*GetProjectByName_Response, error) {
	out := new(GetProjectByName_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/getProjectByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) DeleteProject(ctx context.Context, in *DeleteProject, opts ...grpc.CallOption) (*DeleteProject_Response, error) {
	out := new(DeleteProject_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/deleteProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) UpdateProjectName(ctx context.Context, in *UpdateProjectName, opts ...grpc.CallOption) (*UpdateProjectName_Response, error) {
	out := new(UpdateProjectName_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/updateProjectName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) UpdateProjectDescription(ctx context.Context, in *UpdateProjectDescription, opts ...grpc.CallOption) (*UpdateProjectDescription_Response, error) {
	out := new(UpdateProjectDescription_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/updateProjectDescription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) AddProjectTags(ctx context.Context, in *AddProjectTags, opts ...grpc.CallOption) (*AddProjectTags_Response, error) {
	out := new(AddProjectTags_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/addProjectTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetProjectTags(ctx context.Context, in *GetTags, opts ...grpc.CallOption) (*GetTags_Response, error) {
	out := new(GetTags_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/getProjectTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) DeleteProjectTags(ctx context.Context, in *DeleteProjectTags, opts ...grpc.CallOption) (*DeleteProjectTags_Response, error) {
	out := new(DeleteProjectTags_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/deleteProjectTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) AddProjectTag(ctx context.Context, in *AddProjectTag, opts ...grpc.CallOption) (*AddProjectTag_Response, error) {
	out := new(AddProjectTag_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/addProjectTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) DeleteProjectTag(ctx context.Context, in *DeleteProjectTag, opts ...grpc.CallOption) (*DeleteProjectTag_Response, error) {
	out := new(DeleteProjectTag_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/deleteProjectTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) UpdateProjectAttributes(ctx context.Context, in *UpdateProjectAttributes, opts ...grpc.CallOption) (*UpdateProjectAttributes_Response, error) {
	out := new(UpdateProjectAttributes_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/updateProjectAttributes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetProjectAttributes(ctx context.Context, in *GetAttributes, opts ...grpc.CallOption) (*GetAttributes_Response, error) {
	out := new(GetAttributes_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/getProjectAttributes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) AddProjectAttributes(ctx context.Context, in *AddProjectAttributes, opts ...grpc.CallOption) (*AddProjectAttributes_Response, error) {
	out := new(AddProjectAttributes_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/addProjectAttributes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) DeleteProjectAttributes(ctx context.Context, in *DeleteProjectAttributes, opts ...grpc.CallOption) (*DeleteProjectAttributes_Response, error) {
	out := new(DeleteProjectAttributes_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/deleteProjectAttributes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) LogProjectCodeVersion(ctx context.Context, in *LogProjectCodeVersion, opts ...grpc.CallOption) (*LogProjectCodeVersion_Response, error) {
	out := new(LogProjectCodeVersion_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/logProjectCodeVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetProjectCodeVersion(ctx context.Context, in *GetProjectCodeVersion, opts ...grpc.CallOption) (*GetProjectCodeVersion_Response, error) {
	out := new(GetProjectCodeVersion_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/getProjectCodeVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) VerifyConnection(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VerifyConnectionResponse, error) {
	out := new(VerifyConnectionResponse)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/verifyConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) DeepCopyProject(ctx context.Context, in *DeepCopyProject, opts ...grpc.CallOption) (*DeepCopyProject_Response, error) {
	out := new(DeepCopyProject_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/deepCopyProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetSummary(ctx context.Context, in *GetSummary, opts ...grpc.CallOption) (*GetSummary_Response, error) {
	out := new(GetSummary_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/getSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) SetProjectReadme(ctx context.Context, in *SetProjectReadme, opts ...grpc.CallOption) (*SetProjectReadme_Response, error) {
	out := new(SetProjectReadme_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/setProjectReadme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetProjectReadme(ctx context.Context, in *GetProjectReadme, opts ...grpc.CallOption) (*GetProjectReadme_Response, error) {
	out := new(GetProjectReadme_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/getProjectReadme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) SetProjectVisibility(ctx context.Context, in *SetProjectVisibilty, opts ...grpc.CallOption) (*SetProjectVisibilty_Response, error) {
	out := new(SetProjectVisibilty_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/setProjectVisibility", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) SetProjectShortName(ctx context.Context, in *SetProjectShortName, opts ...grpc.CallOption) (*SetProjectShortName_Response, error) {
	out := new(SetProjectShortName_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/setProjectShortName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetProjectShortName(ctx context.Context, in *GetProjectShortName, opts ...grpc.CallOption) (*GetProjectShortName_Response, error) {
	out := new(GetProjectShortName_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/getProjectShortName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetUrlForArtifact(ctx context.Context, in *GetUrlForArtifact, opts ...grpc.CallOption) (*GetUrlForArtifact_Response, error) {
	out := new(GetUrlForArtifact_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/getUrlForArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) FindProjects(ctx context.Context, in *FindProjects, opts ...grpc.CallOption) (*FindProjects_Response, error) {
	out := new(FindProjects_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/findProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) LogArtifacts(ctx context.Context, in *LogProjectArtifacts, opts ...grpc.CallOption) (*LogProjectArtifacts_Response, error) {
	out := new(LogProjectArtifacts_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/logArtifacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetArtifacts(ctx context.Context, in *GetArtifacts, opts ...grpc.CallOption) (*GetArtifacts_Response, error) {
	out := new(GetArtifacts_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/getArtifacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) DeleteArtifact(ctx context.Context, in *DeleteProjectArtifact, opts ...grpc.CallOption) (*DeleteProjectArtifact_Response, error) {
	out := new(DeleteProjectArtifact_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/deleteArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) DeleteProjects(ctx context.Context, in *DeleteProjects, opts ...grpc.CallOption) (*DeleteProjects_Response, error) {
	out := new(DeleteProjects_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/deleteProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) SetProjectWorkspace(ctx context.Context, in *SetProjectWorkspace, opts ...grpc.CallOption) (*SetProjectWorkspace_Response, error) {
	out := new(SetProjectWorkspace_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.ProjectService/setProjectWorkspace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectServiceServer is the server API for ProjectService service.
type ProjectServiceServer interface {
	CreateProject(context.Context, *CreateProject) (*CreateProject_Response, error)
	GetProjects(context.Context, *GetProjects) (*GetProjects_Response, error)
	GetPublicProjects(context.Context, *GetPublicProjects) (*GetPublicProjects_Response, error)
	GetProjectById(context.Context, *GetProjectById) (*GetProjectById_Response, error)
	GetProjectByName(context.Context, *GetProjectByName) (*GetProjectByName_Response, error)
	DeleteProject(context.Context, *DeleteProject) (*DeleteProject_Response, error)
	UpdateProjectName(context.Context, *UpdateProjectName) (*UpdateProjectName_Response, error)
	UpdateProjectDescription(context.Context, *UpdateProjectDescription) (*UpdateProjectDescription_Response, error)
	AddProjectTags(context.Context, *AddProjectTags) (*AddProjectTags_Response, error)
	GetProjectTags(context.Context, *GetTags) (*GetTags_Response, error)
	DeleteProjectTags(context.Context, *DeleteProjectTags) (*DeleteProjectTags_Response, error)
	AddProjectTag(context.Context, *AddProjectTag) (*AddProjectTag_Response, error)
	DeleteProjectTag(context.Context, *DeleteProjectTag) (*DeleteProjectTag_Response, error)
	UpdateProjectAttributes(context.Context, *UpdateProjectAttributes) (*UpdateProjectAttributes_Response, error)
	GetProjectAttributes(context.Context, *GetAttributes) (*GetAttributes_Response, error)
	AddProjectAttributes(context.Context, *AddProjectAttributes) (*AddProjectAttributes_Response, error)
	DeleteProjectAttributes(context.Context, *DeleteProjectAttributes) (*DeleteProjectAttributes_Response, error)
	// code version
	LogProjectCodeVersion(context.Context, *LogProjectCodeVersion) (*LogProjectCodeVersion_Response, error)
	GetProjectCodeVersion(context.Context, *GetProjectCodeVersion) (*GetProjectCodeVersion_Response, error)
	VerifyConnection(context.Context, *Empty) (*VerifyConnectionResponse, error)
	DeepCopyProject(context.Context, *DeepCopyProject) (*DeepCopyProject_Response, error)
	GetSummary(context.Context, *GetSummary) (*GetSummary_Response, error)
	SetProjectReadme(context.Context, *SetProjectReadme) (*SetProjectReadme_Response, error)
	GetProjectReadme(context.Context, *GetProjectReadme) (*GetProjectReadme_Response, error)
	SetProjectVisibility(context.Context, *SetProjectVisibilty) (*SetProjectVisibilty_Response, error)
	SetProjectShortName(context.Context, *SetProjectShortName) (*SetProjectShortName_Response, error)
	GetProjectShortName(context.Context, *GetProjectShortName) (*GetProjectShortName_Response, error)
	// artifacts
	GetUrlForArtifact(context.Context, *GetUrlForArtifact) (*GetUrlForArtifact_Response, error)
	// queries
	FindProjects(context.Context, *FindProjects) (*FindProjects_Response, error)
	// artifacts
	LogArtifacts(context.Context, *LogProjectArtifacts) (*LogProjectArtifacts_Response, error)
	GetArtifacts(context.Context, *GetArtifacts) (*GetArtifacts_Response, error)
	DeleteArtifact(context.Context, *DeleteProjectArtifact) (*DeleteProjectArtifact_Response, error)
	DeleteProjects(context.Context, *DeleteProjects) (*DeleteProjects_Response, error)
	SetProjectWorkspace(context.Context, *SetProjectWorkspace) (*SetProjectWorkspace_Response, error)
}

// UnimplementedProjectServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProjectServiceServer struct {
}

func (*UnimplementedProjectServiceServer) CreateProject(context.Context, *CreateProject) (*CreateProject_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProject not implemented")
}
func (*UnimplementedProjectServiceServer) GetProjects(context.Context, *GetProjects) (*GetProjects_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjects not implemented")
}
func (*UnimplementedProjectServiceServer) GetPublicProjects(context.Context, *GetPublicProjects) (*GetPublicProjects_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPublicProjects not implemented")
}
func (*UnimplementedProjectServiceServer) GetProjectById(context.Context, *GetProjectById) (*GetProjectById_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectById not implemented")
}
func (*UnimplementedProjectServiceServer) GetProjectByName(context.Context, *GetProjectByName) (*GetProjectByName_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectByName not implemented")
}
func (*UnimplementedProjectServiceServer) DeleteProject(context.Context, *DeleteProject) (*DeleteProject_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProject not implemented")
}
func (*UnimplementedProjectServiceServer) UpdateProjectName(context.Context, *UpdateProjectName) (*UpdateProjectName_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProjectName not implemented")
}
func (*UnimplementedProjectServiceServer) UpdateProjectDescription(context.Context, *UpdateProjectDescription) (*UpdateProjectDescription_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProjectDescription not implemented")
}
func (*UnimplementedProjectServiceServer) AddProjectTags(context.Context, *AddProjectTags) (*AddProjectTags_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProjectTags not implemented")
}
func (*UnimplementedProjectServiceServer) GetProjectTags(context.Context, *GetTags) (*GetTags_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectTags not implemented")
}
func (*UnimplementedProjectServiceServer) DeleteProjectTags(context.Context, *DeleteProjectTags) (*DeleteProjectTags_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProjectTags not implemented")
}
func (*UnimplementedProjectServiceServer) AddProjectTag(context.Context, *AddProjectTag) (*AddProjectTag_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProjectTag not implemented")
}
func (*UnimplementedProjectServiceServer) DeleteProjectTag(context.Context, *DeleteProjectTag) (*DeleteProjectTag_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProjectTag not implemented")
}
func (*UnimplementedProjectServiceServer) UpdateProjectAttributes(context.Context, *UpdateProjectAttributes) (*UpdateProjectAttributes_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProjectAttributes not implemented")
}
func (*UnimplementedProjectServiceServer) GetProjectAttributes(context.Context, *GetAttributes) (*GetAttributes_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectAttributes not implemented")
}
func (*UnimplementedProjectServiceServer) AddProjectAttributes(context.Context, *AddProjectAttributes) (*AddProjectAttributes_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProjectAttributes not implemented")
}
func (*UnimplementedProjectServiceServer) DeleteProjectAttributes(context.Context, *DeleteProjectAttributes) (*DeleteProjectAttributes_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProjectAttributes not implemented")
}
func (*UnimplementedProjectServiceServer) LogProjectCodeVersion(context.Context, *LogProjectCodeVersion) (*LogProjectCodeVersion_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogProjectCodeVersion not implemented")
}
func (*UnimplementedProjectServiceServer) GetProjectCodeVersion(context.Context, *GetProjectCodeVersion) (*GetProjectCodeVersion_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectCodeVersion not implemented")
}
func (*UnimplementedProjectServiceServer) VerifyConnection(context.Context, *Empty) (*VerifyConnectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyConnection not implemented")
}
func (*UnimplementedProjectServiceServer) DeepCopyProject(context.Context, *DeepCopyProject) (*DeepCopyProject_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeepCopyProject not implemented")
}
func (*UnimplementedProjectServiceServer) GetSummary(context.Context, *GetSummary) (*GetSummary_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSummary not implemented")
}
func (*UnimplementedProjectServiceServer) SetProjectReadme(context.Context, *SetProjectReadme) (*SetProjectReadme_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetProjectReadme not implemented")
}
func (*UnimplementedProjectServiceServer) GetProjectReadme(context.Context, *GetProjectReadme) (*GetProjectReadme_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectReadme not implemented")
}
func (*UnimplementedProjectServiceServer) SetProjectVisibility(context.Context, *SetProjectVisibilty) (*SetProjectVisibilty_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetProjectVisibility not implemented")
}
func (*UnimplementedProjectServiceServer) SetProjectShortName(context.Context, *SetProjectShortName) (*SetProjectShortName_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetProjectShortName not implemented")
}
func (*UnimplementedProjectServiceServer) GetProjectShortName(context.Context, *GetProjectShortName) (*GetProjectShortName_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectShortName not implemented")
}
func (*UnimplementedProjectServiceServer) GetUrlForArtifact(context.Context, *GetUrlForArtifact) (*GetUrlForArtifact_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUrlForArtifact not implemented")
}
func (*UnimplementedProjectServiceServer) FindProjects(context.Context, *FindProjects) (*FindProjects_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindProjects not implemented")
}
func (*UnimplementedProjectServiceServer) LogArtifacts(context.Context, *LogProjectArtifacts) (*LogProjectArtifacts_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogArtifacts not implemented")
}
func (*UnimplementedProjectServiceServer) GetArtifacts(context.Context, *GetArtifacts) (*GetArtifacts_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArtifacts not implemented")
}
func (*UnimplementedProjectServiceServer) DeleteArtifact(context.Context, *DeleteProjectArtifact) (*DeleteProjectArtifact_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteArtifact not implemented")
}
func (*UnimplementedProjectServiceServer) DeleteProjects(context.Context, *DeleteProjects) (*DeleteProjects_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProjects not implemented")
}
func (*UnimplementedProjectServiceServer) SetProjectWorkspace(context.Context, *SetProjectWorkspace) (*SetProjectWorkspace_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetProjectWorkspace not implemented")
}

func RegisterProjectServiceServer(s *grpc.Server, srv ProjectServiceServer) {
	s.RegisterService(&_ProjectService_serviceDesc, srv)
}

func _ProjectService_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).CreateProject(ctx, req.(*CreateProject))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjects)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/GetProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetProjects(ctx, req.(*GetProjects))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetPublicProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPublicProjects)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetPublicProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/GetPublicProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetPublicProjects(ctx, req.(*GetPublicProjects))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetProjectById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetProjectById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/GetProjectById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetProjectById(ctx, req.(*GetProjectById))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetProjectByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectByName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetProjectByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/GetProjectByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetProjectByName(ctx, req.(*GetProjectByName))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_DeleteProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).DeleteProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/DeleteProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).DeleteProject(ctx, req.(*DeleteProject))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_UpdateProjectName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).UpdateProjectName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/UpdateProjectName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).UpdateProjectName(ctx, req.(*UpdateProjectName))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_UpdateProjectDescription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectDescription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).UpdateProjectDescription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/UpdateProjectDescription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).UpdateProjectDescription(ctx, req.(*UpdateProjectDescription))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_AddProjectTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddProjectTags)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).AddProjectTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/AddProjectTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).AddProjectTags(ctx, req.(*AddProjectTags))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetProjectTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTags)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetProjectTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/GetProjectTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetProjectTags(ctx, req.(*GetTags))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_DeleteProjectTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectTags)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).DeleteProjectTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/DeleteProjectTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).DeleteProjectTags(ctx, req.(*DeleteProjectTags))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_AddProjectTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddProjectTag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).AddProjectTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/AddProjectTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).AddProjectTag(ctx, req.(*AddProjectTag))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_DeleteProjectTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectTag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).DeleteProjectTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/DeleteProjectTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).DeleteProjectTag(ctx, req.(*DeleteProjectTag))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_UpdateProjectAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectAttributes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).UpdateProjectAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/UpdateProjectAttributes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).UpdateProjectAttributes(ctx, req.(*UpdateProjectAttributes))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetProjectAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAttributes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetProjectAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/GetProjectAttributes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetProjectAttributes(ctx, req.(*GetAttributes))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_AddProjectAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddProjectAttributes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).AddProjectAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/AddProjectAttributes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).AddProjectAttributes(ctx, req.(*AddProjectAttributes))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_DeleteProjectAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectAttributes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).DeleteProjectAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/DeleteProjectAttributes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).DeleteProjectAttributes(ctx, req.(*DeleteProjectAttributes))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_LogProjectCodeVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogProjectCodeVersion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).LogProjectCodeVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/LogProjectCodeVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).LogProjectCodeVersion(ctx, req.(*LogProjectCodeVersion))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetProjectCodeVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectCodeVersion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetProjectCodeVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/GetProjectCodeVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetProjectCodeVersion(ctx, req.(*GetProjectCodeVersion))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_VerifyConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).VerifyConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/VerifyConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).VerifyConnection(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_DeepCopyProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeepCopyProject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).DeepCopyProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/DeepCopyProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).DeepCopyProject(ctx, req.(*DeepCopyProject))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSummary)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/GetSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetSummary(ctx, req.(*GetSummary))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_SetProjectReadme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetProjectReadme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).SetProjectReadme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/SetProjectReadme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).SetProjectReadme(ctx, req.(*SetProjectReadme))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetProjectReadme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectReadme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetProjectReadme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/GetProjectReadme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetProjectReadme(ctx, req.(*GetProjectReadme))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_SetProjectVisibility_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetProjectVisibilty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).SetProjectVisibility(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/SetProjectVisibility",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).SetProjectVisibility(ctx, req.(*SetProjectVisibilty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_SetProjectShortName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetProjectShortName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).SetProjectShortName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/SetProjectShortName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).SetProjectShortName(ctx, req.(*SetProjectShortName))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetProjectShortName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectShortName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetProjectShortName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/GetProjectShortName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetProjectShortName(ctx, req.(*GetProjectShortName))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetUrlForArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUrlForArtifact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetUrlForArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/GetUrlForArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetUrlForArtifact(ctx, req.(*GetUrlForArtifact))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_FindProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindProjects)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).FindProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/FindProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).FindProjects(ctx, req.(*FindProjects))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_LogArtifacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogProjectArtifacts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).LogArtifacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/LogArtifacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).LogArtifacts(ctx, req.(*LogProjectArtifacts))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetArtifacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArtifacts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetArtifacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/GetArtifacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetArtifacts(ctx, req.(*GetArtifacts))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_DeleteArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectArtifact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).DeleteArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/DeleteArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).DeleteArtifact(ctx, req.(*DeleteProjectArtifact))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_DeleteProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjects)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).DeleteProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/DeleteProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).DeleteProjects(ctx, req.(*DeleteProjects))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_SetProjectWorkspace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetProjectWorkspace)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).SetProjectWorkspace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.ProjectService/SetProjectWorkspace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).SetProjectWorkspace(ctx, req.(*SetProjectWorkspace))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProjectService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ai.verta.modeldb.ProjectService",
	HandlerType: (*ProjectServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createProject",
			Handler:    _ProjectService_CreateProject_Handler,
		},
		{
			MethodName: "getProjects",
			Handler:    _ProjectService_GetProjects_Handler,
		},
		{
			MethodName: "getPublicProjects",
			Handler:    _ProjectService_GetPublicProjects_Handler,
		},
		{
			MethodName: "getProjectById",
			Handler:    _ProjectService_GetProjectById_Handler,
		},
		{
			MethodName: "getProjectByName",
			Handler:    _ProjectService_GetProjectByName_Handler,
		},
		{
			MethodName: "deleteProject",
			Handler:    _ProjectService_DeleteProject_Handler,
		},
		{
			MethodName: "updateProjectName",
			Handler:    _ProjectService_UpdateProjectName_Handler,
		},
		{
			MethodName: "updateProjectDescription",
			Handler:    _ProjectService_UpdateProjectDescription_Handler,
		},
		{
			MethodName: "addProjectTags",
			Handler:    _ProjectService_AddProjectTags_Handler,
		},
		{
			MethodName: "getProjectTags",
			Handler:    _ProjectService_GetProjectTags_Handler,
		},
		{
			MethodName: "deleteProjectTags",
			Handler:    _ProjectService_DeleteProjectTags_Handler,
		},
		{
			MethodName: "addProjectTag",
			Handler:    _ProjectService_AddProjectTag_Handler,
		},
		{
			MethodName: "deleteProjectTag",
			Handler:    _ProjectService_DeleteProjectTag_Handler,
		},
		{
			MethodName: "updateProjectAttributes",
			Handler:    _ProjectService_UpdateProjectAttributes_Handler,
		},
		{
			MethodName: "getProjectAttributes",
			Handler:    _ProjectService_GetProjectAttributes_Handler,
		},
		{
			MethodName: "addProjectAttributes",
			Handler:    _ProjectService_AddProjectAttributes_Handler,
		},
		{
			MethodName: "deleteProjectAttributes",
			Handler:    _ProjectService_DeleteProjectAttributes_Handler,
		},
		{
			MethodName: "logProjectCodeVersion",
			Handler:    _ProjectService_LogProjectCodeVersion_Handler,
		},
		{
			MethodName: "getProjectCodeVersion",
			Handler:    _ProjectService_GetProjectCodeVersion_Handler,
		},
		{
			MethodName: "verifyConnection",
			Handler:    _ProjectService_VerifyConnection_Handler,
		},
		{
			MethodName: "deepCopyProject",
			Handler:    _ProjectService_DeepCopyProject_Handler,
		},
		{
			MethodName: "getSummary",
			Handler:    _ProjectService_GetSummary_Handler,
		},
		{
			MethodName: "setProjectReadme",
			Handler:    _ProjectService_SetProjectReadme_Handler,
		},
		{
			MethodName: "getProjectReadme",
			Handler:    _ProjectService_GetProjectReadme_Handler,
		},
		{
			MethodName: "setProjectVisibility",
			Handler:    _ProjectService_SetProjectVisibility_Handler,
		},
		{
			MethodName: "setProjectShortName",
			Handler:    _ProjectService_SetProjectShortName_Handler,
		},
		{
			MethodName: "getProjectShortName",
			Handler:    _ProjectService_GetProjectShortName_Handler,
		},
		{
			MethodName: "getUrlForArtifact",
			Handler:    _ProjectService_GetUrlForArtifact_Handler,
		},
		{
			MethodName: "findProjects",
			Handler:    _ProjectService_FindProjects_Handler,
		},
		{
			MethodName: "logArtifacts",
			Handler:    _ProjectService_LogArtifacts_Handler,
		},
		{
			MethodName: "getArtifacts",
			Handler:    _ProjectService_GetArtifacts_Handler,
		},
		{
			MethodName: "deleteArtifact",
			Handler:    _ProjectService_DeleteArtifact_Handler,
		},
		{
			MethodName: "deleteProjects",
			Handler:    _ProjectService_DeleteProjects_Handler,
		},
		{
			MethodName: "setProjectWorkspace",
			Handler:    _ProjectService_SetProjectWorkspace_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "modeldb/ProjectService.proto",
}
