// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.diff.*;
import ai.verta.modeldb.versioning.blob.diff.Function3;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;
import com.pholser.junit.quickcheck.generator.*;
import com.pholser.junit.quickcheck.random.*;
import java.util.*;
import java.util.function.Function;

public class Blob implements ProtoType {
  public CodeBlob Code;
  public ConfigBlob Config;
  public DatasetBlob Dataset;
  public EnvironmentBlob Environment;

  public Blob() {
    this.Code = null;
    this.Config = null;
    this.Dataset = null;
    this.Environment = null;
  }

  public Boolean isEmpty() {
    if (this.Code != null && !this.Code.equals(null)) {
      return false;
    }
    if (this.Config != null && !this.Config.equals(null)) {
      return false;
    }
    if (this.Dataset != null && !this.Dataset.equals(null)) {
      return false;
    }
    if (this.Environment != null && !this.Environment.equals(null)) {
      return false;
    }
    return true;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("{\"class\": \"Blob\", \"fields\": {");
    boolean first = true;
    if (this.Code != null && !this.Code.equals(null)) {
      if (!first) sb.append(", ");
      sb.append("\"Code\": " + Code);
      first = false;
    }
    if (this.Config != null && !this.Config.equals(null)) {
      if (!first) sb.append(", ");
      sb.append("\"Config\": " + Config);
      first = false;
    }
    if (this.Dataset != null && !this.Dataset.equals(null)) {
      if (!first) sb.append(", ");
      sb.append("\"Dataset\": " + Dataset);
      first = false;
    }
    if (this.Environment != null && !this.Environment.equals(null)) {
      if (!first) sb.append(", ");
      sb.append("\"Environment\": " + Environment);
      first = false;
    }
    sb.append("}}");
    return sb.toString();
  }

  // TODO: actually hash
  public String getSHA() {
    StringBuilder sb = new StringBuilder();
    sb.append("Blob");
    if (this.Code != null && !this.Code.equals(null)) {
      sb.append("::Code::").append(Code);
    }
    if (this.Config != null && !this.Config.equals(null)) {
      sb.append("::Config::").append(Config);
    }
    if (this.Dataset != null && !this.Dataset.equals(null)) {
      sb.append("::Dataset::").append(Dataset);
    }
    if (this.Environment != null && !this.Environment.equals(null)) {
      sb.append("::Environment::").append(Environment);
    }

    return sb.toString();
  }

  // TODO: not consider order on lists
  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null) return false;
    if (!(o instanceof Blob)) return false;
    Blob other = (Blob) o;

    {
      Function3<CodeBlob, CodeBlob, Boolean> f = (x, y) -> x.equals(y);
      if (this.Code != null || other.Code != null) {
        if (this.Code == null && other.Code != null) return false;
        if (this.Code != null && other.Code == null) return false;
        if (!f.apply(this.Code, other.Code)) return false;
      }
    }
    {
      Function3<ConfigBlob, ConfigBlob, Boolean> f = (x, y) -> x.equals(y);
      if (this.Config != null || other.Config != null) {
        if (this.Config == null && other.Config != null) return false;
        if (this.Config != null && other.Config == null) return false;
        if (!f.apply(this.Config, other.Config)) return false;
      }
    }
    {
      Function3<DatasetBlob, DatasetBlob, Boolean> f = (x, y) -> x.equals(y);
      if (this.Dataset != null || other.Dataset != null) {
        if (this.Dataset == null && other.Dataset != null) return false;
        if (this.Dataset != null && other.Dataset == null) return false;
        if (!f.apply(this.Dataset, other.Dataset)) return false;
      }
    }
    {
      Function3<EnvironmentBlob, EnvironmentBlob, Boolean> f = (x, y) -> x.equals(y);
      if (this.Environment != null || other.Environment != null) {
        if (this.Environment == null && other.Environment != null) return false;
        if (this.Environment != null && other.Environment == null) return false;
        if (!f.apply(this.Environment, other.Environment)) return false;
      }
    }
    return true;
  }

  @Override
  public int hashCode() {
    return Objects.hash(this.Code, this.Config, this.Dataset, this.Environment);
  }

  public Blob setCode(CodeBlob value) {
    this.Code = Utils.removeEmpty(value);
    return this;
  }

  public Blob setConfig(ConfigBlob value) {
    this.Config = Utils.removeEmpty(value);
    return this;
  }

  public Blob setDataset(DatasetBlob value) {
    this.Dataset = Utils.removeEmpty(value);
    return this;
  }

  public Blob setEnvironment(EnvironmentBlob value) {
    this.Environment = Utils.removeEmpty(value);
    return this;
  }

  public static Blob fromProto(ai.verta.modeldb.versioning.Blob blob) {
    if (blob == null) {
      return null;
    }

    Blob obj = new Blob();
    {
      Function<ai.verta.modeldb.versioning.Blob, CodeBlob> f =
          x -> CodeBlob.fromProto(blob.getCode());
      obj.Code = Utils.removeEmpty(f.apply(blob));
    }
    {
      Function<ai.verta.modeldb.versioning.Blob, ConfigBlob> f =
          x -> ConfigBlob.fromProto(blob.getConfig());
      obj.Config = Utils.removeEmpty(f.apply(blob));
    }
    {
      Function<ai.verta.modeldb.versioning.Blob, DatasetBlob> f =
          x -> DatasetBlob.fromProto(blob.getDataset());
      obj.Dataset = Utils.removeEmpty(f.apply(blob));
    }
    {
      Function<ai.verta.modeldb.versioning.Blob, EnvironmentBlob> f =
          x -> EnvironmentBlob.fromProto(blob.getEnvironment());
      obj.Environment = Utils.removeEmpty(f.apply(blob));
    }
    return obj;
  }

  public ai.verta.modeldb.versioning.Blob.Builder toProto() {
    ai.verta.modeldb.versioning.Blob.Builder builder =
        ai.verta.modeldb.versioning.Blob.newBuilder();
    {
      if (this.Code != null && !this.Code.equals(null)) {
        Function<ai.verta.modeldb.versioning.Blob.Builder, Void> f =
            x -> {
              builder.setCode(this.Code.toProto());
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.Config != null && !this.Config.equals(null)) {
        Function<ai.verta.modeldb.versioning.Blob.Builder, Void> f =
            x -> {
              builder.setConfig(this.Config.toProto());
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.Dataset != null && !this.Dataset.equals(null)) {
        Function<ai.verta.modeldb.versioning.Blob.Builder, Void> f =
            x -> {
              builder.setDataset(this.Dataset.toProto());
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.Environment != null && !this.Environment.equals(null)) {
        Function<ai.verta.modeldb.versioning.Blob.Builder, Void> f =
            x -> {
              builder.setEnvironment(this.Environment.toProto());
              return null;
            };
        f.apply(builder);
      }
    }
    return builder;
  }

  public void preVisitShallow(Visitor visitor) throws ModelDBException {
    visitor.preVisitBlob(this);
  }

  public void preVisitDeep(Visitor visitor) throws ModelDBException {
    this.preVisitShallow(visitor);
    visitor.preVisitDeepCodeBlob(this.Code);
    visitor.preVisitDeepConfigBlob(this.Config);
    visitor.preVisitDeepDatasetBlob(this.Dataset);
    visitor.preVisitDeepEnvironmentBlob(this.Environment);
  }

  public Blob postVisitShallow(Visitor visitor) throws ModelDBException {
    return visitor.postVisitBlob(this);
  }

  public Blob postVisitDeep(Visitor visitor) throws ModelDBException {
    this.setCode(visitor.postVisitDeepCodeBlob(this.Code));
    this.setConfig(visitor.postVisitDeepConfigBlob(this.Config));
    this.setDataset(visitor.postVisitDeepDatasetBlob(this.Dataset));
    this.setEnvironment(visitor.postVisitDeepEnvironmentBlob(this.Environment));
    return this.postVisitShallow(visitor);
  }
}
