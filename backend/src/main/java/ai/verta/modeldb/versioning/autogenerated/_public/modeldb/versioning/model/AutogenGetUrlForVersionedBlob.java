// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.diff.*;
import ai.verta.modeldb.versioning.blob.diff.Function3;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;
import com.pholser.junit.quickcheck.generator.*;
import com.pholser.junit.quickcheck.random.*;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.*;
import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import org.apache.commons.codec.binary.Hex;

public class AutogenGetUrlForVersionedBlob implements ProtoType {
  private String CommitSha;
  private List<String> Location;
  private String Method;
  private Long PartNumber;
  private String PathDatasetComponentBlobPath;
  private AutogenRepositoryIdentification RepositoryId;

  public AutogenGetUrlForVersionedBlob() {
    this.CommitSha = "";
    this.Location = null;
    this.Method = "";
    this.PartNumber = 0l;
    this.PathDatasetComponentBlobPath = "";
    this.RepositoryId = null;
  }

  public Boolean isEmpty() {
    if (this.CommitSha != null && !this.CommitSha.equals("")) {
      return false;
    }
    if (this.Location != null && !this.Location.equals(null) && !this.Location.isEmpty()) {
      return false;
    }
    if (this.Method != null && !this.Method.equals("")) {
      return false;
    }
    if (this.PartNumber != null && !this.PartNumber.equals(0l)) {
      return false;
    }
    if (this.PathDatasetComponentBlobPath != null
        && !this.PathDatasetComponentBlobPath.equals("")) {
      return false;
    }
    if (this.RepositoryId != null && !this.RepositoryId.equals(null)) {
      return false;
    }
    return true;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("{\"class\": \"AutogenGetUrlForVersionedBlob\", \"fields\": {");
    boolean first = true;
    if (this.CommitSha != null && !this.CommitSha.equals("")) {
      if (!first) sb.append(", ");
      sb.append("\"CommitSha\": " + "\"" + CommitSha + "\"");
      first = false;
    }
    if (this.Location != null && !this.Location.equals(null) && !this.Location.isEmpty()) {
      if (!first) sb.append(", ");
      sb.append("\"Location\": " + Location);
      first = false;
    }
    if (this.Method != null && !this.Method.equals("")) {
      if (!first) sb.append(", ");
      sb.append("\"Method\": " + "\"" + Method + "\"");
      first = false;
    }
    if (this.PartNumber != null && !this.PartNumber.equals(0l)) {
      if (!first) sb.append(", ");
      sb.append("\"PartNumber\": " + PartNumber);
      first = false;
    }
    if (this.PathDatasetComponentBlobPath != null
        && !this.PathDatasetComponentBlobPath.equals("")) {
      if (!first) sb.append(", ");
      sb.append("\"PathDatasetComponentBlobPath\": " + "\"" + PathDatasetComponentBlobPath + "\"");
      first = false;
    }
    if (this.RepositoryId != null && !this.RepositoryId.equals(null)) {
      if (!first) sb.append(", ");
      sb.append("\"RepositoryId\": " + RepositoryId);
      first = false;
    }
    sb.append("}}");
    return sb.toString();
  }

  // TODO: actually hash
  public String getSHA() throws NoSuchAlgorithmException {
    MessageDigest digest = MessageDigest.getInstance("SHA-256");
    byte[] hash = digest.digest(this.toString().getBytes(StandardCharsets.UTF_8));
    return new String(new Hex().encode(hash));
  }

  @Override
  public int hashCode() {
    return Objects.hash(this.toString());
  }

  // TODO: not consider order on lists
  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null) return false;
    if (!(o instanceof AutogenGetUrlForVersionedBlob)) return false;
    AutogenGetUrlForVersionedBlob other = (AutogenGetUrlForVersionedBlob) o;

    {
      Function3<String, String, Boolean> f = (x, y) -> x.equals(y);
      if (this.CommitSha != null || other.CommitSha != null) {
        if (this.CommitSha == null && other.CommitSha != null) return false;
        if (this.CommitSha != null && other.CommitSha == null) return false;
        if (!f.apply(this.CommitSha, other.CommitSha)) return false;
      }
    }
    {
      Function3<List<String>, List<String>, Boolean> f =
          (x2, y2) ->
              IntStream.range(0, Math.min(x2.size(), y2.size()))
                  .mapToObj(
                      i -> {
                        Function3<String, String, Boolean> f2 = (x, y) -> x.equals(y);
                        return f2.apply(x2.get(i), y2.get(i));
                      })
                  .filter(x -> x.equals(false))
                  .collect(Collectors.toList())
                  .isEmpty();
      if (this.Location != null || other.Location != null) {
        if (this.Location == null && other.Location != null) return false;
        if (this.Location != null && other.Location == null) return false;
        if (!f.apply(this.Location, other.Location)) return false;
      }
    }
    {
      Function3<String, String, Boolean> f = (x, y) -> x.equals(y);
      if (this.Method != null || other.Method != null) {
        if (this.Method == null && other.Method != null) return false;
        if (this.Method != null && other.Method == null) return false;
        if (!f.apply(this.Method, other.Method)) return false;
      }
    }
    {
      Function3<Long, Long, Boolean> f = (x, y) -> x.equals(y);
      if (this.PartNumber != null || other.PartNumber != null) {
        if (this.PartNumber == null && other.PartNumber != null) return false;
        if (this.PartNumber != null && other.PartNumber == null) return false;
        if (!f.apply(this.PartNumber, other.PartNumber)) return false;
      }
    }
    {
      Function3<String, String, Boolean> f = (x, y) -> x.equals(y);
      if (this.PathDatasetComponentBlobPath != null || other.PathDatasetComponentBlobPath != null) {
        if (this.PathDatasetComponentBlobPath == null && other.PathDatasetComponentBlobPath != null)
          return false;
        if (this.PathDatasetComponentBlobPath != null && other.PathDatasetComponentBlobPath == null)
          return false;
        if (!f.apply(this.PathDatasetComponentBlobPath, other.PathDatasetComponentBlobPath))
          return false;
      }
    }
    {
      Function3<AutogenRepositoryIdentification, AutogenRepositoryIdentification, Boolean> f =
          (x, y) -> x.equals(y);
      if (this.RepositoryId != null || other.RepositoryId != null) {
        if (this.RepositoryId == null && other.RepositoryId != null) return false;
        if (this.RepositoryId != null && other.RepositoryId == null) return false;
        if (!f.apply(this.RepositoryId, other.RepositoryId)) return false;
      }
    }
    return true;
  }

  public AutogenGetUrlForVersionedBlob setCommitSha(String value) {
    this.CommitSha = Utils.removeEmpty(value);
    return this;
  }

  public String getCommitSha() {
    return this.CommitSha;
  }

  public AutogenGetUrlForVersionedBlob setLocation(List<String> value) {
    this.Location = Utils.removeEmpty(value);
    return this;
  }

  public List<String> getLocation() {
    return this.Location;
  }

  public AutogenGetUrlForVersionedBlob setMethod(String value) {
    this.Method = Utils.removeEmpty(value);
    return this;
  }

  public String getMethod() {
    return this.Method;
  }

  public AutogenGetUrlForVersionedBlob setPartNumber(Long value) {
    this.PartNumber = Utils.removeEmpty(value);
    return this;
  }

  public Long getPartNumber() {
    return this.PartNumber;
  }

  public AutogenGetUrlForVersionedBlob setPathDatasetComponentBlobPath(String value) {
    this.PathDatasetComponentBlobPath = Utils.removeEmpty(value);
    return this;
  }

  public String getPathDatasetComponentBlobPath() {
    return this.PathDatasetComponentBlobPath;
  }

  public AutogenGetUrlForVersionedBlob setRepositoryId(AutogenRepositoryIdentification value) {
    this.RepositoryId = Utils.removeEmpty(value);
    return this;
  }

  public AutogenRepositoryIdentification getRepositoryId() {
    return this.RepositoryId;
  }

  public static AutogenGetUrlForVersionedBlob fromProto(
      ai.verta.modeldb.versioning.GetUrlForVersionedBlob blob) {
    if (blob == null) {
      return null;
    }

    AutogenGetUrlForVersionedBlob obj = new AutogenGetUrlForVersionedBlob();
    {
      Function<ai.verta.modeldb.versioning.GetUrlForVersionedBlob, String> f =
          x -> (blob.getCommitSha());
      obj.setCommitSha(f.apply(blob));
    }
    {
      Function<ai.verta.modeldb.versioning.GetUrlForVersionedBlob, List<String>> f =
          x -> blob.getLocationList();
      obj.setLocation(f.apply(blob));
    }
    {
      Function<ai.verta.modeldb.versioning.GetUrlForVersionedBlob, String> f =
          x -> (blob.getMethod());
      obj.setMethod(f.apply(blob));
    }
    {
      Function<ai.verta.modeldb.versioning.GetUrlForVersionedBlob, Long> f =
          x -> (blob.getPartNumber());
      obj.setPartNumber(f.apply(blob));
    }
    {
      Function<ai.verta.modeldb.versioning.GetUrlForVersionedBlob, String> f =
          x -> (blob.getPathDatasetComponentBlobPath());
      obj.setPathDatasetComponentBlobPath(f.apply(blob));
    }
    {
      Function<ai.verta.modeldb.versioning.GetUrlForVersionedBlob, AutogenRepositoryIdentification>
          f = x -> AutogenRepositoryIdentification.fromProto(blob.getRepositoryId());
      obj.setRepositoryId(f.apply(blob));
    }
    return obj;
  }

  public ai.verta.modeldb.versioning.GetUrlForVersionedBlob.Builder toProto() {
    ai.verta.modeldb.versioning.GetUrlForVersionedBlob.Builder builder =
        ai.verta.modeldb.versioning.GetUrlForVersionedBlob.newBuilder();
    {
      if (this.CommitSha != null && !this.CommitSha.equals("")) {
        Function<ai.verta.modeldb.versioning.GetUrlForVersionedBlob.Builder, Void> f =
            x -> {
              builder.setCommitSha(this.CommitSha);
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.Location != null && !this.Location.equals(null) && !this.Location.isEmpty()) {
        Function<ai.verta.modeldb.versioning.GetUrlForVersionedBlob.Builder, Void> f =
            x -> {
              builder.addAllLocation(this.Location);
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.Method != null && !this.Method.equals("")) {
        Function<ai.verta.modeldb.versioning.GetUrlForVersionedBlob.Builder, Void> f =
            x -> {
              builder.setMethod(this.Method);
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.PartNumber != null && !this.PartNumber.equals(0l)) {
        Function<ai.verta.modeldb.versioning.GetUrlForVersionedBlob.Builder, Void> f =
            x -> {
              builder.setPartNumber(this.PartNumber);
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.PathDatasetComponentBlobPath != null
          && !this.PathDatasetComponentBlobPath.equals("")) {
        Function<ai.verta.modeldb.versioning.GetUrlForVersionedBlob.Builder, Void> f =
            x -> {
              builder.setPathDatasetComponentBlobPath(this.PathDatasetComponentBlobPath);
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.RepositoryId != null && !this.RepositoryId.equals(null)) {
        Function<ai.verta.modeldb.versioning.GetUrlForVersionedBlob.Builder, Void> f =
            x -> {
              builder.setRepositoryId(this.RepositoryId.toProto());
              return null;
            };
        f.apply(builder);
      }
    }
    return builder;
  }

  public void preVisitShallow(Visitor visitor) throws ModelDBException {
    visitor.preVisitAutogenGetUrlForVersionedBlob(this);
  }

  public void preVisitDeep(Visitor visitor) throws ModelDBException {
    this.preVisitShallow(visitor);
    visitor.preVisitDeepString(this.CommitSha);
    visitor.preVisitDeepListOfString(this.Location);

    visitor.preVisitDeepString(this.Method);
    visitor.preVisitDeepLong(this.PartNumber);
    visitor.preVisitDeepString(this.PathDatasetComponentBlobPath);
    visitor.preVisitDeepAutogenRepositoryIdentification(this.RepositoryId);
  }

  public AutogenGetUrlForVersionedBlob postVisitShallow(Visitor visitor) throws ModelDBException {
    return visitor.postVisitAutogenGetUrlForVersionedBlob(this);
  }

  public AutogenGetUrlForVersionedBlob postVisitDeep(Visitor visitor) throws ModelDBException {
    this.setCommitSha(visitor.postVisitDeepString(this.CommitSha));
    this.setLocation(visitor.postVisitDeepListOfString(this.Location));

    this.setMethod(visitor.postVisitDeepString(this.Method));
    this.setPartNumber(visitor.postVisitDeepLong(this.PartNumber));
    this.setPathDatasetComponentBlobPath(
        visitor.postVisitDeepString(this.PathDatasetComponentBlobPath));
    this.setRepositoryId(visitor.postVisitDeepAutogenRepositoryIdentification(this.RepositoryId));
    return this.postVisitShallow(visitor);
  }
}
