package ai.verta.modeldb.versioning.blob.container;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model.AutogenHyperparameterSetConfigBlob;
import ai.verta.modeldb.versioning.blob.visitors.Validator;
import io.grpc.Status.Code;

public class HyperparameterSetConfigContainer implements BlobContainerBase {

  private final AutogenHyperparameterSetConfigBlob autogenHyperparameterSetConfigBlob;
  private final Validator validator;

  public HyperparameterSetConfigContainer(
      AutogenHyperparameterSetConfigBlob autogenHyperparameterSetConfigBlob,
      Validator validator) {
    this.autogenHyperparameterSetConfigBlob = autogenHyperparameterSetConfigBlob;
    this.validator = validator;
  }

  @Override
  public void validate() throws ModelDBException {
    final String name = autogenHyperparameterSetConfigBlob.getName();
    if (name.isEmpty()) {
      throw new ModelDBException("Hyperparameter set name is empty", Code.INVALID_ARGUMENT);
    }
    validator.preVisitDeepAutogenHyperparameterSetConfigBlob(autogenHyperparameterSetConfigBlob);
  }

}
