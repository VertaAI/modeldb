// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.diff.*;
import ai.verta.modeldb.versioning.blob.diff.Function3;
import ai.verta.modeldb.versioning.blob.visitors.Visitor;
import com.pholser.junit.quickcheck.generator.*;
import com.pholser.junit.quickcheck.random.*;
import java.util.*;
import java.util.function.Function;

public class EnvironmentVariablesDiff implements ProtoType {
  public String Name;
  public DiffStatusEnumDiffStatus Status;
  public String ValueA;
  public String ValueB;

  public EnvironmentVariablesDiff() {
    this.Name = "";
    this.Status = null;
    this.ValueA = "";
    this.ValueB = "";
  }

  public Boolean isEmpty() {
    if (this.Name != null && !this.Name.equals("")) {
      return false;
    }
    if (this.Status != null && !this.Status.equals(null)) {
      return false;
    }
    if (this.ValueA != null && !this.ValueA.equals("")) {
      return false;
    }
    if (this.ValueB != null && !this.ValueB.equals("")) {
      return false;
    }
    return true;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("{\"class\": \"EnvironmentVariablesDiff\", \"fields\": {");
    boolean first = true;
    if (this.Name != null && !this.Name.equals("")) {
      if (!first) sb.append(", ");
      sb.append("\"Name\": " + "\"" + Name + "\"");
      first = false;
    }
    if (this.Status != null && !this.Status.equals(null)) {
      if (!first) sb.append(", ");
      sb.append("\"Status\": " + Status);
      first = false;
    }
    if (this.ValueA != null && !this.ValueA.equals("")) {
      if (!first) sb.append(", ");
      sb.append("\"ValueA\": " + "\"" + ValueA + "\"");
      first = false;
    }
    if (this.ValueB != null && !this.ValueB.equals("")) {
      if (!first) sb.append(", ");
      sb.append("\"ValueB\": " + "\"" + ValueB + "\"");
      first = false;
    }
    sb.append("}}");
    return sb.toString();
  }

  // TODO: actually hash
  public String getSHA() {
    StringBuilder sb = new StringBuilder();
    sb.append("EnvironmentVariablesDiff");
    if (this.Name != null && !this.Name.equals("")) {
      sb.append("::Name::").append(Name);
    }
    if (this.Status != null && !this.Status.equals(null)) {
      sb.append("::Status::").append(Status);
    }
    if (this.ValueA != null && !this.ValueA.equals("")) {
      sb.append("::ValueA::").append(ValueA);
    }
    if (this.ValueB != null && !this.ValueB.equals("")) {
      sb.append("::ValueB::").append(ValueB);
    }

    return sb.toString();
  }

  // TODO: not consider order on lists
  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null) return false;
    if (!(o instanceof EnvironmentVariablesDiff)) return false;
    EnvironmentVariablesDiff other = (EnvironmentVariablesDiff) o;

    {
      Function3<String, String, Boolean> f = (x, y) -> x.equals(y);
      if (this.Name != null || other.Name != null) {
        if (this.Name == null && other.Name != null) return false;
        if (this.Name != null && other.Name == null) return false;
        if (!f.apply(this.Name, other.Name)) return false;
      }
    }
    {
      Function3<DiffStatusEnumDiffStatus, DiffStatusEnumDiffStatus, Boolean> f =
          (x, y) -> x.equals(y);
      if (this.Status != null || other.Status != null) {
        if (this.Status == null && other.Status != null) return false;
        if (this.Status != null && other.Status == null) return false;
        if (!f.apply(this.Status, other.Status)) return false;
      }
    }
    {
      Function3<String, String, Boolean> f = (x, y) -> x.equals(y);
      if (this.ValueA != null || other.ValueA != null) {
        if (this.ValueA == null && other.ValueA != null) return false;
        if (this.ValueA != null && other.ValueA == null) return false;
        if (!f.apply(this.ValueA, other.ValueA)) return false;
      }
    }
    {
      Function3<String, String, Boolean> f = (x, y) -> x.equals(y);
      if (this.ValueB != null || other.ValueB != null) {
        if (this.ValueB == null && other.ValueB != null) return false;
        if (this.ValueB != null && other.ValueB == null) return false;
        if (!f.apply(this.ValueB, other.ValueB)) return false;
      }
    }
    return true;
  }

  @Override
  public int hashCode() {
    return Objects.hash(this.Name, this.Status, this.ValueA, this.ValueB);
  }

  public EnvironmentVariablesDiff setName(String value) {
    this.Name = Utils.removeEmpty(value);
    return this;
  }

  public EnvironmentVariablesDiff setStatus(DiffStatusEnumDiffStatus value) {
    this.Status = Utils.removeEmpty(value);
    return this;
  }

  public EnvironmentVariablesDiff setValueA(String value) {
    this.ValueA = Utils.removeEmpty(value);
    return this;
  }

  public EnvironmentVariablesDiff setValueB(String value) {
    this.ValueB = Utils.removeEmpty(value);
    return this;
  }

  public static EnvironmentVariablesDiff fromProto(
      ai.verta.modeldb.versioning.EnvironmentVariablesDiff blob) {
    if (blob == null) {
      return null;
    }

    EnvironmentVariablesDiff obj = new EnvironmentVariablesDiff();
    {
      Function<ai.verta.modeldb.versioning.EnvironmentVariablesDiff, String> f =
          x -> (blob.getName());
      obj.Name = Utils.removeEmpty(f.apply(blob));
    }
    {
      Function<ai.verta.modeldb.versioning.EnvironmentVariablesDiff, DiffStatusEnumDiffStatus> f =
          x -> DiffStatusEnumDiffStatus.fromProto(blob.getStatus());
      obj.Status = Utils.removeEmpty(f.apply(blob));
    }
    {
      Function<ai.verta.modeldb.versioning.EnvironmentVariablesDiff, String> f =
          x -> (blob.getValueA());
      obj.ValueA = Utils.removeEmpty(f.apply(blob));
    }
    {
      Function<ai.verta.modeldb.versioning.EnvironmentVariablesDiff, String> f =
          x -> (blob.getValueB());
      obj.ValueB = Utils.removeEmpty(f.apply(blob));
    }
    return obj;
  }

  public ai.verta.modeldb.versioning.EnvironmentVariablesDiff.Builder toProto() {
    ai.verta.modeldb.versioning.EnvironmentVariablesDiff.Builder builder =
        ai.verta.modeldb.versioning.EnvironmentVariablesDiff.newBuilder();
    {
      if (this.Name != null && !this.Name.equals("")) {
        Function<ai.verta.modeldb.versioning.EnvironmentVariablesDiff.Builder, Void> f =
            x -> {
              builder.setName(this.Name);
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.Status != null && !this.Status.equals(null)) {
        Function<ai.verta.modeldb.versioning.EnvironmentVariablesDiff.Builder, Void> f =
            x -> {
              builder.setStatus(this.Status.toProto());
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.ValueA != null && !this.ValueA.equals("")) {
        Function<ai.verta.modeldb.versioning.EnvironmentVariablesDiff.Builder, Void> f =
            x -> {
              builder.setValueA(this.ValueA);
              return null;
            };
        f.apply(builder);
      }
    }
    {
      if (this.ValueB != null && !this.ValueB.equals("")) {
        Function<ai.verta.modeldb.versioning.EnvironmentVariablesDiff.Builder, Void> f =
            x -> {
              builder.setValueB(this.ValueB);
              return null;
            };
        f.apply(builder);
      }
    }
    return builder;
  }

  public void preVisitShallow(Visitor visitor) throws ModelDBException {
    visitor.preVisitEnvironmentVariablesDiff(this);
  }

  public void preVisitDeep(Visitor visitor) throws ModelDBException {
    this.preVisitShallow(visitor);
    visitor.preVisitDeepString(this.Name);
    visitor.preVisitDeepDiffStatusEnumDiffStatus(this.Status);
    visitor.preVisitDeepString(this.ValueA);
    visitor.preVisitDeepString(this.ValueB);
  }

  public EnvironmentVariablesDiff postVisitShallow(Visitor visitor) throws ModelDBException {
    return visitor.postVisitEnvironmentVariablesDiff(this);
  }

  public EnvironmentVariablesDiff postVisitDeep(Visitor visitor) throws ModelDBException {
    this.setName(visitor.postVisitDeepString(this.Name));
    this.setStatus(visitor.postVisitDeepDiffStatusEnumDiffStatus(this.Status));
    this.setValueA(visitor.postVisitDeepString(this.ValueA));
    this.setValueB(visitor.postVisitDeepString(this.ValueB));
    return this.postVisitShallow(visitor);
  }
}
