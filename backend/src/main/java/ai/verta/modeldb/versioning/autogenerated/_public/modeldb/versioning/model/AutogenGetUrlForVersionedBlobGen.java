// THIS FILE IS AUTO-GENERATED. DO NOT EDIT
package ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model;

import ai.verta.modeldb.versioning.*;
import ai.verta.modeldb.versioning.blob.diff.*;
import com.pholser.junit.quickcheck.generator.*;
import com.pholser.junit.quickcheck.generator.java.util.*;
import com.pholser.junit.quickcheck.random.*;
import java.util.*;

public class AutogenGetUrlForVersionedBlobGen extends Generator<AutogenGetUrlForVersionedBlob> {
  public AutogenGetUrlForVersionedBlobGen() {
    super(AutogenGetUrlForVersionedBlob.class);
  }

  @Override
  public AutogenGetUrlForVersionedBlob generate(SourceOfRandomness r, GenerationStatus status) {
    // if (r.nextBoolean())
    //     return null;

    AutogenGetUrlForVersionedBlob obj = new AutogenGetUrlForVersionedBlob();
    if (r.nextBoolean()) {
      obj.setCommitSha(Utils.removeEmpty(new StringGenerator().generate(r, status)));
    }
    if (r.nextBoolean()) {
      int size = r.nextInt(0, 10);
      List<String> ret = new ArrayList(size);
      for (int i = 0; i < size; i++) {
        ret.add(new StringGenerator().generate(r, status));
      }
      obj.setLocation(Utils.removeEmpty(ret));
    }
    if (r.nextBoolean()) {
      obj.setMethod(Utils.removeEmpty(new StringGenerator().generate(r, status)));
    }
    if (r.nextBoolean()) {
      obj.setPartNumber(Utils.removeEmpty(gen().type(Long.class).generate(r, status)));
    }
    if (r.nextBoolean()) {
      obj.setPathDatasetComponentBlobPath(
          Utils.removeEmpty(new StringGenerator().generate(r, status)));
    }
    if (r.nextBoolean()) {
      obj.setRepositoryId(
          Utils.removeEmpty(gen().type(AutogenRepositoryIdentification.class).generate(r, status)));
    }
    return obj;
  }
}
