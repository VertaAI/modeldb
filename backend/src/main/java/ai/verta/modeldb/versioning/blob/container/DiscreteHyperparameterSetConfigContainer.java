package ai.verta.modeldb.versioning.blob.container;

import ai.verta.modeldb.ModelDBException;
import ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model.AutogenContinuousHyperparameterSetConfigBlob;
import ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model.AutogenDiscreteHyperparameterSetConfigBlob;
import ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model.AutogenHyperparameterValuesConfigBlob;
import io.grpc.Status.Code;

public class DiscreteHyperparameterSetConfigContainer implements BlobContainerBase {

  private final AutogenDiscreteHyperparameterSetConfigBlob autogenDiscreteHyperparameterSetConfigBlob;

  public DiscreteHyperparameterSetConfigContainer(AutogenDiscreteHyperparameterSetConfigBlob autogenDiscreteHyperparameterSetConfigBlob) {
    this.autogenDiscreteHyperparameterSetConfigBlob = autogenDiscreteHyperparameterSetConfigBlob;
  }

  @Override
  public void validate() throws ModelDBException {
    if (autogenDiscreteHyperparameterSetConfigBlob.getValues() == null || autogenDiscreteHyperparameterSetConfigBlob.getValues().size() == 0) {
      throw new ModelDBException("No values for set found");
    }
  }

  private boolean isNull(AutogenHyperparameterValuesConfigBlob beginSetConfigBlob) {
    return beginSetConfigBlob.getFloatValue() == null && beginSetConfigBlob.getIntValue() == null && beginSetConfigBlob.getStringValue() == null;
  }

}
