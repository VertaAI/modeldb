
-- H2 2.1.214;
SET DB_CLOSE_DELAY -1;
;
CREATE USER IF NOT EXISTS "SA" SALT '60a1b60063febe69' HASH '6be81f507cd19d4282527ccfd086ef287403aea65656c2adcae67979698268bd' ADMIN;
CREATE SEQUENCE "HIBERNATE_SEQUENCE" START WITH 1;
CREATE MEMORY TABLE "ARTIFACT_STORE"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "CLIENT_KEY" CHARACTER LARGE OBJECT,
    "CLOUD_STORAGE_FILE_PATH" CHARACTER LARGE OBJECT,
    "CLOUD_STORAGE_KEY" CHARACTER LARGE OBJECT,
    "ENTITY_ID" CHARACTER VARYING(50),
    "ENTITY_NAME" CHARACTER VARYING(50)
);
ALTER TABLE "ARTIFACT_STORE" ADD CONSTRAINT "PK_ARTIFACT_STORE" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM ARTIFACT_STORE;
CREATE MEMORY TABLE "COMMENT"(
    "ID" CHARACTER VARYING(255) NOT NULL,
    "ENTITY_ID" CHARACTER VARYING(255),
    "ENTITY_NAME" CHARACTER VARYING(255)
);
ALTER TABLE "COMMENT" ADD CONSTRAINT "PK_COMMENT" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM COMMENT;
CREATE INDEX "C_E_ID" ON "COMMENT"("ENTITY_ID" NULLS FIRST);
CREATE MEMORY TABLE "DATASET_VERSION"(
    "ID" CHARACTER VARYING(255) NOT NULL,
    "DATASET_ID" CHARACTER VARYING(255),
    "DATASET_TYPE" INTEGER,
    "DATASET_VERSION_VISIBILITY" INTEGER,
    "DESCRIPTION" CHARACTER LARGE OBJECT,
    "OWNER" CHARACTER VARYING(255),
    "PARENT_ID" CHARACTER VARYING(255),
    "TIME_LOGGED" BIGINT,
    "TIME_UPDATED" BIGINT,
    "VERSION" BIGINT,
    "PATH_DATASET_VERSION_INFO_ID" BIGINT,
    "QUERY_DATASET_VERSION_INFO_ID" BIGINT,
    "RAW_DATASET_VERSION_INFO_ID" BIGINT,
    "DELETED" BOOLEAN DEFAULT 'false'
);
ALTER TABLE "DATASET_VERSION" ADD CONSTRAINT "PK_DATASET_VERSION" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM DATASET_VERSION;
CREATE INDEX "DSV_QDSV_ID" ON "DATASET_VERSION"("QUERY_DATASET_VERSION_INFO_ID" NULLS FIRST);
CREATE INDEX "DSV_RDSV_ID" ON "DATASET_VERSION"("RAW_DATASET_VERSION_INFO_ID" NULLS FIRST);
CREATE INDEX "DSV_PDSV_ID" ON "DATASET_VERSION"("PATH_DATASET_VERSION_INFO_ID" NULLS FIRST);
CREATE INDEX "INDEX_DV_DATASET_ID_TIME_UPDATED" ON "DATASET_VERSION"("DATASET_ID" NULLS FIRST, "TIME_UPDATED" NULLS FIRST);
CREATE INDEX "INDEX_DV_DATASET_ID" ON "DATASET_VERSION"("DATASET_ID" NULLS FIRST);
CREATE INDEX "INDEX_DATASET_VERSION_ID_DELETED" ON "DATASET_VERSION"("ID" NULLS FIRST, "DELETED" NULLS FIRST);
CREATE INDEX "INDEX_DATASET_VERSION_DATASET_ID_VERSION_DELETED" ON "DATASET_VERSION"("DATASET_ID" NULLS FIRST, "VERSION" NULLS FIRST, "DELETED" NULLS FIRST);
CREATE INDEX "INDEX_DATASET_VERSION_DELETED" ON "DATASET_VERSION"("DELETED" NULLS FIRST);
CREATE MEMORY TABLE "GIT_SNAPSHOT"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "FIELD_TYPE" CHARACTER VARYING(50),
    "HASH" CHARACTER VARYING(255),
    "IS_DIRTY" INTEGER,
    "REPO" CHARACTER VARYING(255)
);
ALTER TABLE "GIT_SNAPSHOT" ADD CONSTRAINT "PK_GIT_SNAPSHOT" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM GIT_SNAPSHOT;
CREATE MEMORY TABLE "JOB"(
    "ID" CHARACTER VARYING(255) NOT NULL,
    "DESCRIPTION" CHARACTER LARGE OBJECT,
    "END_TIME" CHARACTER VARYING(255),
    "JOB_STATUS" INTEGER,
    "JOB_TYPE" INTEGER,
    "OWNER" CHARACTER VARYING(255),
    "START_TIME" CHARACTER VARYING(255)
);
ALTER TABLE "JOB" ADD CONSTRAINT "PK_JOB" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM JOB;
CREATE MEMORY TABLE "PATH_DATASET_VERSION_INFO"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "BASE_PATH" CHARACTER VARYING(255),
    "FIELD_TYPE" CHARACTER VARYING(50),
    "LOCATION_TYPE" INTEGER,
    "SIZE" BIGINT
);
ALTER TABLE "PATH_DATASET_VERSION_INFO" ADD CONSTRAINT "PK_PATH_DATASET_VERSION_INFO" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM PATH_DATASET_VERSION_INFO;
CREATE MEMORY TABLE "QUERY_DATASET_VERSION_INFO"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "DATA_SOURCE_URI" CHARACTER VARYING(255),
    "EXECUTION_TIMESTAMP" BIGINT,
    "FIELD_TYPE" CHARACTER VARYING(50),
    "NUM_RECORDS" BIGINT,
    "QUERY" CHARACTER LARGE OBJECT,
    "QUERY_TEMPLATE" CHARACTER LARGE OBJECT
);
ALTER TABLE "QUERY_DATASET_VERSION_INFO" ADD CONSTRAINT "PK_QUERY_DATASET_VERSION_INFO" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM QUERY_DATASET_VERSION_INFO;
CREATE MEMORY TABLE "RAW_DATASET_VERSION_INFO"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "CHECKSUM" CHARACTER VARYING(255),
    "FIELD_TYPE" CHARACTER VARYING(50),
    "NUM_RECORDS" BIGINT,
    "OBJECT_PATH" CHARACTER VARYING(255),
    "SIZE" BIGINT
);
ALTER TABLE "RAW_DATASET_VERSION_INFO" ADD CONSTRAINT "PK_RAW_DATASET_VERSION_INFO" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM RAW_DATASET_VERSION_INFO;
CREATE MEMORY TABLE "DATASET_PART_INFO"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "CHECKSUM" CHARACTER VARYING(255),
    "ENTITY_NAME" CHARACTER VARYING(50),
    "FIELD_TYPE" CHARACTER VARYING(50),
    "LAST_MODIFIED_AT_SOURCE" BIGINT,
    "PATH" CHARACTER VARYING(255),
    "SIZE" BIGINT,
    "PATH_DATASET_VERSION_INFO_ID" BIGINT
);
ALTER TABLE "DATASET_PART_INFO" ADD CONSTRAINT "PK_DATASET_PART_INFO" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM DATASET_PART_INFO;
CREATE INDEX "DSP_PDSV_ID" ON "DATASET_PART_INFO"("PATH_DATASET_VERSION_INFO_ID" NULLS FIRST);
CREATE MEMORY TABLE "COMMIT"(
    "COMMIT_HASH" CHARACTER VARYING(64) NOT NULL,
    "DATE_CREATED" BIGINT,
    "MESSAGE" CHARACTER LARGE OBJECT,
    "AUTHOR" CHARACTER VARYING(50),
    "ROOT_SHA" CHARACTER VARYING(64),
    "DATE_UPDATED" BIGINT,
    "VERSION_NUMBER" BIGINT DEFAULT '1'
);
ALTER TABLE "COMMIT" ADD CONSTRAINT "PK_COMMIT" PRIMARY KEY("COMMIT_HASH");
-- 0 +/- SELECT COUNT(*) FROM COMMIT;
CREATE INDEX "INDEX_COMMIT_HASH_DATE_CREATED" ON "COMMIT"("COMMIT_HASH" NULLS FIRST, "DATE_CREATED" NULLS FIRST);
CREATE MEMORY TABLE "S3_DATASET_COMPONENT_BLOB"(
    "S3_DATASET_BLOB_ID" CHARACTER VARYING(64) NOT NULL,
    "BLOB_HASH" CHARACTER VARYING(64) NOT NULL,
    "LAST_MODIFIED_AT_SOURCE" BIGINT,
    "MD5" CHARACTER LARGE OBJECT,
    "PATH" CHARACTER LARGE OBJECT,
    "SHA256" CHARACTER LARGE OBJECT,
    "SIZE" BIGINT,
    "S3_VERSION_ID" CHARACTER VARYING(255),
    "INTERNAL_VERSIONED_PATH" CHARACTER LARGE OBJECT,
    "BASE_PATH" CHARACTER LARGE OBJECT
);
ALTER TABLE "S3_DATASET_COMPONENT_BLOB" ADD CONSTRAINT "PK_S3_DATASET_COMPONENT" PRIMARY KEY("S3_DATASET_BLOB_ID", "BLOB_HASH");
-- 0 +/- SELECT COUNT(*) FROM S3_DATASET_COMPONENT_BLOB;
CREATE MEMORY TABLE "GIT_SNAPSHOT_FILE_PATHS"(
    "GIT_SNAPSHOT_ID" BIGINT,
    "FILE_PATHS" CHARACTER VARYING(255)
);
-- 0 +/- SELECT COUNT(*) FROM GIT_SNAPSHOT_FILE_PATHS;
CREATE INDEX "GFP_G_ID" ON "GIT_SNAPSHOT_FILE_PATHS"("GIT_SNAPSHOT_ID" NULLS FIRST);
CREATE MEMORY TABLE "QUERY_PARAMETER"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "ENTITY_NAME" CHARACTER VARYING(50),
    "FIELD_TYPE" CHARACTER VARYING(50),
    "PARAMETER_NAME" CHARACTER LARGE OBJECT,
    "PARAMETER_TYPE" INTEGER,
    "PARAMETER_VALUE" CHARACTER LARGE OBJECT,
    "QUERY_DATASET_VERSION_INFO_ID" BIGINT
);
ALTER TABLE "QUERY_PARAMETER" ADD CONSTRAINT "PK_QUERY_PARAMETER" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM QUERY_PARAMETER;
CREATE INDEX "QP_QDSV_ID" ON "QUERY_PARAMETER"("QUERY_DATASET_VERSION_INFO_ID" NULLS FIRST);
CREATE MEMORY TABLE "ARTIFACT"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "ARTIFACT_TYPE" INTEGER,
    "ENTITY_NAME" CHARACTER VARYING(50),
    "FIELD_TYPE" CHARACTER VARYING(50),
    "FILENAME_EXTENSION" CHARACTER VARYING(50),
    "AR_KEY" CHARACTER LARGE OBJECT,
    "LINKED_ARTIFACT_ID" CHARACTER VARYING(255),
    "AR_PATH" CHARACTER LARGE OBJECT,
    "PATH_ONLY" BOOLEAN,
    "EXPERIMENT_ID" CHARACTER VARYING(255),
    "EXPERIMENT_RUN_ID" CHARACTER VARYING(255),
    "PROJECT_ID" CHARACTER VARYING(255),
    "STORE_TYPE_PATH" CHARACTER LARGE OBJECT,
    "UPLOAD_ID" CHARACTER VARYING(255) DEFAULT NULL,
    "UPLOAD_COMPLETED" BOOLEAN DEFAULT 'true',
    "SERIALIZATION" CHARACTER LARGE OBJECT,
    "ARTIFACT_SUBTYPE" CHARACTER VARYING(255)
);
ALTER TABLE "ARTIFACT" ADD CONSTRAINT "PK_ARTIFACT" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM ARTIFACT;
CREATE INDEX "A_E_ID" ON "ARTIFACT"("EXPERIMENT_ID" NULLS FIRST);
CREATE INDEX "A_ER_ID" ON "ARTIFACT"("EXPERIMENT_RUN_ID" NULLS FIRST);
CREATE INDEX "A_P_ID" ON "ARTIFACT"("PROJECT_ID" NULLS FIRST);
CREATE INDEX "A_L_A_ID" ON "ARTIFACT"("LINKED_ARTIFACT_ID" NULLS FIRST);
CREATE MEMORY TABLE "METADATA_PROPERTY_MAPPING"(
    "REPOSITORY_ID" BIGINT NOT NULL,
    "COMMIT_SHA" CHARACTER VARYING(256) NOT NULL,
    "LOCATION" CHARACTER VARYING(256) NOT NULL,
    "METADATA_KEY" CHARACTER VARYING(50) NOT NULL,
    "METADATA_VALUE" CHARACTER LARGE OBJECT
);
ALTER TABLE "METADATA_PROPERTY_MAPPING" ADD CONSTRAINT "PK_METADATA_PROPERTY_MAPPING" PRIMARY KEY("REPOSITORY_ID", "COMMIT_SHA", "LOCATION", "METADATA_KEY");
-- 0 +/- SELECT COUNT(*) FROM METADATA_PROPERTY_MAPPING;
CREATE MEMORY TABLE "CODE_VERSION"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "DATE_LOGGED" BIGINT,
    "FIELD_TYPE" CHARACTER VARYING(50),
    "CODE_ARCHIVE_ID" BIGINT,
    "GIT_SNAPSHOT_ID" BIGINT
);
ALTER TABLE "CODE_VERSION" ADD CONSTRAINT "PK_CODE_VERSION" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM CODE_VERSION;
CREATE INDEX "CV_GSS_ID" ON "CODE_VERSION"("GIT_SNAPSHOT_ID" NULLS FIRST);
CREATE INDEX "CV_CA_ID" ON "CODE_VERSION"("CODE_ARCHIVE_ID" NULLS FIRST);
CREATE MEMORY TABLE "EXPERIMENT_RUN"(
    "ID" CHARACTER VARYING(255) NOT NULL,
    "CODE_VERSION" CHARACTER VARYING(255),
    "DATE_CREATED" BIGINT,
    "DATE_UPDATED" BIGINT,
    "DESCRIPTION" CHARACTER LARGE OBJECT,
    "END_TIME" BIGINT,
    "EXPERIMENT_ID" CHARACTER VARYING(255),
    "JOB_ID" CHARACTER VARYING(255),
    "NAME" CHARACTER VARYING(255),
    "OWNER" CHARACTER VARYING(255),
    "PARENT_ID" CHARACTER VARYING(255),
    "PROJECT_ID" CHARACTER VARYING(255),
    "START_TIME" BIGINT,
    "CODE_VERSION_SNAPSHOT_ID" BIGINT,
    "DELETED" BOOLEAN DEFAULT 'false',
    "ENVIRONMENT" CHARACTER LARGE OBJECT,
    "CREATED" BOOLEAN DEFAULT 'false',
    "VERSION_NUMBER" BIGINT DEFAULT '1'
);
ALTER TABLE "EXPERIMENT_RUN" ADD CONSTRAINT "PK_EXPERIMENT_RUN" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM EXPERIMENT_RUN;
CREATE INDEX "ER_CVS_ID" ON "EXPERIMENT_RUN"("CODE_VERSION_SNAPSHOT_ID" NULLS FIRST);
CREATE INDEX "ER_DC" ON "EXPERIMENT_RUN"("DATE_CREATED" NULLS FIRST);
CREATE INDEX "ER_DP" ON "EXPERIMENT_RUN"("DATE_UPDATED" NULLS FIRST);
CREATE INDEX "ER_N" ON "EXPERIMENT_RUN"("NAME" NULLS FIRST);
CREATE INDEX "ER_O" ON "EXPERIMENT_RUN"("OWNER" NULLS FIRST);
CREATE INDEX "ER_P_ID" ON "EXPERIMENT_RUN"("PROJECT_ID" NULLS FIRST);
CREATE INDEX "ER_EXPERIMENT_ID" ON "EXPERIMENT_RUN"("EXPERIMENT_ID" NULLS FIRST);
CREATE INDEX "INDEX_EXP_RUN_NAME_PROJECT_ID" ON "EXPERIMENT_RUN"("NAME" NULLS FIRST, "PROJECT_ID" NULLS FIRST);
CREATE INDEX "INDEX_EXP_RUN_ID_PROJECT_ID" ON "EXPERIMENT_RUN"("ID" NULLS FIRST, "PROJECT_ID" NULLS FIRST);
CREATE INDEX "INDEX_EXP_RUN_PROJECT_ID_EXPERIMENT_ID" ON "EXPERIMENT_RUN"("PROJECT_ID" NULLS FIRST, "EXPERIMENT_ID" NULLS FIRST);
CREATE INDEX "INDEX_EXP_RUN_EXP_ID_DATE_UPDATED" ON "EXPERIMENT_RUN"("EXPERIMENT_ID" NULLS FIRST, "DATE_UPDATED" NULLS FIRST);
CREATE INDEX "INDEX_EXPERIMENT_RUN_NAME_PRO_ID_EXP_ID_DELETED" ON "EXPERIMENT_RUN"("NAME" NULLS FIRST, "PROJECT_ID" NULLS FIRST, "EXPERIMENT_ID" NULLS FIRST, "DELETED" NULLS FIRST);
CREATE INDEX "INDEX_EXPERIMENT_RUN_ID_DELETED" ON "EXPERIMENT_RUN"("ID" NULLS FIRST, "DELETED" NULLS FIRST);
CREATE INDEX "INDEX_EXPERIMENT_RUN_DELETED" ON "EXPERIMENT_RUN"("DELETED" NULLS FIRST);
CREATE MEMORY TABLE "AUDIT_SERVICE_LOCAL_AUDIT_LOG"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "LOCAL_ID" CHARACTER VARYING(255) NOT NULL,
    "USER_ID" CHARACTER VARYING(255) NOT NULL,
    "ACTION" INTEGER NOT NULL,
    "RESOURCE_TYPE" INTEGER,
    "RESOURCE_SERVICE" INTEGER,
    "TS_NANO" BIGINT,
    "METHOD_NAME" CHARACTER LARGE OBJECT,
    "REQUEST" CHARACTER LARGE OBJECT,
    "RESPONSE" CHARACTER LARGE OBJECT,
    "WORKSPACE_ID" BIGINT
);
ALTER TABLE "AUDIT_SERVICE_LOCAL_AUDIT_LOG" ADD CONSTRAINT "PK_AUDIT_SERVICE_LOCAL_AUDIT_LOG" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM AUDIT_SERVICE_LOCAL_AUDIT_LOG;
CREATE MEMORY TABLE "FEATURE"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "ENTITY_NAME" CHARACTER VARYING(50),
    "FEATURE" CHARACTER LARGE OBJECT,
    "EXPERIMENT_ID" CHARACTER VARYING(255),
    "EXPERIMENT_RUN_ID" CHARACTER VARYING(255),
    "PROJECT_ID" CHARACTER VARYING(255),
    "RAW_DATASET_VERSION_INFO_ID" BIGINT
);
ALTER TABLE "FEATURE" ADD CONSTRAINT "PK_FEATURE" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM FEATURE;
CREATE INDEX "F_RDSV_ID" ON "FEATURE"("RAW_DATASET_VERSION_INFO_ID" NULLS FIRST);
CREATE INDEX "F_ER_ID" ON "FEATURE"("EXPERIMENT_RUN_ID" NULLS FIRST);
CREATE INDEX "F_P_ID" ON "FEATURE"("PROJECT_ID" NULLS FIRST);
CREATE INDEX "F_E_ID" ON "FEATURE"("EXPERIMENT_ID" NULLS FIRST);
CREATE MEMORY TABLE "KEYVALUE"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "ENTITY_NAME" CHARACTER VARYING(50),
    "FIELD_TYPE" CHARACTER VARYING(50),
    "KV_KEY" CHARACTER LARGE OBJECT,
    "KV_VALUE" CHARACTER LARGE OBJECT,
    "VALUE_TYPE" INTEGER,
    "DATASET_ID" CHARACTER VARYING(255),
    "DATASET_VERSION_ID" CHARACTER VARYING(255),
    "EXPERIMENT_ID" CHARACTER VARYING(255),
    "EXPERIMENT_RUN_ID" CHARACTER VARYING(255),
    "JOB_ID" CHARACTER VARYING(255),
    "PROJECT_ID" CHARACTER VARYING(255)
);
ALTER TABLE "KEYVALUE" ADD CONSTRAINT "PK_KEYVALUE" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM KEYVALUE;
CREATE INDEX "KV_DSV_ID" ON "KEYVALUE"("DATASET_VERSION_ID" NULLS FIRST);
CREATE INDEX "KV_P_ID" ON "KEYVALUE"("PROJECT_ID" NULLS FIRST);
CREATE INDEX "KV_J_ID" ON "KEYVALUE"("JOB_ID" NULLS FIRST);
CREATE INDEX "KV_E_ID" ON "KEYVALUE"("EXPERIMENT_ID" NULLS FIRST);
CREATE INDEX "KV_D_ID" ON "KEYVALUE"("DATASET_ID" NULLS FIRST);
CREATE INDEX "KV_ER_ID" ON "KEYVALUE"("EXPERIMENT_RUN_ID" NULLS FIRST);
CREATE INDEX "KV_FIELD_TYPE" ON "KEYVALUE"("FIELD_TYPE" NULLS FIRST);
CREATE MEMORY TABLE "KEY_VALUE_PROPERTY_MAPPING"(
    "ENTITY_HASH" CHARACTER VARYING(256) NOT NULL,
    "PROPERTY_NAME" CHARACTER VARYING(256) NOT NULL,
    "KV_KEY" CHARACTER VARYING(50) NOT NULL,
    "KV_VALUE" CHARACTER LARGE OBJECT
);
ALTER TABLE "KEY_VALUE_PROPERTY_MAPPING" ADD CONSTRAINT "PK_KEY_VALUE_PROPERTY_MAPPING" PRIMARY KEY("ENTITY_HASH", "PROPERTY_NAME", "KV_KEY");
-- 0 +/- SELECT COUNT(*) FROM KEY_VALUE_PROPERTY_MAPPING;
CREATE MEMORY TABLE "TAG_MAPPING"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "ENTITY_NAME" CHARACTER VARYING(50),
    "TAGS" CHARACTER LARGE OBJECT,
    "DATASET_ID" CHARACTER VARYING(255),
    "DATASET_VERSION_ID" CHARACTER VARYING(255),
    "EXPERIMENT_ID" CHARACTER VARYING(255),
    "EXPERIMENT_RUN_ID" CHARACTER VARYING(255),
    "PROJECT_ID" CHARACTER VARYING(255)
);
ALTER TABLE "TAG_MAPPING" ADD CONSTRAINT "PK_TAG_MAPPING" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM TAG_MAPPING;
CREATE INDEX "T_E_ID" ON "TAG_MAPPING"("EXPERIMENT_ID" NULLS FIRST);
CREATE INDEX "T_DSV_ID" ON "TAG_MAPPING"("DATASET_VERSION_ID" NULLS FIRST);
CREATE INDEX "T_DS_ID" ON "TAG_MAPPING"("DATASET_ID" NULLS FIRST);
CREATE INDEX "T_P_ID" ON "TAG_MAPPING"("PROJECT_ID" NULLS FIRST);
CREATE INDEX "T_ER_ID" ON "TAG_MAPPING"("EXPERIMENT_RUN_ID" NULLS FIRST);
CREATE MEMORY TABLE "ATTRIBUTE"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "ENTITY_NAME" CHARACTER VARYING(50),
    "FIELD_TYPE" CHARACTER VARYING(50),
    "KV_KEY" CHARACTER LARGE OBJECT,
    "KV_VALUE" CHARACTER LARGE OBJECT,
    "VALUE_TYPE" INTEGER,
    "DATASET_ID" CHARACTER VARYING(255),
    "DATASET_VERSION_ID" CHARACTER VARYING(255),
    "EXPERIMENT_ID" CHARACTER VARYING(255),
    "EXPERIMENT_RUN_ID" CHARACTER VARYING(255),
    "JOB_ID" CHARACTER VARYING(255),
    "PROJECT_ID" CHARACTER VARYING(255),
    "REPOSITORY_ID" BIGINT,
    "ENTITY_HASH" CHARACTER VARYING(255)
);
ALTER TABLE "ATTRIBUTE" ADD CONSTRAINT "PK_ATTRIBUTE" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM ATTRIBUTE;
CREATE INDEX "AT_D_ID" ON "ATTRIBUTE"("DATASET_ID" NULLS FIRST);
CREATE INDEX "AT_DSV_ID" ON "ATTRIBUTE"("DATASET_VERSION_ID" NULLS FIRST);
CREATE INDEX "AT_E_ID" ON "ATTRIBUTE"("EXPERIMENT_ID" NULLS FIRST);
CREATE INDEX "AT_ER_ID" ON "ATTRIBUTE"("EXPERIMENT_RUN_ID" NULLS FIRST);
CREATE INDEX "AT_J_ID" ON "ATTRIBUTE"("JOB_ID" NULLS FIRST);
CREATE INDEX "AT_P_ID" ON "ATTRIBUTE"("PROJECT_ID" NULLS FIRST);
CREATE INDEX "ATTR_ID" ON "ATTRIBUTE"("ID" NULLS FIRST);
CREATE INDEX "ATTR_FIELD_TYPE" ON "ATTRIBUTE"("FIELD_TYPE" NULLS FIRST);
CREATE INDEX "INDEX_ENTITY_HASH" ON "ATTRIBUTE"("ENTITY_HASH" NULLS FIRST);
CREATE MEMORY TABLE "LINEAGE"(
    "INPUT_EXTERNAL_ID" CHARACTER VARYING(256) NOT NULL,
    "INPUT_TYPE" INTEGER NOT NULL,
    "OUTPUT_EXTERNAL_ID" CHARACTER VARYING(256) NOT NULL,
    "OUTPUT_TYPE" INTEGER NOT NULL
);
ALTER TABLE "LINEAGE" ADD CONSTRAINT "PK_LINEAGE" PRIMARY KEY("INPUT_EXTERNAL_ID", "INPUT_TYPE", "OUTPUT_EXTERNAL_ID", "OUTPUT_TYPE");
-- 0 +/- SELECT COUNT(*) FROM LINEAGE;
CREATE INDEX "P_INPUT_LINEAGE" ON "LINEAGE"("INPUT_EXTERNAL_ID" NULLS FIRST, "INPUT_TYPE" NULLS FIRST);
CREATE INDEX "P_OUTPUT_LINEAGE" ON "LINEAGE"("OUTPUT_EXTERNAL_ID" NULLS FIRST, "OUTPUT_TYPE" NULLS FIRST);
CREATE MEMORY TABLE "DATASET_REPOSITORY_MAPPING"(
    "REPOSITORY_ID" BIGINT NOT NULL
);
ALTER TABLE "DATASET_REPOSITORY_MAPPING" ADD CONSTRAINT "PK_DATASET_REPOSITORY_MAPPING" PRIMARY KEY("REPOSITORY_ID");
-- 0 +/- SELECT COUNT(*) FROM DATASET_REPOSITORY_MAPPING;
CREATE MEMORY TABLE "AUDIT_RESOURCE_WORKSPACE_MAPPING"(
    "AUDIT_LOG_ID" BIGINT,
    "RESOURCE_ID" CHARACTER VARYING(255) NOT NULL,
    "WORKSPACE_ID" BIGINT
);
-- 0 +/- SELECT COUNT(*) FROM AUDIT_RESOURCE_WORKSPACE_MAPPING;
CREATE MEMORY TABLE "QUERY_DATASET_COMPONENT_BLOB"(
    "QUERY_DATASET_BLOB_ID" CHARACTER VARYING(64) NOT NULL,
    "BLOB_HASH" CHARACTER VARYING(64) NOT NULL,
    "QUERY" CHARACTER LARGE OBJECT,
    "DATA_SOURCE_URI" CHARACTER LARGE OBJECT,
    "EXECUTION_TIMESTAMP" BIGINT,
    "NUM_RECORDS" BIGINT
);
ALTER TABLE "QUERY_DATASET_COMPONENT_BLOB" ADD CONSTRAINT "PK_QUERY_DATASET_COMPONENT" PRIMARY KEY("QUERY_DATASET_BLOB_ID", "BLOB_HASH");
-- 0 +/- SELECT COUNT(*) FROM QUERY_DATASET_COMPONENT_BLOB;
CREATE MEMORY TABLE "UPLOAD_STATUS"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "DATASET_COMPONENT_BLOB_ID" CHARACTER VARYING(64),
    "COMPONENT_BLOB_TYPE" INTEGER,
    "UPLOAD_ID" CHARACTER VARYING(255) DEFAULT NULL,
    "UPLOAD_COMPLETED" BOOLEAN DEFAULT TRUE
);
ALTER TABLE "UPLOAD_STATUS" ADD CONSTRAINT "PK_UPLOAD_STATUS" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM UPLOAD_STATUS;
CREATE MEMORY TABLE "DATASET"(
    "ID" CHARACTER VARYING(255) NOT NULL,
    "DATASET_TYPE" INTEGER,
    "DATASET_VISIBILITY" INTEGER,
    "DESCRIPTION" CHARACTER LARGE OBJECT,
    "NAME" CHARACTER VARYING(255),
    "OWNER" CHARACTER VARYING(255),
    "TIME_CREATED" BIGINT,
    "TIME_UPDATED" BIGINT,
    "WORKSPACE" CHARACTER VARYING(255),
    "WORKSPACE_TYPE" INTEGER,
    "DELETED" BOOLEAN DEFAULT 'false',
    "WORKSPACE_ID" BIGINT
);
ALTER TABLE "DATASET" ADD CONSTRAINT "PK_DATASET" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM DATASET;
CREATE INDEX "INDEX_DATASET_ID_TIME_UPDATED" ON "DATASET"("ID" NULLS FIRST, "TIME_UPDATED" NULLS FIRST);
CREATE INDEX "INDEX_DATASET_ID_DELETED" ON "DATASET"("ID" NULLS FIRST, "DELETED" NULLS FIRST);
CREATE INDEX "D_NAME_WSPACE_WSPACE_TYPE_DELETED" ON "DATASET"("NAME" NULLS FIRST, "WORKSPACE" NULLS FIRST, "WORKSPACE_TYPE" NULLS FIRST, "DELETED" NULLS FIRST);
CREATE INDEX "INDEX_DATASET_DELETED" ON "DATASET"("DELETED" NULLS FIRST);
CREATE INDEX "INDEX_DATASET_TIME_UPDATED" ON "DATASET"("TIME_UPDATED" NULLS FIRST);
CREATE MEMORY TABLE "REPOSITORY_COMMIT"(
    "REPOSITORY_ID" BIGINT,
    "COMMIT_HASH" CHARACTER VARYING(64)
);
-- 0 +/- SELECT COUNT(*) FROM REPOSITORY_COMMIT;
CREATE INDEX "INDEX_REPOSITORY_COMMIT_REPO_ID" ON "REPOSITORY_COMMIT"("REPOSITORY_ID" NULLS FIRST);
CREATE MEMORY TABLE "OBSERVATION"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "ENTITY_NAME" CHARACTER VARYING(50),
    "FIELD_TYPE" CHARACTER VARYING(50),
    "TIMESTAMP" BIGINT NOT NULL,
    "ARTIFACT_ID" BIGINT,
    "EXPERIMENT_ID" CHARACTER VARYING(255),
    "EXPERIMENT_RUN_ID" CHARACTER VARYING(255),
    "KEYVALUEMAPPING_ID" BIGINT,
    "PROJECT_ID" CHARACTER VARYING(255),
    "EPOCH_NUMBER" BIGINT
);
ALTER TABLE "OBSERVATION" ADD CONSTRAINT "PK_OBSERVATION" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM OBSERVATION;
CREATE INDEX "O_KV_ID" ON "OBSERVATION"("KEYVALUEMAPPING_ID" NULLS FIRST);
CREATE INDEX "O_E_ID" ON "OBSERVATION"("EXPERIMENT_ID" NULLS FIRST);
CREATE INDEX "O_A_ID" ON "OBSERVATION"("ARTIFACT_ID" NULLS FIRST);
CREATE INDEX "O_ER_ID" ON "OBSERVATION"("EXPERIMENT_RUN_ID" NULLS FIRST);
CREATE INDEX "O_P_ID" ON "OBSERVATION"("PROJECT_ID" NULLS FIRST);
CREATE MEMORY TABLE "USER_COMMENT"(
    "ID" CHARACTER VARYING(255) NOT NULL,
    "DATE_TIME" BIGINT,
    "ENTITY_NAME" CHARACTER VARYING(50),
    "MESSAGE" CHARACTER VARYING(255),
    "USER_ID" CHARACTER VARYING(255),
    "COMMENT_ID" CHARACTER VARYING(255),
    "OWNER" CHARACTER VARYING(255)
);
ALTER TABLE "USER_COMMENT" ADD CONSTRAINT "PK_USER_COMMENT" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM USER_COMMENT;
CREATE INDEX "UC_C_ID" ON "USER_COMMENT"("COMMENT_ID" NULLS FIRST);
CREATE MEMORY TABLE "VERSIONING_MODELDB_ENTITY_MAPPING_CONFIG_BLOB"(
    "VERSIONING_MODELDB_ENTITY_MAPPING_REPOSITORY_ID" BIGINT,
    "VERSIONING_MODELDB_ENTITY_MAPPING_COMMIT" CHARACTER VARYING(64),
    "VERSIONING_MODELDB_ENTITY_MAPPING_VERSIONING_KEY" CHARACTER VARYING(50),
    "VERSIONING_MODELDB_ENTITY_MAPPING_EXPERIMENT_RUN_ID" CHARACTER VARYING(255),
    "VERSIONING_MODELDB_ENTITY_MAPPING_ENTITY_TYPE" CHARACTER VARYING(50),
    "CONFIG_BLOB_ENTITY_BLOB_HASH" CHARACTER VARYING(64),
    "CONFIG_BLOB_ENTITY_CONFIG_SEQ_NUMBER" INTEGER
);
-- 0 +/- SELECT COUNT(*) FROM VERSIONING_MODELDB_ENTITY_MAPPING_CONFIG_BLOB;
CREATE MEMORY TABLE "FOLDER_ELEMENT"(
    "FOLDER_HASH" CHARACTER VARYING(64) NOT NULL,
    "ELEMENT_SHA" CHARACTER VARYING(64),
    "ELEMENT_NAME" CHARACTER VARYING(200) NOT NULL,
    "ELEMENT_TYPE" CHARACTER VARYING(50)
);
ALTER TABLE "FOLDER_ELEMENT" ADD CONSTRAINT "PK_FOLDER_ELEMENT" PRIMARY KEY("FOLDER_HASH", "ELEMENT_NAME");
-- 0 +/- SELECT COUNT(*) FROM FOLDER_ELEMENT;
CREATE MEMORY TABLE "HYPERPARAMETER_ELEMENT_MAPPING"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "EXPERIMENT_RUN_ID" CHARACTER VARYING(255),
    "NAME" CHARACTER VARYING(255),
    "ENTITY_TYPE" CHARACTER VARYING(50),
    "INT_VALUE" BIGINT,
    "FLOAT_VALUE" DOUBLE PRECISION,
    "STRING_VALUE" CHARACTER VARYING(255)
);
ALTER TABLE "HYPERPARAMETER_ELEMENT_MAPPING" ADD CONSTRAINT "PK_HYPERPARAMETER_ELEMENT_MAPPING" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM HYPERPARAMETER_ELEMENT_MAPPING;
CREATE MEMORY TABLE "VERSIONING_MODELDB_ENTITY_MAPPING"(
    "REPOSITORY_ID" BIGINT,
    "COMMIT" CHARACTER VARYING(64),
    "VERSIONING_KEY" CHARACTER VARYING(50),
    "VERSIONING_LOCATION" CHARACTER LARGE OBJECT,
    "EXPERIMENT_RUN_ID" CHARACTER VARYING(255),
    "ENTITY_TYPE" CHARACTER VARYING(50),
    "VERSIONING_BLOB_TYPE" INTEGER,
    "BLOB_HASH" CHARACTER VARYING(255)
);
-- 0 +/- SELECT COUNT(*) FROM VERSIONING_MODELDB_ENTITY_MAPPING;
CREATE INDEX "INDEX_VMEM_EXP_RUN_ID" ON "VERSIONING_MODELDB_ENTITY_MAPPING"("EXPERIMENT_RUN_ID" NULLS FIRST);
CREATE INDEX "INDEX_VMEM_REPO_ID_COMMIT" ON "VERSIONING_MODELDB_ENTITY_MAPPING"("REPOSITORY_ID" NULLS FIRST, "COMMIT" NULLS FIRST);
CREATE INDEX "INDEX_VMEM_VERSIONING_BLOB_TYPE" ON "VERSIONING_MODELDB_ENTITY_MAPPING"("VERSIONING_BLOB_TYPE" NULLS FIRST);
CREATE INDEX "INDEX_VMEM_TABLE" ON "VERSIONING_MODELDB_ENTITY_MAPPING"("REPOSITORY_ID" NULLS FIRST, "COMMIT" NULLS FIRST, "EXPERIMENT_RUN_ID" NULLS FIRST, "VERSIONING_BLOB_TYPE" NULLS FIRST);
CREATE MEMORY TABLE "TAG"(
    "TAG" CHARACTER VARYING(255) NOT NULL,
    "COMMIT_HASH" CHARACTER VARYING(64),
    "REPOSITORY_ID" BIGINT NOT NULL
);
ALTER TABLE "TAG" ADD CONSTRAINT "PK_TAG" PRIMARY KEY("TAG", "REPOSITORY_ID");
-- 0 +/- SELECT COUNT(*) FROM TAG;
CREATE MEMORY TABLE "GIT_CODE_BLOB"(
    "BLOB_HASH" CHARACTER VARYING(64) NOT NULL,
    "REPO" CHARACTER VARYING(255),
    "COMMIT_HASH" CHARACTER VARYING(64),
    "BRANCH" CHARACTER VARYING(50),
    "TAG" CHARACTER VARYING(255),
    "IS_DIRTY" BOOLEAN
);
ALTER TABLE "GIT_CODE_BLOB" ADD CONSTRAINT "PK_GIT_CODE_BLOB" PRIMARY KEY("BLOB_HASH");
-- 0 +/- SELECT COUNT(*) FROM GIT_CODE_BLOB;
CREATE MEMORY TABLE "LABELS_MAPPING"(
    "ENTITY_HASH" CHARACTER VARYING(255) NOT NULL,
    "ENTITY_TYPE" INTEGER NOT NULL,
    "LABEL" CHARACTER VARYING(50) NOT NULL
);
ALTER TABLE "LABELS_MAPPING" ADD CONSTRAINT "PK_LABEL_MAPPING" PRIMARY KEY("ENTITY_HASH", "ENTITY_TYPE", "LABEL");
-- 0 +/- SELECT COUNT(*) FROM LABELS_MAPPING;
CREATE INDEX "INDEX_LABELS_MAPPING_ENTITY_HASH_ENTITY_TYPE" ON "LABELS_MAPPING"("ENTITY_HASH" NULLS FIRST, "ENTITY_TYPE" NULLS FIRST);
CREATE INDEX "INDEX_LABELS_MAPPING_LABEL" ON "LABELS_MAPPING"("LABEL" NULLS FIRST);
CREATE MEMORY TABLE "EVENT"(
    "EVENT_UUID" CHARACTER VARYING(64) NOT NULL,
    "EVENT_TYPE" CHARACTER VARYING(255),
    "WORKSPACE_ID" BIGINT,
    "EVENT_METADATA" CHARACTER LARGE OBJECT
);
ALTER TABLE "EVENT" ADD CONSTRAINT "PK_QUERY_EVENT_UUID" PRIMARY KEY("EVENT_UUID");
-- 0 +/- SELECT COUNT(*) FROM EVENT;
CREATE MEMORY TABLE "EXPERIMENT"(
    "ID" CHARACTER VARYING(255) NOT NULL,
    "DATE_CREATED" BIGINT,
    "DATE_UPDATED" BIGINT,
    "DESCRIPTION" CHARACTER LARGE OBJECT,
    "NAME" CHARACTER VARYING(255),
    "OWNER" CHARACTER VARYING(255),
    "PROJECT_ID" CHARACTER VARYING(255),
    "CODE_VERSION_SNAPSHOT_ID" BIGINT,
    "DELETED" BOOLEAN DEFAULT 'false',
    "VERSION_NUMBER" BIGINT DEFAULT '1',
    "CREATED" BOOLEAN DEFAULT 'false'
);
ALTER TABLE "EXPERIMENT" ADD CONSTRAINT "PK_EXPERIMENT" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM EXPERIMENT;
CREATE INDEX "E_CVS_ID" ON "EXPERIMENT"("CODE_VERSION_SNAPSHOT_ID" NULLS FIRST);
CREATE INDEX "INDEX_EXP_NAME_PROJECT_ID" ON "EXPERIMENT"("NAME" NULLS FIRST, "PROJECT_ID" NULLS FIRST);
CREATE INDEX "INDEX_EXP_PROJECT_ID" ON "EXPERIMENT"("PROJECT_ID" NULLS FIRST);
CREATE INDEX "INDEX_PROJECT_ID_DATE_UPDATED" ON "EXPERIMENT"("PROJECT_ID" NULLS FIRST, "DATE_UPDATED" NULLS FIRST);
CREATE INDEX "INDEX_EXPERIMENT_ID_DELETED" ON "EXPERIMENT"("ID" NULLS FIRST, "DELETED" NULLS FIRST);
CREATE INDEX "INDEX_EXPERIMENT_DELETED" ON "EXPERIMENT"("DELETED" NULLS FIRST);
CREATE INDEX "INDEX_EXP_DATE_UPDATED" ON "EXPERIMENT"("DATE_UPDATED" NULLS FIRST);
CREATE MEMORY TABLE "BRANCH"(
    "BRANCH" CHARACTER VARYING(255) NOT NULL,
    "COMMIT_HASH" CHARACTER VARYING(64),
    "REPOSITORY_ID" BIGINT NOT NULL
);
ALTER TABLE "BRANCH" ADD CONSTRAINT "PK_BRANCH" PRIMARY KEY("BRANCH", "REPOSITORY_ID");
-- 0 +/- SELECT COUNT(*) FROM BRANCH;
CREATE MEMORY TABLE "COMMIT_PARENT"(
    "PARENT_HASH" CHARACTER VARYING(64),
    "CHILD_HASH" CHARACTER VARYING(64),
    "PARENT_ORDER" INTEGER
);
-- 0 +/- SELECT COUNT(*) FROM COMMIT_PARENT;
CREATE MEMORY TABLE "NOTEBOOK_CODE_BLOB"(
    "BLOB_HASH" CHARACTER VARYING(64) NOT NULL,
    "GIT_CODE_BLOB_HASH" CHARACTER VARYING(64),
    "PATH_DATASET_BLOB_HASH" CHARACTER VARYING(64)
);
ALTER TABLE "NOTEBOOK_CODE_BLOB" ADD CONSTRAINT "PK_NOTEBOOK_CODE_BLOB" PRIMARY KEY("BLOB_HASH");
-- 0 +/- SELECT COUNT(*) FROM NOTEBOOK_CODE_BLOB;
CREATE MEMORY TABLE "PYTHON_ENVIRONMENT_BLOB"(
    "BLOB_HASH" CHARACTER VARYING(64) NOT NULL,
    "MAJOR" INTEGER,
    "MINOR" INTEGER,
    "PATCH" INTEGER,
    "SUFFIX" CHARACTER VARYING(50),
    "RAW_REQUIREMENTS" CHARACTER LARGE OBJECT,
    "RAW_CONSTRAINTS" CHARACTER LARGE OBJECT
);
ALTER TABLE "PYTHON_ENVIRONMENT_BLOB" ADD CONSTRAINT "PK_PYTHON_ENVIRONMENT_BLOB" PRIMARY KEY("BLOB_HASH");
-- 0 +/- SELECT COUNT(*) FROM PYTHON_ENVIRONMENT_BLOB;
CREATE MEMORY TABLE "HYPERPARAMETER_ELEMENT_CONFIG_BLOB"(
    "BLOB_HASH" CHARACTER VARYING(64) NOT NULL,
    "NAME" CHARACTER VARYING(255),
    "COMMIT_HASH" CHARACTER VARYING(64),
    "VALUE_TYPE" INTEGER,
    "INT_VALUE" BIGINT,
    "FLOAT_VALUE" DOUBLE PRECISION,
    "STRING_VALUE" CHARACTER VARYING(255)
);
ALTER TABLE "HYPERPARAMETER_ELEMENT_CONFIG_BLOB" ADD CONSTRAINT "PK_HYPERPARAMETER_ELEMENT_CONFIG_BLOB" PRIMARY KEY("BLOB_HASH");
-- 0 +/- SELECT COUNT(*) FROM HYPERPARAMETER_ELEMENT_CONFIG_BLOB;
CREATE MEMORY TABLE "HYPERPARAMETER_SET_CONFIG_BLOB"(
    "BLOB_HASH" CHARACTER VARYING(64) NOT NULL,
    "NAME" CHARACTER VARYING(255),
    "VALUE_TYPE" INTEGER,
    "INTERVAL_BEGIN_HASH" CHARACTER VARYING(64),
    "INTERVAL_END_HASH" CHARACTER VARYING(64),
    "INTERVAL_STEP_HASH" CHARACTER VARYING(64)
);
ALTER TABLE "HYPERPARAMETER_SET_CONFIG_BLOB" ADD CONSTRAINT "PK_HYPERPARAMETER_SET_CONFIG_BLOB" PRIMARY KEY("BLOB_HASH");
-- 0 +/- SELECT COUNT(*) FROM HYPERPARAMETER_SET_CONFIG_BLOB;
CREATE MEMORY TABLE "HYPERPARAMETER_DISCRETE_SET_ELEMENT_MAPPING"(
    "SET_HASH" CHARACTER VARYING(64) NOT NULL,
    "ELEMENT_HASH" CHARACTER VARYING(64) NOT NULL
);
ALTER TABLE "HYPERPARAMETER_DISCRETE_SET_ELEMENT_MAPPING" ADD CONSTRAINT "PK_HYPERPARAMETER_DISCRETE_SET_ELEMENT_MAPPING" PRIMARY KEY("SET_HASH", "ELEMENT_HASH");
-- 0 +/- SELECT COUNT(*) FROM HYPERPARAMETER_DISCRETE_SET_ELEMENT_MAPPING;
CREATE MEMORY TABLE "CONFIG_BLOB"(
    "BLOB_HASH" CHARACTER VARYING(64) NOT NULL,
    "CONFIG_SEQ_NUMBER" INTEGER NOT NULL,
    "HYPERPARAMETER_TYPE" INTEGER,
    "HYPERPARAMETER_SET_CONFIG_BLOB_HASH" CHARACTER VARYING(64),
    "HYPERPARAMETER_ELEMENT_CONFIG_BLOB_HASH" CHARACTER VARYING(64)
);
ALTER TABLE "CONFIG_BLOB" ADD CONSTRAINT "PK_CONFIG_BLOB" PRIMARY KEY("BLOB_HASH", "CONFIG_SEQ_NUMBER");
-- 0 +/- SELECT COUNT(*) FROM CONFIG_BLOB;
CREATE MEMORY TABLE "DOCKER_ENVIRONMENT_BLOB"(
    "BLOB_HASH" CHARACTER VARYING(64) NOT NULL,
    "REPOSITORY" CHARACTER VARYING(255),
    "TAG" CHARACTER VARYING(255),
    "SHA" CHARACTER VARYING(255)
);
ALTER TABLE "DOCKER_ENVIRONMENT_BLOB" ADD CONSTRAINT "PK_DOCKER_ENVIRONMENT_BLOB" PRIMARY KEY("BLOB_HASH");
-- 0 +/- SELECT COUNT(*) FROM DOCKER_ENVIRONMENT_BLOB;
CREATE MEMORY TABLE "ENVIRONMENT_BLOB"(
    "BLOB_HASH" CHARACTER VARYING(64) NOT NULL,
    "ENVIRONMENT_TYPE" INTEGER,
    "PYTHON_ENVIRONMENT_BLOB_HASH" CHARACTER VARYING(64),
    "DOCKER_ENVIRONMENT_BLOB_HASH" CHARACTER VARYING(64)
);
ALTER TABLE "ENVIRONMENT_BLOB" ADD CONSTRAINT "PK_ENVIRONMENT_BLOB" PRIMARY KEY("BLOB_HASH");
-- 0 +/- SELECT COUNT(*) FROM ENVIRONMENT_BLOB;
CREATE MEMORY TABLE "PYTHON_ENVIRONMENT_REQUIREMENTS_BLOB"(
    "PYTHON_ENVIRONMENT_BLOB_HASH" CHARACTER VARYING(64) NOT NULL,
    "LIBRARY" CHARACTER VARYING(255) NOT NULL,
    "PYTHON_CONSTRAINT" CHARACTER VARYING(255) NOT NULL,
    "MAJOR" INTEGER,
    "MINOR" INTEGER,
    "PATCH" INTEGER,
    "SUFFIX" CHARACTER VARYING(50),
    "REQ_OR_CONSTRAINT" BOOLEAN NOT NULL
);
ALTER TABLE "PYTHON_ENVIRONMENT_REQUIREMENTS_BLOB" ADD CONSTRAINT "PK_PYTHON_ENVIRONMENT_REQUIREMENTS_BLOB" PRIMARY KEY("PYTHON_ENVIRONMENT_BLOB_HASH", "LIBRARY", "PYTHON_CONSTRAINT", "REQ_OR_CONSTRAINT");
-- 0 +/- SELECT COUNT(*) FROM PYTHON_ENVIRONMENT_REQUIREMENTS_BLOB;
CREATE MEMORY TABLE "ENVIRONMENT_COMMAND_LINE"(
    "ENVIRONMENT_BLOB_HASH" CHARACTER VARYING(64) NOT NULL,
    "COMMAND_SEQ_NUMBER" INTEGER NOT NULL,
    "COMMAND" CHARACTER LARGE OBJECT
);
ALTER TABLE "ENVIRONMENT_COMMAND_LINE" ADD CONSTRAINT "PK_ENVIRONMENT_COMMAND_LINE" PRIMARY KEY("ENVIRONMENT_BLOB_HASH", "COMMAND_SEQ_NUMBER");
-- 0 +/- SELECT COUNT(*) FROM ENVIRONMENT_COMMAND_LINE;
CREATE MEMORY TABLE "ENVIRONMENT_VARIABLES"(
    "ENVIRONMENT_BLOB_HASH" CHARACTER VARYING(64) NOT NULL,
    "VARIABLE_NAME" CHARACTER VARYING(255) NOT NULL,
    "VARIABLE_VALUE" CHARACTER VARYING(255)
);
ALTER TABLE "ENVIRONMENT_VARIABLES" ADD CONSTRAINT "PK_ENVIRONMENT_VARIABLES" PRIMARY KEY("ENVIRONMENT_BLOB_HASH", "VARIABLE_NAME");
-- 0 +/- SELECT COUNT(*) FROM ENVIRONMENT_VARIABLES;
CREATE MEMORY TABLE "ARTIFACT_PART"(
    "ARTIFACT_ID" CHARACTER VARYING(64) NOT NULL,
    "PART_NUMBER" BIGINT NOT NULL,
    "ETAG" CHARACTER VARYING(255),
    "ARTIFACT_TYPE" INTEGER DEFAULT 0 NOT NULL
);
ALTER TABLE "ARTIFACT_PART" ADD CONSTRAINT "PK_ARTIFACT_PART" PRIMARY KEY("ARTIFACT_ID", "PART_NUMBER", "ARTIFACT_TYPE");
-- 0 +/- SELECT COUNT(*) FROM ARTIFACT_PART;
CREATE MEMORY TABLE "REPOSITORY"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "DATE_CREATED" BIGINT,
    "DATE_UPDATED" BIGINT,
    "NAME" CHARACTER VARYING(256),
    "WORKSPACE_ID" CHARACTER VARYING(255),
    "WORKSPACE_TYPE" INTEGER,
    "OWNER" CHARACTER VARYING(255),
    "REPOSITORY_VISIBILITY" INTEGER,
    "REPOSITORY_ACCESS_MODIFIER" INTEGER DEFAULT '1',
    "DESCRIPTION" CHARACTER LARGE OBJECT,
    "DELETED" BOOLEAN DEFAULT 'false',
    "WORKSPACE_SERVICE_ID" BIGINT,
    "CREATED" BOOLEAN DEFAULT 'false',
    "VISIBILITY_MIGRATION" BOOLEAN DEFAULT 'false',
    "VERSION_NUMBER" BIGINT DEFAULT '1'
);
ALTER TABLE "REPOSITORY" ADD CONSTRAINT "PK_REPOSITORY" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM REPOSITORY;
CREATE INDEX "INDEX_REPO_ID_DATE_UPDATED" ON "REPOSITORY"("ID" NULLS FIRST, "DATE_UPDATED" NULLS FIRST);
CREATE INDEX "INDEX_REPOSITORY_ID_DELETED" ON "REPOSITORY"("ID" NULLS FIRST, "DELETED" NULLS FIRST);
CREATE INDEX "INDEX_REPOSITORY_DELETED" ON "REPOSITORY"("DELETED" NULLS FIRST);
CREATE INDEX "INDEX_REPO_DATE_UPDATED" ON "REPOSITORY"("DATE_UPDATED" NULLS FIRST);
CREATE INDEX "INDEX_VISIBILITY_MIGRATION_REPOSITORY" ON "REPOSITORY"("VISIBILITY_MIGRATION" NULLS FIRST);
CREATE MEMORY TABLE "MIGRATION_STATUS"(
    "ID" BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL,
    "MIGRATION_NAME" CHARACTER VARYING(255),
    "STATUS" TINYINT
);
ALTER TABLE "MIGRATION_STATUS" ADD CONSTRAINT "PK_MIGRATION_STATUS" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM MIGRATION_STATUS;
CREATE MEMORY TABLE "PATH_DATASET_COMPONENT_BLOB"(
    "PATH_DATASET_BLOB_ID" CHARACTER VARYING(64) NOT NULL,
    "BLOB_HASH" CHARACTER VARYING(64) NOT NULL,
    "LAST_MODIFIED_AT_SOURCE" BIGINT,
    "MD5" CHARACTER LARGE OBJECT,
    "PATH" CHARACTER LARGE OBJECT,
    "SHA256" CHARACTER LARGE OBJECT,
    "SIZE" BIGINT,
    "INTERNAL_VERSIONED_PATH" CHARACTER LARGE OBJECT,
    "BASE_PATH" CHARACTER LARGE OBJECT
);
ALTER TABLE "PATH_DATASET_COMPONENT_BLOB" ADD CONSTRAINT "PK_PATH_DATASET_COMPONENT" PRIMARY KEY("PATH_DATASET_BLOB_ID", "BLOB_HASH");
-- 0 +/- SELECT COUNT(*) FROM PATH_DATASET_COMPONENT_BLOB;
CREATE MEMORY TABLE "PROJECT"(
    "ID" CHARACTER VARYING(255) NOT NULL,
    "DATE_CREATED" BIGINT,
    "DATE_UPDATED" BIGINT,
    "DESCRIPTION" CHARACTER LARGE OBJECT,
    "NAME" CHARACTER VARYING(255),
    "OWNER" CHARACTER VARYING(255),
    "PROJECT_VISIBILITY" INTEGER,
    "README_TEXT" CHARACTER LARGE OBJECT,
    "SHORT_NAME" CHARACTER VARYING(255),
    "CODE_VERSION_SNAPSHOT_ID" BIGINT,
    "WORKSPACE" CHARACTER VARYING(255),
    "WORKSPACE_TYPE" INTEGER,
    "DELETED" BOOLEAN DEFAULT 'false',
    "WORKSPACE_ID" BIGINT,
    "CREATED" BOOLEAN DEFAULT 'false',
    "VISIBILITY_MIGRATION" BOOLEAN DEFAULT 'false',
    "VERSION_NUMBER" BIGINT DEFAULT '1'
);
ALTER TABLE "PROJECT" ADD CONSTRAINT "PK_PROJECT" PRIMARY KEY("ID");
-- 0 +/- SELECT COUNT(*) FROM PROJECT;
CREATE INDEX "P_CVS_ID" ON "PROJECT"("CODE_VERSION_SNAPSHOT_ID" NULLS FIRST);
CREATE INDEX "P_NAME" ON "PROJECT"("NAME" NULLS FIRST);
CREATE INDEX "INDEX_PROJECT_P_ID_DATE_UPDATED" ON "PROJECT"("ID" NULLS FIRST, "DATE_UPDATED" NULLS FIRST);
CREATE INDEX "INDEX_PROJECT_ID_DELETED" ON "PROJECT"("ID" NULLS FIRST, "DELETED" NULLS FIRST);
CREATE INDEX "P_NAME_WSPACE_WSPACE_TYPE_DELETED" ON "PROJECT"("NAME" NULLS FIRST, "WORKSPACE" NULLS FIRST, "WORKSPACE_TYPE" NULLS FIRST, "DELETED" NULLS FIRST);
CREATE INDEX "INDEX_PROJECT_DELETED" ON "PROJECT"("DELETED" NULLS FIRST);
CREATE INDEX "INDEX_PROJECT_DATE_UPDATED" ON "PROJECT"("DATE_UPDATED" NULLS FIRST);
CREATE INDEX "INDEX_VISIBILITY_MIGRATION_PROJECT" ON "PROJECT"("VISIBILITY_MIGRATION" NULLS FIRST);
ALTER TABLE "AUDIT_SERVICE_LOCAL_AUDIT_LOG" ADD CONSTRAINT "CONSTRAINT_1" UNIQUE("LOCAL_ID");
ALTER TABLE "VERSIONING_MODELDB_ENTITY_MAPPING" ADD CONSTRAINT "CK_VERSIONING_MODELDB_ENTITY_MAPPING" UNIQUE("REPOSITORY_ID", "COMMIT", "VERSIONING_KEY", "EXPERIMENT_RUN_ID", "ENTITY_TYPE");
ALTER TABLE "NOTEBOOK_CODE_BLOB" ADD CONSTRAINT "FK_GIT_CODE_BLOB" FOREIGN KEY("GIT_CODE_BLOB_HASH") REFERENCES "GIT_CODE_BLOB"("BLOB_HASH") NOCHECK;
ALTER TABLE "KEYVALUE" ADD CONSTRAINT "KEYVALUE_FK_EXPERIMENT_RUN_ID" FOREIGN KEY("EXPERIMENT_RUN_ID") REFERENCES "EXPERIMENT_RUN"("ID") NOCHECK;
ALTER TABLE "CONFIG_BLOB" ADD CONSTRAINT "FK_CB_HYPERPARAMETER_ELEMENT_CONFIG_BLOB" FOREIGN KEY("HYPERPARAMETER_ELEMENT_CONFIG_BLOB_HASH") REFERENCES "HYPERPARAMETER_ELEMENT_CONFIG_BLOB"("BLOB_HASH") NOCHECK;
ALTER TABLE "GIT_SNAPSHOT_FILE_PATHS" ADD CONSTRAINT "FK_GITSNAPSHOTENTITY_ID" FOREIGN KEY("GIT_SNAPSHOT_ID") REFERENCES "GIT_SNAPSHOT"("ID") NOCHECK;
ALTER TABLE "CODE_VERSION" ADD CONSTRAINT "FK_CODE_ARCHIVE_ID" FOREIGN KEY("CODE_ARCHIVE_ID") REFERENCES "ARTIFACT"("ID") NOCHECK;
ALTER TABLE "ENVIRONMENT_COMMAND_LINE" ADD CONSTRAINT "FK_ENVIRONMENT_BLOB_HASH" FOREIGN KEY("ENVIRONMENT_BLOB_HASH") REFERENCES "ENVIRONMENT_BLOB"("BLOB_HASH") NOCHECK;
ALTER TABLE "ENVIRONMENT_BLOB" ADD CONSTRAINT "FK_PYTHON_ENVIRONMENT_BLOB" FOREIGN KEY("PYTHON_ENVIRONMENT_BLOB_HASH") REFERENCES "PYTHON_ENVIRONMENT_BLOB"("BLOB_HASH") NOCHECK;
ALTER TABLE "DATASET_PART_INFO" ADD CONSTRAINT "createTable-9_fk_path_dataset_version_info_id" FOREIGN KEY("PATH_DATASET_VERSION_INFO_ID") REFERENCES "PATH_DATASET_VERSION_INFO"("ID") NOCHECK;
ALTER TABLE "OBSERVATION" ADD CONSTRAINT "OBSERVATION_FK_PROJECT_ID" FOREIGN KEY("PROJECT_ID") REFERENCES "PROJECT"("ID") NOCHECK;
ALTER TABLE "DATASET_VERSION" ADD CONSTRAINT "DATASETVERSION_FK_QUERY_DATASET_VERSION_INFO_ID" FOREIGN KEY("QUERY_DATASET_VERSION_INFO_ID") REFERENCES "QUERY_DATASET_VERSION_INFO"("ID") NOCHECK;
ALTER TABLE "BRANCH" ADD CONSTRAINT "FK_REPOSITORY_ID_BRANCHS" FOREIGN KEY("REPOSITORY_ID") REFERENCES "REPOSITORY"("ID") NOCHECK;
ALTER TABLE "EXPERIMENT" ADD CONSTRAINT "EXPERIMENT_FK_CODE_VERSION_SNAPSHOT_ID" FOREIGN KEY("CODE_VERSION_SNAPSHOT_ID") REFERENCES "CODE_VERSION"("ID") NOCHECK;
ALTER TABLE "FEATURE" ADD CONSTRAINT "FEATURE_FK_EXPERIMENT_RUN_ID" FOREIGN KEY("EXPERIMENT_RUN_ID") REFERENCES "EXPERIMENT_RUN"("ID") NOCHECK;
ALTER TABLE "PYTHON_ENVIRONMENT_REQUIREMENTS_BLOB" ADD CONSTRAINT "FK_PERB_PYTHON_ENVIRONMENT_BLOB" FOREIGN KEY("PYTHON_ENVIRONMENT_BLOB_HASH") REFERENCES "PYTHON_ENVIRONMENT_BLOB"("BLOB_HASH") NOCHECK;
ALTER TABLE "ARTIFACT" ADD CONSTRAINT "ARTIFACT_FK_EXPERIMENT_ID" FOREIGN KEY("EXPERIMENT_ID") REFERENCES "EXPERIMENT"("ID") NOCHECK;
ALTER TABLE "HYPERPARAMETER_SET_CONFIG_BLOB" ADD CONSTRAINT "FK_STEP_HYPERPARAMETER_ELEMENT_CONFIG_BLOB" FOREIGN KEY("INTERVAL_STEP_HASH") REFERENCES "HYPERPARAMETER_ELEMENT_CONFIG_BLOB"("BLOB_HASH") NOCHECK;
ALTER TABLE "FEATURE" ADD CONSTRAINT "FEATURE_FK_PROJECT_ID" FOREIGN KEY("PROJECT_ID") REFERENCES "PROJECT"("ID") NOCHECK;
ALTER TABLE "HYPERPARAMETER_SET_CONFIG_BLOB" ADD CONSTRAINT "FK_BEGIN_HYPERPARAMETER_ELEMENT_CONFIG_BLOB" FOREIGN KEY("INTERVAL_BEGIN_HASH") REFERENCES "HYPERPARAMETER_ELEMENT_CONFIG_BLOB"("BLOB_HASH") NOCHECK;
ALTER TABLE "DATASET_VERSION" ADD CONSTRAINT "DATASETVERSION_FK_RAW_DATASET_VERSION_INFO_ID" FOREIGN KEY("RAW_DATASET_VERSION_INFO_ID") REFERENCES "RAW_DATASET_VERSION_INFO"("ID") NOCHECK;
ALTER TABLE "QUERY_PARAMETER" ADD CONSTRAINT "QUERY_PARAMETER_FK_QUERY_DATASET_VERSION_INFO_ID" FOREIGN KEY("QUERY_DATASET_VERSION_INFO_ID") REFERENCES "QUERY_DATASET_VERSION_INFO"("ID") NOCHECK;
ALTER TABLE "OBSERVATION" ADD CONSTRAINT "OBSERVATION_FK_EXPERIMENT_ID" FOREIGN KEY("EXPERIMENT_ID") REFERENCES "EXPERIMENT"("ID") NOCHECK;
ALTER TABLE "HYPERPARAMETER_ELEMENT_MAPPING" ADD CONSTRAINT "HEM_FK_EXPERIMENT_RUN_ID" FOREIGN KEY("EXPERIMENT_RUN_ID") REFERENCES "EXPERIMENT_RUN"("ID") NOCHECK;
ALTER TABLE "HYPERPARAMETER_SET_CONFIG_BLOB" ADD CONSTRAINT "FK_END_HYPERPARAMETER_ELEMENT_CONFIG_BLOB" FOREIGN KEY("INTERVAL_END_HASH") REFERENCES "HYPERPARAMETER_ELEMENT_CONFIG_BLOB"("BLOB_HASH") NOCHECK;
ALTER TABLE "ARTIFACT" ADD CONSTRAINT "ARTIFACT_FK_PROJECT_ID" FOREIGN KEY("PROJECT_ID") REFERENCES "PROJECT"("ID") NOCHECK;
ALTER TABLE "EXPERIMENT_RUN" ADD CONSTRAINT "EXPERIMENTRUN_FK_CODE_VERSION_SNAPSHOT_ID" FOREIGN KEY("CODE_VERSION_SNAPSHOT_ID") REFERENCES "CODE_VERSION"("ID") NOCHECK;
ALTER TABLE "TAG" ADD CONSTRAINT "FK_COMMIT_HASH_TAGS" FOREIGN KEY("COMMIT_HASH") REFERENCES "COMMIT"("COMMIT_HASH") NOCHECK;
ALTER TABLE "HYPERPARAMETER_DISCRETE_SET_ELEMENT_MAPPING" ADD CONSTRAINT "FK_HYPERPARAMETER_SET_CONFIG_BLOB" FOREIGN KEY("SET_HASH") REFERENCES "HYPERPARAMETER_SET_CONFIG_BLOB"("BLOB_HASH") NOCHECK;
ALTER TABLE "AUDIT_RESOURCE_WORKSPACE_MAPPING" ADD CONSTRAINT "AUDIT_FK_AUDIT_SERVICE_LOCAL_AUDIT_LOG_ID" FOREIGN KEY("AUDIT_LOG_ID") REFERENCES "AUDIT_SERVICE_LOCAL_AUDIT_LOG"("ID") NOCHECK;
ALTER TABLE "COMMIT_PARENT" ADD CONSTRAINT "FK_PARENT_HASH_COMMIT_PARENT" FOREIGN KEY("PARENT_HASH") REFERENCES "COMMIT"("COMMIT_HASH") NOCHECK;
ALTER TABLE "ENVIRONMENT_BLOB" ADD CONSTRAINT "FK_DOCKER_ENVIRONMENT_BLOB" FOREIGN KEY("DOCKER_ENVIRONMENT_BLOB_HASH") REFERENCES "DOCKER_ENVIRONMENT_BLOB"("BLOB_HASH") NOCHECK;
ALTER TABLE "TAG_MAPPING" ADD CONSTRAINT "TAGMAPPING_FK_EXPERIMENT_RUN_ID" FOREIGN KEY("EXPERIMENT_RUN_ID") REFERENCES "EXPERIMENT_RUN"("ID") NOCHECK;
ALTER TABLE "TAG_MAPPING" ADD CONSTRAINT "TAGMAPPING_FK_EXPERIMENT_ID" FOREIGN KEY("EXPERIMENT_ID") REFERENCES "EXPERIMENT"("ID") NOCHECK;
ALTER TABLE "TAG_MAPPING" ADD CONSTRAINT "TAGMAPPING_FK_DATASET_ID" FOREIGN KEY("DATASET_ID") REFERENCES "DATASET"("ID") NOCHECK;
ALTER TABLE "FEATURE" ADD CONSTRAINT "FEATURE_FK_EXPERIMENT_ID" FOREIGN KEY("EXPERIMENT_ID") REFERENCES "EXPERIMENT"("ID") NOCHECK;
ALTER TABLE "OBSERVATION" ADD CONSTRAINT "OBSERVATION_FK_ARTIFACT_ID" FOREIGN KEY("ARTIFACT_ID") REFERENCES "ARTIFACT"("ID") NOCHECK;
ALTER TABLE "KEYVALUE" ADD CONSTRAINT "KEYVALUE_FK_PROJECT_ID" FOREIGN KEY("PROJECT_ID") REFERENCES "PROJECT"("ID") NOCHECK;
ALTER TABLE "KEYVALUE" ADD CONSTRAINT "KEYVALUE_FK_DATASET_VERSION_ID" FOREIGN KEY("DATASET_VERSION_ID") REFERENCES "DATASET_VERSION"("ID") NOCHECK;
ALTER TABLE "OBSERVATION" ADD CONSTRAINT "OBSERVATION_FK_KEYVALUEMAPPING_ID" FOREIGN KEY("KEYVALUEMAPPING_ID") REFERENCES "KEYVALUE"("ID") NOCHECK;
ALTER TABLE "KEYVALUE" ADD CONSTRAINT "KEYVALUE_FK_DATASET_ID" FOREIGN KEY("DATASET_ID") REFERENCES "DATASET"("ID") NOCHECK;
ALTER TABLE "DATASET_VERSION" ADD CONSTRAINT "DATASETVERSION_FK_PATH_DATASET_VERSION_INFO_ID" FOREIGN KEY("PATH_DATASET_VERSION_INFO_ID") REFERENCES "PATH_DATASET_VERSION_INFO"("ID") NOCHECK;
ALTER TABLE "PROJECT" ADD CONSTRAINT "PROJECT_FK_CODE_VERSION_SNAPSHOT_ID" FOREIGN KEY("CODE_VERSION_SNAPSHOT_ID") REFERENCES "CODE_VERSION"("ID") NOCHECK;
ALTER TABLE "CONFIG_BLOB" ADD CONSTRAINT "FK_CB_HYPERPARAMETER_SET_CONFIG_BLOB" FOREIGN KEY("HYPERPARAMETER_SET_CONFIG_BLOB_HASH") REFERENCES "HYPERPARAMETER_SET_CONFIG_BLOB"("BLOB_HASH") NOCHECK;
ALTER TABLE "HYPERPARAMETER_DISCRETE_SET_ELEMENT_MAPPING" ADD CONSTRAINT "FK_HYPERPARAMETER_ELEMENT_CONFIG_BLOB" FOREIGN KEY("ELEMENT_HASH") REFERENCES "HYPERPARAMETER_ELEMENT_CONFIG_BLOB"("BLOB_HASH") NOCHECK;
ALTER TABLE "KEYVALUE" ADD CONSTRAINT "KEYVALUE_FK_JOB_ID" FOREIGN KEY("JOB_ID") REFERENCES "JOB"("ID") NOCHECK;
ALTER TABLE "OBSERVATION" ADD CONSTRAINT "OBSERVATION_FK_EXPERIMENT_RUN_ID" FOREIGN KEY("EXPERIMENT_RUN_ID") REFERENCES "EXPERIMENT_RUN"("ID") NOCHECK;
ALTER TABLE "REPOSITORY_COMMIT" ADD CONSTRAINT "FK_ENTITY_ID_REPOSITORY_ENTITY_MAPPING" FOREIGN KEY("COMMIT_HASH") REFERENCES "COMMIT"("COMMIT_HASH") NOCHECK;
ALTER TABLE "DATASET_REPOSITORY_MAPPING" ADD CONSTRAINT "FK_REPOSITORY_ID" FOREIGN KEY("REPOSITORY_ID") REFERENCES "REPOSITORY"("ID") NOCHECK;
ALTER TABLE "TAG" ADD CONSTRAINT "FK_REPOSITORY_ID_TAGS" FOREIGN KEY("REPOSITORY_ID") REFERENCES "REPOSITORY"("ID") NOCHECK;
ALTER TABLE "TAG_MAPPING" ADD CONSTRAINT "FK_PROJECT_ID" FOREIGN KEY("PROJECT_ID") REFERENCES "PROJECT"("ID") NOCHECK;
ALTER TABLE "USER_COMMENT" ADD CONSTRAINT "FK_COMMENT_ID" FOREIGN KEY("COMMENT_ID") REFERENCES "COMMENT"("ID") NOCHECK;
ALTER TABLE "KEYVALUE" ADD CONSTRAINT "KEYVALUE_FK_EXPERIMENT_ID" FOREIGN KEY("EXPERIMENT_ID") REFERENCES "EXPERIMENT"("ID") NOCHECK;
ALTER TABLE "BRANCH" ADD CONSTRAINT "FK_COMMIT_HASH_BRANCHS" FOREIGN KEY("COMMIT_HASH") REFERENCES "COMMIT"("COMMIT_HASH") NOCHECK;
ALTER TABLE "REPOSITORY_COMMIT" ADD CONSTRAINT "FK_REPOSITORY_ID_COMMIT_HASH_MAPPING" FOREIGN KEY("REPOSITORY_ID") REFERENCES "REPOSITORY"("ID") NOCHECK;
ALTER TABLE "TAG_MAPPING" ADD CONSTRAINT "TAGMAPPING_FK_DATASET_VERSION_ID" FOREIGN KEY("DATASET_VERSION_ID") REFERENCES "DATASET_VERSION"("ID") NOCHECK;
ALTER TABLE "COMMIT_PARENT" ADD CONSTRAINT "FK_CHILD_HASH_COMMIT_PARENT" FOREIGN KEY("CHILD_HASH") REFERENCES "COMMIT"("COMMIT_HASH") NOCHECK;
ALTER TABLE "FEATURE" ADD CONSTRAINT "FEATURE_FK_RAW_DATASET_VERSION_INFO_ID" FOREIGN KEY("RAW_DATASET_VERSION_INFO_ID") REFERENCES "RAW_DATASET_VERSION_INFO"("ID") NOCHECK;
ALTER TABLE "CODE_VERSION" ADD CONSTRAINT "FK_GIT_SNAPSHOT_ID" FOREIGN KEY("GIT_SNAPSHOT_ID") REFERENCES "GIT_SNAPSHOT"("ID") NOCHECK;
ALTER TABLE "ARTIFACT" ADD CONSTRAINT "ARTIFACT_FK_EXPERIMENT_RUN_ID" FOREIGN KEY("EXPERIMENT_RUN_ID") REFERENCES "EXPERIMENT_RUN"("ID") NOCHECK;
ALTER TABLE "ENVIRONMENT_VARIABLES" ADD CONSTRAINT "FK_ENVIRONMENT_BLOB" FOREIGN KEY("ENVIRONMENT_BLOB_HASH") REFERENCES "ENVIRONMENT_BLOB"("BLOB_HASH") NOCHECK;
