package ai.verta.modeldb.blobs;

import static org.junit.Assert.*;
import static org.junit.Assume.*;

import ai.verta.modeldb.versioning.autogenerated._public.modeldb.versioning.model.*;
import com.pholser.junit.quickcheck.Property;
import com.pholser.junit.quickcheck.runner.JUnitQuickcheck;
import org.junit.runner.RunWith;

@RunWith(JUnitQuickcheck.class)
public class BlobEquality {
  @Property
  public void equality(Blob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(BlobDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(CodeBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(CodeDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(CommandLineEnvironmentDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(ConfigBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(ConfigDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(ContinuousHyperparameterSetConfigBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(DatasetBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(DatasetDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(DiscreteHyperparameterSetConfigBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(DockerEnvironmentBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(DockerEnvironmentDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(EnvironmentBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(EnvironmentDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(EnvironmentVariablesBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(EnvironmentVariablesDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(GitCodeBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(GitCodeDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(HyperparameterConfigBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(HyperparameterConfigDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(HyperparameterSetConfigBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(HyperparameterSetConfigDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(HyperparameterValuesConfigBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(NotebookCodeBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(NotebookCodeDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(PathDatasetBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(PathDatasetComponentBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(PathDatasetComponentDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(PathDatasetDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(PythonEnvironmentBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(PythonEnvironmentDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(PythonRequirementEnvironmentBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(PythonRequirementEnvironmentDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(S3DatasetBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(S3DatasetComponentBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(S3DatasetComponentDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(S3DatasetDiff b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(VersionEnvironmentBlob b) {
    assertTrue(b.equals(b));
  }

  @Property
  public void equality(VersionEnvironmentDiff b) {
    assertTrue(b.equals(b));
  }
}
