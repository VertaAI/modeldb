#ModelDB Properties
grpcServer:
  port: 8085
  requestTimeout: 30 #time in second

springServer:
  port: 8086
  shutdownTimeout: 30 #time in second

mdb_service_user:
  email:
  devKey:

artifactStoreConfig:
  artifactStoreType: NFS #S3, GCP, NFS
  pickArtifactStoreHostFromConfig: false
  artifactStoreServerHost: localhost:8086
  artifactStoreUrlProtocol: http
  artifactStoreServerPort: 8086
  artifactEndpoint:
    getArtifact: "/v1/artifact/getArtifact"
    storeArtifact: "/v1/artifact/storeArtifact"
  S3:
    cloudAccessKey: #for s3 aws account access-key
    cloudSecretKey: #for s3 aws account secret-key
    cloudBucketName: # if nfs then root dir. Note: bucket needs to exist alrady
    aws_region: us-east-1
    s3presignedURLEnabled: false
  NFS:
    nfsServerHost: localhost #IF 'artifactStoreServerHost' found then this value will be ignore
    nfsUrlProtocol: https #IF 'artifactStoreUrlProtocol' found then this value will be ignore
    nfsRootPath:
    pickNFSHostFromConfig: false #IF 'pickArtifactStoreHostFromConfig' found then this value will be ignore
    artifactEndpoint: #IF 'artifactEndpoint' found with parallel to 'artifactStoreType' then this value will be ignore
      getArtifact: "/v1/artifact1/getArtifact"
      storeArtifact: "/v1/artifact/storeArtifact"

# Database settings (type mongodb, couchbasedb, relational etc..)
database:
  DBType: relational
  timeout: 4
  liquibaseLockThreshold: 60 #time in second
  changeSetToRevertUntilTag: #ex: version_1.0
  minConnectionPoolSize: 5
  maxConnectionPoolSize: 20
  connectionTimeout: 300
  RdbConfiguration:
    RdbDatabaseName:
    RdbDriver: "org.postgresql.Driver"
    RdbDialect: "org.hibernate.dialect.PostgreSQLDialect"
    RdbUrl: "jdbc:postgresql://localhost:5432"
    RdbUsername:
    RdbPassword:

# Test Database settings (type mongodb, couchbasedb, relational etc..)
test:
  test-database:
    DBType: relational
    timeout: 4
    liquibaseLockThreshold: 60 #time in second
    changeSetToRevertUntilTag: #ex: version_1.0
    minConnectionPoolSize: 5
    maxConnectionPoolSize: 20
    connectionTimeout: 300
    RdbConfiguration:
      RdbDatabaseName: test
      RdbDriver: "org.postgresql.Driver"
      RdbDialect: "org.hibernate.dialect.PostgreSQLDialect"
      RdbUrl: "jdbc:postgresql://localhost:5432"
      RdbUsername:
      RdbPassword:
  testUsers:
    primaryUser:
      email:
      devKey:
    secondaryUser:
      email:
      devKey:

#AuthService Properties
authService:
  host: uacservice # Docker container name OR docker IP
  port: 50051

migration:
  DATASET_VERSIONING_MIGRATION:
    enable: true
    record_update_limit: 100
  SUB_ENTITIES_OWNERS_RBAC_MIGRATION:
    enable: true
  POPULATE_VERSION_MIGRATION:
    enable: true
    record_update_limit: 100
  #xyz :
  #  enable: true

feature-flag:
  disabled-authz: true
  public_sharing_enabled: false
  disabled-artifact-store: false

cron_job:
  update_parent_timestamp:
    initial_delay: 300 #delay timestamp in second, default 300second = 5min
    frequency: 60 #frequency to update parent timestamp in second, default 60
    record_update_limit: 100
  delete_entities:
    initial_delay: 300 #delay timestamp in second, default 300second = 5min
    frequency: 60 #frequency to delete entities in second, default 60
  update_run_environments:
    initial_delay: 300 #delay timestamp in second, default 300second = 5min
    frequency: 60 #frequency to delete entities in second, default 60
    record_update_limit: 100
  delete_audit_logs:
    initial_delay: 300 #delay timestamp in second, default 300second = 5min
    frequency: 60 #frequency to delete entities in second, default 60
    record_update_limit: 100

populateConnectionsBasedOnPrivileges: false

trial:
  enable: true
  restrictions:
    max_artifact_size_MB: #Integer value
    max_artifact_per_run: #Integer value
    max_experiment_run_per_workspace: #Integer value
