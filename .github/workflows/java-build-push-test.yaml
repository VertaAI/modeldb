name: Java Build, Push, Test

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - main
      - 'release/*'

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
  pull-requests: write # This is needed for the coverage plugin to write comments to the PR
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-push-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # need previous commit to find PR head commit info
          fetch-depth: 2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::493416687123:role/github-actions
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get branch names
        id: branch_names
        uses: tj-actions/branch-names@v6

      - name: Get docker image tag
        id: image_info
        run: |
          branch=$(echo ${{ steps.branch_names.outputs.current_branch }} | sed 's,/,_,g')
          # PRs checkout a merge of PR head with target. Branches checkout current head of branch.
          # When in a PR, use the PR head commit sha instead of the checkout commit sha.
          pr_sha="${{ github.event.pull_request.head.sha }}"
          sha=${pr_sha:-$GITHUB_SHA}
          sha_details=$(TZ=UTC git show -s --format=%cd--%h --date='format-local:%Y-%m-%dT%H-%M-%S' --abbrev=7 $sha)
          echo "tag=${branch}-${sha_details}" >> $GITHUB_OUTPUT

      - name: Comment Docker tag
        if: "(github.event_name == 'pull_request' && github.event.pull_request)"
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Docker tag: ${{ steps.image_info.outputs.tag }}
            Status: Building
          comment_tag: docker_tag_${{ steps.image_info.outputs.tag }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          cache: 'maven'
          server-id: github-verta # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Check formatting
        run: mvn spotless:check

      - name: Build and Publish to GitHub Packages Apache Maven
        run: ./build_and_publish_backend.sh
        env:
          GITHUB_TOKEN: ${{ github.token }}
          LOCAL_MAVEN_SETTINGS: ${{ github.workspace }}/settings.xml
          BRANCH_NAME: ${{ steps.branch_names.outputs.current_branch }}

      - name: Comment Docker tag
        if: "(github.event_name == 'pull_request' && github.event.pull_request)"
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Docker tag: ${{ steps.image_info.outputs.tag }}
            Status: Publishing
          comment_tag: docker_tag_${{ steps.image_info.outputs.tag }}

      - name: Inspect image to see if it already exists
        id: inspect_image
        continue-on-error: true
        run: |
          docker manifest inspect 493416687123.dkr.ecr.us-east-1.amazonaws.com/services/oss/modeldb/backend:${{ steps.image_info.outputs.tag }}

      - name: Build and push Docker image to ECR
        uses: docker/build-push-action@v4
        if: "!(steps.inspect_image.outcome == 'success')"
        with:
          context: backend
          push: true
          build-args: |
            BASE_IMAGE=493416687123.dkr.ecr.us-east-1.amazonaws.com/ops/containers/base/java:main-11-latest
          tags: |
            493416687123.dkr.ecr.us-east-1.amazonaws.com/services/oss/modeldb/backend:${{ steps.image_info.outputs.tag }}
        env:
          ECR_REGISTRY: 493416687123.dkr.ecr.us-east-1.amazonaws.com/services/oss/modeldb/backend

      - name: Comment Docker tag
        if: "(github.event_name == 'pull_request' && github.event.pull_request)"
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Docker tag: ${{ steps.image_info.outputs.tag }}
            Status: Testing
          comment_tag: docker_tag_${{ steps.image_info.outputs.tag }}

      # - name: Test
      #   env:
      #     VERTA_MODELDB_TEST_CONFIG: itconfig/config-test-h2.yaml
      #     LIQUIBASE_MIGRATION: true
      #     RUN_LIQUIBASE_SEPARATE: false
      #     LOG4J_CONFIGURATION_FILE: itconfig/log4j2.yaml
      #     LOG4J_FORMAT_MSG_NO_LOOKUPS: true
      #   run: JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8 ./test_backend.sh

      # - name: Upload Report
      #   uses: 'actions/upload-artifact@v2'
      #   with:
      #     name: report.xml
      #     path: ${{ github.workspace }}/backend/server/target/site/jacoco/jacoco.xml

      # - name: Jacoco Report to PR
      #   id: jacoco
      #   uses: madrapps/jacoco-report@v1.3
      #   with:
      #     paths: ${{ github.workspace }}/backend/server/target/site/jacoco/jacoco.xml
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     min-coverage-overall: 35
      #     min-coverage-changed-files: 70
      #     debug-mode: false

      # - name: Get the Coverage info
      #   run: |
      #     echo "Total coverage ${{ steps.jacoco.outputs.coverage-overall }}"
      #     echo "Changed Files coverage ${{ steps.jacoco.outputs.coverage-changed-files }}"

      - name: Comment Docker tag
        if: "(github.event_name == 'pull_request' && github.event.pull_request)"
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Docker tag: ${{ steps.image_info.outputs.tag }}
            Status: Complete
          comment_tag: docker_tag_${{ steps.image_info.outputs.tag }}

